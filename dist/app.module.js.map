{"version":3,"file":"app.module.js","sourceRoot":"/","sources":["app.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Module } from '@nestjs/common'\r\nimport { AcceptLanguageResolver, QueryResolver, HeaderResolver, CookieResolver, I18nModule } from 'nestjs-i18n'\r\nimport { ConfigModule, ConfigService } from '@nestjs/config'\r\nimport { MongooseModule } from '@nestjs/mongoose'\r\nimport { RouterModule } from '@nestjs/core'\r\nimport { MailerModule } from '@nestjs-modules/mailer'\r\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter'\r\n\r\nimport { AppController } from '@src/app.controller'\r\nimport { AppService } from '@src/app.service'\r\nimport { join } from 'path'\r\nimport configuration from '@src/config'\r\nimport { CommonModule } from '@common/common.module'\r\nimport { LearnerModule } from '@src/learner/learner.module'\r\nimport { AuthModule } from '@auth/auth.module'\r\nimport { InstructorModule } from '@instructor/instructor.module'\r\nimport { StaffModule } from '@staff/staff.module'\r\nimport { GardenManagerModule } from '@garden-manager/garden-manager.module'\r\nimport { GardenModule } from '@garden/garden.module'\r\nimport { RecruitmentModule } from '@recruitment/recruitment.module'\r\nimport { MediaModule } from '@media/media.module'\r\nimport { ClassModule } from '@src/class/class.module'\r\nimport { TerminusModule } from '@nestjs/terminus'\r\nimport { GardenTimesheetModule } from '@garden-timesheet/garden-timesheet.module'\r\nimport { CourseModule } from '@course/course.module'\r\nimport { ClassRequestModule } from '@class-request/class-request.module'\r\nimport { SettingModule } from '@setting/setting.module'\r\nimport { TransactionModule } from '@transaction/transaction.module'\r\nimport { QueueModule } from './queue/queue.module'\r\nimport { AttendanceModule } from '@attendance/attendance.module'\r\nimport { PayoutRequestModule } from '@payout-request/payout-request.module'\r\nimport { FeedbackModule } from '@feedback/feedback.module'\r\nimport { FirebaseModule } from './firebase/firebase.module'\r\nimport { CertificateModule } from '@certificate/certificate.module'\r\n\r\n@Module({\r\n  imports: [\r\n    I18nModule.forRootAsync({\r\n      useFactory: () => ({\r\n        fallbackLanguage: 'en',\r\n        loaderOptions: {\r\n          path: join(__dirname, '/i18n/'),\r\n          includeSubfolders: true,\r\n          watch: true\r\n        }\r\n      }),\r\n      resolvers: [\r\n        new QueryResolver(['lang', 'l']),\r\n        new HeaderResolver(['Accept-Language']),\r\n        new CookieResolver(),\r\n        AcceptLanguageResolver\r\n      ],\r\n      inject: [ConfigService]\r\n    }),\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [configuration],\r\n      cache: true\r\n    }),\r\n    MongooseModule.forRootAsync({\r\n      inject: [ConfigService],\r\n      useFactory: (configService: ConfigService) => ({\r\n        uri: configService.get<string>('mongodbUrl')\r\n      })\r\n    }),\r\n    MailerModule.forRootAsync({\r\n      useFactory: (configService: ConfigService) => ({\r\n        transport: {\r\n          host: configService.get('SMTP_HOST'),\r\n          port: configService.get('SMTP_PORT'),\r\n          secure: configService.get('SMTP_SECURE'),\r\n          auth: {\r\n            user: configService.get('SMTP_USERNAME'),\r\n            pass: configService.get('SMTP_PASSWORD')\r\n          }\r\n        },\r\n        defaults: {\r\n          from: `\"${configService.get('SMTP_FROM_NAME')}\" <${configService.get('SMTP_FROM_EMAIL')}>`\r\n        },\r\n        template: {\r\n          dir: join(__dirname, '/templates'),\r\n          adapter: new EjsAdapter(),\r\n          options: {\r\n            strict: false\r\n          }\r\n        }\r\n      }),\r\n      inject: [ConfigService]\r\n    }),\r\n    RouterModule.register([\r\n      {\r\n        path: 'settings',\r\n        module: SettingModule\r\n      },\r\n      {\r\n        path: 'auth',\r\n        module: AuthModule\r\n      },\r\n      {\r\n        path: 'media',\r\n        module: MediaModule\r\n      },\r\n      {\r\n        path: 'learners',\r\n        module: LearnerModule\r\n      },\r\n      {\r\n        path: 'instructors',\r\n        module: InstructorModule\r\n      },\r\n      {\r\n        path: 'staffs',\r\n        module: StaffModule\r\n      },\r\n      {\r\n        path: 'garden-managers',\r\n        module: GardenManagerModule\r\n      },\r\n      {\r\n        path: 'gardens',\r\n        module: GardenModule\r\n      },\r\n      {\r\n        path: 'recruitments',\r\n        module: RecruitmentModule\r\n      },\r\n      {\r\n        path: 'classes',\r\n        module: ClassModule\r\n      },\r\n      {\r\n        path: 'courses',\r\n        module: CourseModule\r\n      },\r\n      {\r\n        path: 'garden-timesheets',\r\n        module: GardenTimesheetModule\r\n      },\r\n      {\r\n        path: 'class-requests',\r\n        module: ClassRequestModule\r\n      },\r\n      {\r\n        path: 'payout-requests',\r\n        module: PayoutRequestModule\r\n      },\r\n      {\r\n        path: 'transactions',\r\n        module: TransactionModule\r\n      },\r\n      {\r\n        path: 'attendances',\r\n        module: AttendanceModule\r\n      },\r\n      {\r\n        path: 'feedbacks',\r\n        module: FeedbackModule\r\n      },\r\n      {\r\n        path: 'firebase',\r\n        module: FirebaseModule\r\n      },\r\n      {\r\n        path: 'certificates',\r\n        module: CertificateModule\r\n      }\r\n    ]),\r\n    TerminusModule.forRoot({\r\n      errorLogStyle: 'pretty'\r\n    }),\r\n    CommonModule,\r\n    SettingModule,\r\n    MediaModule,\r\n    LearnerModule,\r\n    InstructorModule,\r\n    StaffModule,\r\n    GardenManagerModule,\r\n    GardenModule,\r\n    RecruitmentModule,\r\n    ClassModule,\r\n    CourseModule,\r\n    GardenTimesheetModule,\r\n    AuthModule,\r\n    ClassRequestModule,\r\n    PayoutRequestModule,\r\n    TransactionModule,\r\n    QueueModule,\r\n    AttendanceModule,\r\n    FeedbackModule,\r\n    FirebaseModule,\r\n    CertificateModule\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService]\r\n})\r\nexport class AppModule {}\r\n"]}