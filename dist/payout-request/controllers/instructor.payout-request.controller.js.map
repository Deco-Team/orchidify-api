{"version":3,"file":"instructor.payout-request.controller.js","sourceRoot":"/","sources":["payout-request/controllers/instructor.payout-request.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Body, Post, Query, Param, Req, Patch } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, IDDataResponse, IDResponse, PaginationQuery, SuccessDataResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { PayoutRequestStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IPayoutRequestService } from '@payout-request/services/payout-request.service'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { CreatePayoutRequestDto } from '@payout-request/dto/create-payout-request.dto'\r\nimport {\r\n  InstructorViewPayoutRequestDetailDataResponse,\r\n  InstructorViewPayoutRequestListDataResponse,\r\n  QueryPayoutRequestDto,\r\n  ViewPayoutUsageDataResponse\r\n} from '@payout-request/dto/view-payout-request.dto'\r\nimport { PAYOUT_REQUEST_DETAIL_PROJECTION } from '@payout-request/contracts/constant'\r\nimport { Types } from 'mongoose'\r\nimport { ISettingService } from '@setting/services/setting.service'\r\nimport { SettingKey } from '@setting/contracts/constant'\r\nimport { IInstructorService } from '@instructor/services/instructor.service'\r\n\r\n@ApiTags('PayoutRequest - Instructor')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.INSTRUCTOR)\r\n@Controller('instructor')\r\nexport class InstructorPayoutRequestController {\r\n  constructor(\r\n    @Inject(IPayoutRequestService)\r\n    private readonly payoutRequestService: IPayoutRequestService,\r\n    @Inject(ISettingService)\r\n    private readonly settingService: ISettingService,\r\n    @Inject(IInstructorService)\r\n    private readonly instructorService: IInstructorService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Payout Request List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: InstructorViewPayoutRequestListDataResponse })\r\n  @Get()\r\n  async list(\r\n    @Req() req,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryPayoutRequestDto: QueryPayoutRequestDto\r\n  ) {\r\n    const { _id } = _.get(req, 'user')\r\n    queryPayoutRequestDto.createdBy = _id\r\n    return await this.payoutRequestService.list(pagination, queryPayoutRequestDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Payout Request Detail`\r\n  })\r\n  @ApiOkResponse({ type: InstructorViewPayoutRequestDetailDataResponse })\r\n  @ApiErrorResponse([Errors.PAYOUT_REQUEST_NOT_FOUND])\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') payoutRequestId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const payoutRequest = await this.payoutRequestService.findById(payoutRequestId, PAYOUT_REQUEST_DETAIL_PROJECTION)\r\n\r\n    if (!payoutRequest || payoutRequest.createdBy?.toString() !== _id)\r\n      throw new AppException(Errors.PAYOUT_REQUEST_NOT_FOUND)\r\n    return payoutRequest\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create Payout Request`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.CREATE_PAYOUT_REQUEST_LIMIT,\r\n    Errors.NOT_ENOUGH_BALANCE_TO_CREATE_PAYOUT_REQUEST,\r\n    Errors.PAYOUT_AMOUNT_LIMIT_PER_DAY\r\n  ])\r\n  @Post()\r\n  async createPayoutRequest(@Req() req, @Body() createPayoutRequestDto: CreatePayoutRequestDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n\r\n    const [payoutRequestsCount, payoutUsage] = await Promise.all([\r\n      this.payoutRequestService.countByCreatedByAndDate(_id, new Date()),\r\n      this.payoutRequestService.getPayoutUsage({ createdBy: _id, date: new Date() })\r\n    ])\r\n\r\n    const [createPayoutRequestLimitPerDay, payoutAmountLimitPerDay] = await Promise.all([\r\n      this.settingService.findByKey(SettingKey.CreatePayoutRequestLimitPerDay),\r\n      this.settingService.findByKey(SettingKey.PayoutAmountLimitPerDay)\r\n    ])\r\n    // BR-56: Instructors can create a maximum of 5 payout requests per day.\r\n    const createPayoutRequestLimit = Number(createPayoutRequestLimitPerDay.value) || 5\r\n    if (payoutRequestsCount > createPayoutRequestLimit) throw new AppException(Errors.CREATE_PAYOUT_REQUEST_LIMIT)\r\n\r\n    //BR-57: Daily maximum amount of payout requests is 50,000,000 VND.\r\n    const payoutAmountLimit = Number(payoutAmountLimitPerDay.value) || 50_000_000\r\n    if (payoutUsage + createPayoutRequestDto.amount > payoutAmountLimit)\r\n      throw new AppException(Errors.PAYOUT_AMOUNT_LIMIT_PER_DAY)\r\n\r\n    createPayoutRequestDto['status'] = PayoutRequestStatus.PENDING\r\n    createPayoutRequestDto['histories'] = [\r\n      {\r\n        status: PayoutRequestStatus.PENDING,\r\n        timestamp: new Date(),\r\n        userId: new Types.ObjectId(_id),\r\n        userRole: role\r\n      }\r\n    ]\r\n    createPayoutRequestDto['createdBy'] = new Types.ObjectId(_id)\r\n\r\n    // Create payout request with status PENDING\r\n    const payoutRequest = await this.payoutRequestService.createPayoutRequest(createPayoutRequestDto)\r\n\r\n    return new IDResponse(payoutRequest._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Cancel Payout Request`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.PAYOUT_REQUEST_NOT_FOUND, Errors.PAYOUT_REQUEST_STATUS_INVALID])\r\n  @Patch(':id([0-9a-f]{24})/cancel')\r\n  async cancel(@Req() req, @Param('id') payoutRequestId: string) {\r\n    const user = _.get(req, 'user')\r\n    return this.payoutRequestService.cancelPayoutRequest(payoutRequestId, user)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Payout Usage, Balance, Payout Request count`\r\n  })\r\n  @ApiOkResponse({ type: ViewPayoutUsageDataResponse })\r\n  @Get('usage')\r\n  async getPayoutUsage(@Req() req) {\r\n    const { _id } = _.get(req, 'user')\r\n\r\n    const [instructor, usage, count] = await Promise.all([\r\n      this.instructorService.findById(_id),\r\n      this.payoutRequestService.getPayoutUsage({ createdBy: _id, date: new Date() }),\r\n      this.payoutRequestService.countByCreatedByAndDate(_id, new Date())\r\n    ])\r\n\r\n    return {\r\n      balance: instructor.balance,\r\n      usage,\r\n      count\r\n    }\r\n  }\r\n}\r\n"]}