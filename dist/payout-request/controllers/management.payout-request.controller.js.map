{"version":3,"file":"management.payout-request.controller.js","sourceRoot":"/","sources":["payout-request/controllers/management.payout-request.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Param, Patch, Req, Body } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery, SuccessDataResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IPayoutRequestService } from '@payout-request/services/payout-request.service'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport {\r\n  QueryPayoutRequestDto,\r\n  StaffViewPayoutRequestDetailDataResponse,\r\n  StaffViewPayoutRequestListDataResponse\r\n} from '@payout-request/dto/view-payout-request.dto'\r\nimport { PAYOUT_REQUEST_DETAIL_PROJECTION, PAYOUT_REQUEST_LIST_PROJECTION } from '@payout-request/contracts/constant'\r\nimport { RejectPayoutRequestDto } from '@payout-request/dto/reject-payout-request.dto'\r\n\r\n@ApiTags('PayoutRequest - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementPayoutRequestController {\r\n  constructor(\r\n    @Inject(IPayoutRequestService)\r\n    private readonly payoutRequestService: IPayoutRequestService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Payout Request List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: StaffViewPayoutRequestListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryPayoutRequestDto: QueryPayoutRequestDto) {\r\n    return await this.payoutRequestService.list(pagination, queryPayoutRequestDto, PAYOUT_REQUEST_LIST_PROJECTION, [\r\n      {\r\n        path: 'createdBy',\r\n        select: ['_id', 'name', 'email', 'idCardPhoto', 'avatar', 'paymentInfo']\r\n      }\r\n    ])\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Payout Request Detail`\r\n  })\r\n  @ApiOkResponse({ type: StaffViewPayoutRequestDetailDataResponse })\r\n  @ApiErrorResponse([Errors.PAYOUT_REQUEST_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') payoutRequestId: string) {\r\n    const payoutRequest = await this.payoutRequestService.findById(payoutRequestId, PAYOUT_REQUEST_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'createdBy',\r\n        select: ['_id', 'name', 'email', 'idCardPhoto', 'avatar', 'paymentInfo']\r\n      }\r\n    ])\r\n\r\n    if (!payoutRequest) throw new AppException(Errors.PAYOUT_REQUEST_NOT_FOUND)\r\n    return payoutRequest\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Approve Payout Request`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.PAYOUT_REQUEST_NOT_FOUND,\r\n    Errors.CLASS_REQUEST_STATUS_INVALID,\r\n    Errors.COURSE_NOT_FOUND,\r\n    Errors.COURSE_STATUS_INVALID\r\n  ])\r\n  @Roles(UserRole.STAFF)\r\n  @Patch(':id([0-9a-f]{24})/approve')\r\n  async approve(@Req() req, @Param('id') payoutRequestId: string) {\r\n    const user = _.get(req, 'user')\r\n    return this.payoutRequestService.approvePayoutRequest(payoutRequestId, user)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Reject Payout Request`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.PAYOUT_REQUEST_NOT_FOUND,\r\n    Errors.CLASS_REQUEST_STATUS_INVALID,\r\n    Errors.COURSE_NOT_FOUND,\r\n    Errors.COURSE_STATUS_INVALID\r\n  ])\r\n  @Roles(UserRole.STAFF)\r\n  @Patch(':id([0-9a-f]{24})/reject')\r\n  async reject(\r\n    @Req() req,\r\n    @Param('id') payoutRequestId: string,\r\n    @Body() rejectPayoutRequestDto: RejectPayoutRequestDto\r\n  ) {\r\n    const user = _.get(req, 'user')\r\n    return this.payoutRequestService.rejectPayoutRequest(payoutRequestId, rejectPayoutRequestDto, user)\r\n  }\r\n}\r\n"]}