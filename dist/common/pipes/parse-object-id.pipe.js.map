{"version":3,"file":"parse-object-id.pipe.js","sourceRoot":"/","sources":["common/pipes/parse-object-id.pipe.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8CAAgD;AAChD,+DAA+D;AAC/D,2CAA0D;AAC1D,uCAAgC;AAGzB,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IAC5B,SAAS,CAAC,KAAU;QAClB,MAAM,aAAa,GAAG,gBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QACnD,IAAI,CAAC,aAAa;YAAE,MAAM,IAAI,4BAAY,CAAC,cAAM,CAAC,gBAAgB,CAAC,CAAA;QAEnE,OAAO,gBAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA;IAClD,CAAC;CACF,CAAA;AAPY,8CAAiB;4BAAjB,iBAAiB;IAD7B,IAAA,mBAAU,GAAE;GACA,iBAAiB,CAO7B","sourcesContent":["import { Errors } from '@common/contracts/error'\nimport { AppException } from '@common/exceptions/app.exception'\nimport { Injectable, PipeTransform } from '@nestjs/common'\nimport { Types } from 'mongoose'\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n  transform(value: any) {\n    const validObjectId = Types.ObjectId.isValid(value)\n    if (!validObjectId) throw new AppException(Errors.OBJECT_NOT_FOUND)\n\n    return Types.ObjectId.createFromHexString(value)\n  }\n}\n"]}