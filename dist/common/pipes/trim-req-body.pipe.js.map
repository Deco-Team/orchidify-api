{"version":3,"file":"trim-req-body.pipe.js","sourceRoot":"/","sources":["common/pipes/trim-req-body.pipe.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8CAAgD;AAChD,+DAA+D;AAC/D,2CAA4E;AAGrE,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IACtB,KAAK,CAAC,GAAQ;QACpB,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,CAAA;IAChD,CAAC;IAEO,IAAI,CAAC,MAAM;QACjB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YACtC,CAAC;iBAAM,CAAC;gBACN,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE,CAAC;oBACpC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;gBAClC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,OAAO,MAAM,CAAA;IACf,CAAC;IAED,SAAS,CAAC,MAAW,EAAE,QAA0B;QAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAA;QACzB,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;gBACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YAC1B,CAAC;YAED,MAAM,IAAI,4BAAY,CAAC,cAAM,CAAC,iBAAiB,CAAC,CAAA;QAClD,CAAC;QAED,OAAO,MAAM,CAAA;IACf,CAAC;CACF,CAAA;AA/BY,kDAAmB;8BAAnB,mBAAmB;IAD/B,IAAA,mBAAU,GAAE;GACA,mBAAmB,CA+B/B","sourcesContent":["import { Errors } from '@common/contracts/error'\nimport { AppException } from '@common/exceptions/app.exception'\nimport { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common'\n\n@Injectable()\nexport class TrimRequestBodyPipe implements PipeTransform {\n  private isObj(obj: any): boolean {\n    return typeof obj === 'object' && obj !== null\n  }\n\n  private trim(values) {\n    Object.keys(values).forEach((key) => {\n      if (this.isObj(values[key])) {\n        values[key] = this.trim(values[key])\n      } else {\n        if (typeof values[key] === 'string') {\n          values[key] = values[key].trim()\n        }\n      }\n    })\n\n    return values\n  }\n\n  transform(values: any, metadata: ArgumentMetadata) {\n    const { type } = metadata\n    if (type === 'body') {\n      if (this.isObj(values)) {\n        return this.trim(values)\n      }\n\n      throw new AppException(Errors.VALIDATION_FAILED)\n    }\n\n    return values\n  }\n}\n"]}