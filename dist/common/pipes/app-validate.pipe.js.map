{"version":3,"file":"app-validate.pipe.js","sourceRoot":"/","sources":["common/pipes/app-validate.pipe.ts"],"names":[],"mappings":";;;AAAA,2CAAmG;AACnG,+DAA+D;AAC/D,4BAA2B;AAE3B,MAAa,iBAAkB,SAAQ,uBAAc;IACnD,YAAY,OAA+B;QACzC,KAAK,CAAC;YACJ,GAAG,OAAO;YACV,SAAS,EAAE,IAAI;YACf,gBAAgB,EAAE,CAAC,mBAAsC,EAAE,EAAE,EAAE;gBAC7D,MAAM,IAAI,4BAAY,CAAC;oBACrB,KAAK,EAAE,gBAAgB;oBACvB,OAAO,EAAE,iBAAiB,CAAC,eAAe,CAAC,gBAAgB,CAAC;oBAC5D,UAAU,EAAE,mBAAU,CAAC,oBAAoB;oBAC3C,IAAI,EAAE,gBAAgB;iBACvB,CAAC,CAAA;YACJ,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,gBAAoC;QACzD,IAAI,OAAO,GAAQ,oBAAoB,CAAA;QACvC,IAAI,gBAAgB,CAAC,MAAM,EAAE,CAAC;YAC5B,MAAM,UAAU,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAA;YACtC,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAA;gBAClD,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YACxE,CAAC;iBAAM,CAAC;gBACN,OAAO,GAAG,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;YAClE,CAAC;QACH,CAAC;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;CACF;AA7BD,8CA6BC","sourcesContent":["import { ValidationPipe, ValidationPipeOptions, ValidationError, HttpStatus } from '@nestjs/common'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport * as _ from 'lodash'\r\n\r\nexport class AppValidationPipe extends ValidationPipe {\r\n  constructor(options?: ValidationPipeOptions) {\r\n    super({\r\n      ...options,\r\n      whitelist: true,\r\n      exceptionFactory: (validationErrors: ValidationError[] = []) => {\r\n        throw new AppException({\r\n          error: 'INVALID_PARAMS',\r\n          message: AppValidationPipe.getFirstMessage(validationErrors),\r\n          httpStatus: HttpStatus.UNPROCESSABLE_ENTITY,\r\n          data: validationErrors\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  static getFirstMessage(validationErrors?: ValidationError[]): string {\r\n    let message: any = 'Params are invalid'\r\n    if (validationErrors.length) {\r\n      const firstError = validationErrors[0]\r\n      if (firstError.constraints) {\r\n        console.log(Object.values(firstError.constraints))\r\n        message = _.get(Object.values(firstError.constraints), '[0]', message)\r\n      } else {\r\n        message = AppValidationPipe.getFirstMessage(firstError.children)\r\n      }\r\n    }\r\n    return message\r\n  }\r\n}\r\n"]}