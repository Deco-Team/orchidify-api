{"version":3,"file":"array-media-min-size.validator.js","sourceRoot":"/","sources":["common/validators/array-media-min-size.validator.ts"],"names":[],"mappings":";;;;;;;;;AAEA,2CAAgD;AAChD,qDAMwB;AAGxB,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAC9B,QAAQ,CAAC,KAAqB,EAAE,mBAAyC;QACvE,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QACjE,MAAM,WAAW,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,IAAkB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,KAAK,aAAa,CAAC,IAAI,EAAE,CAAA;QACrG,OAAO,WAAW,CAAC,MAAM,IAAI,GAAG,CAAA;IAClC,CAAC;IAED,cAAc,CAAC,IAA0B;QACvC,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QAClD,OAAO,aAAa,aAAa,6BAA6B,GAAG,GAAG,CAAA;IACtE,CAAC;CACF,CAAA;AAXK,0BAA0B;IAD/B,IAAA,qCAAmB,EAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;GAC7C,0BAA0B,CAW/B;AAED,SAAgB,iBAAiB,CAAC,GAAW,EAAE,aAAgC;IAC7E,OAAO,IAAA,wBAAe,EAAC,IAAA,yBAAO,GAAE,EAAE,IAAA,0BAAQ,EAAC,0BAA0B,EAAE,CAAC,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAA;AACnG,CAAC;AAFD,8CAEC","sourcesContent":["import { MediaResourceType } from '@media/contracts/constant'\r\nimport { BaseMediaDto } from '@media/dto/base-media.dto'\r\nimport { applyDecorators } from '@nestjs/common'\r\nimport {\r\n  ValidationArguments,\r\n  ValidatorConstraint,\r\n  ValidatorConstraintInterface,\r\n  IsArray,\r\n  Validate\r\n} from 'class-validator'\r\n\r\n@ValidatorConstraint({ name: 'arrayMediaMinSize' })\r\nclass ArrayMediaMinSizeValidator implements ValidatorConstraintInterface {\r\n  validate(value: BaseMediaDto[], validationArguments?: ValidationArguments): boolean {\r\n    const { min, resource_type } = validationArguments.constraints[0]\r\n    const mediaByType = value?.filter((item: BaseMediaDto) => item.resource_type === resource_type) || []\r\n    return mediaByType.length >= min\r\n  }\r\n\r\n  defaultMessage(args?: ValidationArguments) {\r\n    const { min, resource_type } = args.constraints[0]\r\n    return `Number of ${resource_type} must be not smaller than ${min}.`\r\n  }\r\n}\r\n\r\nexport function ArrayMediaMinSize(min: number, resource_type: MediaResourceType): PropertyDecorator {\r\n  return applyDecorators(IsArray(), Validate(ArrayMediaMinSizeValidator, [{ min, resource_type }]))\r\n}\r\n"]}