{"version":3,"file":"future-max-month.validator.js","sourceRoot":"/","sources":["common/validators/future-max-month.validator.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAAgD;AAChD,0CAAyC;AACzC,qDAMwB;AACxB,yCAAyC;AAGzC,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAC3B,QAAQ,CAAC,KAAW,EAAE,mBAAyC;QAC7D,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,oBAAW,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,oBAAW,CAAC,CAAA;QAChD,MAAM,KAAK,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;QAErD,OAAO,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;IACvE,CAAC;IAED,cAAc,CAAC,IAA0B;QACvC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;QACtC,OAAO,uBAAuB,KAAK,kBAAkB,CAAA;IACvD,CAAC;CACF,CAAA;AAbK,uBAAuB;IAD5B,IAAA,qCAAmB,EAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;GAC1C,uBAAuB,CAa5B;AAED,SAAgB,cAAc,CAAC,QAAgB,CAAC;IAC9C,OAAO,IAAA,wBAAe,EAAC,IAAA,8BAAY,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,IAAA,0BAAQ,EAAC,uBAAuB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AACpG,CAAC;AAFD,wCAEC","sourcesContent":["import { applyDecorators } from '@nestjs/common'\r\nimport * as moment from 'moment-timezone'\r\nimport {\r\n  ValidatorConstraint,\r\n  ValidatorConstraintInterface,\r\n  ValidationArguments,\r\n  Validate,\r\n  IsDateString\r\n} from 'class-validator'\r\nimport { VN_TIMEZONE } from '@src/config'\r\n\r\n@ValidatorConstraint({ name: 'futureMaxMonth' })\r\nclass FutureMaxMonthValidator implements ValidatorConstraintInterface {\r\n  validate(value: Date, validationArguments?: ValidationArguments): boolean {\r\n    const now = moment().tz(VN_TIMEZONE)\r\n    const dateMoment = moment(value).tz(VN_TIMEZONE)\r\n    const month = validationArguments.constraints[0] ?? 1\r\n\r\n    return dateMoment.subtract(month, 'month').isSameOrBefore(now, 'day')\r\n  }\r\n\r\n  defaultMessage(args?: ValidationArguments) {\r\n    const month = args.constraints[0] ?? 1\r\n    return `Date must be before ${month} months from now`\r\n  }\r\n}\r\n\r\nexport function FutureMaxMonth(month: number = 1): PropertyDecorator {\r\n  return applyDecorators(IsDateString({ strict: true }), Validate(FutureMaxMonthValidator, [month]))\r\n}\r\n"]}