{"version":3,"file":"learner.auth.controller.js","sourceRoot":"/","sources":["auth/controllers/learner.auth.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Body, Controller, Inject, Post, Req, UseGuards } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiCreatedResponse, ApiTags } from '@nestjs/swagger'\r\nimport { IAuthService } from '@auth/services/auth.service'\r\nimport { LoginDto } from '@auth/dto/login.dto'\r\nimport { ErrorResponse, SuccessDataResponse } from '@common/contracts/dto'\r\nimport { RefreshTokenDto, TokenDataResponse } from '@auth/dto/token.dto'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { LearnerRegisterDto, LearnerResendOtpDto, LearnerVerifyAccountDto } from '@auth/dto/learner-register.dto'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\n\r\n@ApiTags('Auth - Learner')\r\n@Controller('learner')\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\nexport class LearnerAuthController {\r\n  constructor(\r\n    @Inject(IAuthService)\r\n    private readonly authService: IAuthService\r\n  ) {}\r\n\r\n  @Post('login')\r\n  @ApiCreatedResponse({ type: TokenDataResponse })\r\n  @ApiErrorResponse([Errors.WRONG_EMAIL_OR_PASSWORD, Errors.INACTIVE_ACCOUNT, Errors.UNVERIFIED_ACCOUNT])\r\n  login(@Body() loginDto: LoginDto) {\r\n    return this.authService.login(loginDto, UserRole.LEARNER)\r\n  }\r\n\r\n  @Post('logout')\r\n  @ApiCreatedResponse({ type: SuccessDataResponse })\r\n  async logout(@Body() refreshTokenDto: RefreshTokenDto) {\r\n    return await this.authService.logout(refreshTokenDto)\r\n  }\r\n\r\n  @ApiBearerAuth()\r\n  @UseGuards(JwtAuthGuard.REFRESH_TOKEN)\r\n  @Post('refresh')\r\n  @ApiCreatedResponse({ type: TokenDataResponse })\r\n  @ApiErrorResponse([Errors.REFRESH_TOKEN_INVALID])\r\n  refreshToken(@Req() req) {\r\n    return this.authService.refreshToken(req.user?._id, req.user?.role, req.user?.refreshToken)\r\n  }\r\n\r\n  @Post('register')\r\n  @ApiCreatedResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.EMAIL_ALREADY_EXIST])\r\n  async register(@Body() LearnerRegisterDto: LearnerRegisterDto) {\r\n    return await this.authService.registerByLearner(LearnerRegisterDto)\r\n  }\r\n\r\n  @Post('verify-otp')\r\n  @ApiCreatedResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.LEARNER_NOT_FOUND,\r\n    Errors.INACTIVE_ACCOUNT,\r\n    Errors.WRONG_OTP_CODE,\r\n    Errors.OTP_CODE_IS_EXPIRED\r\n  ])\r\n  verifyOtp(@Body() LearnerVerifyAccountDto: LearnerVerifyAccountDto) {\r\n    return this.authService.verifyOtpByLearner(LearnerVerifyAccountDto)\r\n  }\r\n\r\n  @Post('resend-otp')\r\n  @ApiCreatedResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.LEARNER_NOT_FOUND, Errors.INACTIVE_ACCOUNT, Errors.RESEND_OTP_CODE_LIMITED])\r\n  resendOtp(@Body() learnerResendOtpDto: LearnerResendOtpDto) {\r\n    return this.authService.resendOtpByLearner(learnerResendOtpDto)\r\n  }\r\n}\r\n"]}