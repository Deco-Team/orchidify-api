{"version":3,"file":"jwt-access.strategy.js","sourceRoot":"/","sources":["auth/strategies/jwt-access.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAA2C;AAC3C,2CAA8C;AAC9C,+CAAmD;AAEnD,+CAAoE;AAG7D,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,IAAA,2BAAgB,EAAC,uBAAQ,EAAE,YAAY,CAAC;IAC7E,YAAY,aAA4B;QACtC,MAAM,IAAI,GAAoB;YAC5B,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,mBAAmB,CAAC;SAC5D,CAAA;QACD,KAAK,CAAC,IAAI,CAAC,CAAA;IACb,CAAC;IAED,QAAQ,CAAC,OAA2B;QAClC,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAA;IACrE,CAAC;CACF,CAAA;AAbY,8CAAiB;4BAAjB,iBAAiB;IAD7B,IAAA,mBAAU,GAAE;qCAEgB,sBAAa;GAD7B,iBAAiB,CAa7B","sourcesContent":["import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { UserRole } from '@src/common/contracts/constant'\nimport { ExtractJwt, Strategy, StrategyOptions } from 'passport-jwt'\n\n@Injectable()\nexport class JwtAccessStrategy extends PassportStrategy(Strategy, 'jwt-access') {\n  constructor(configService: ConfigService) {\n    const opts: StrategyOptions = {\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get<string>('JWT_ACCESS_SECRET')\n    }\n    super(opts)\n  }\n\n  validate(payload: AccessTokenPayload) {\n    return { _id: payload.sub, name: payload.name, role: payload.role }\n  }\n}\n\nexport type AccessTokenPayload = {\n  name: string\n  sub: string\n  role: UserRole\n  iat?: number\n  exp?: number\n}\n"]}