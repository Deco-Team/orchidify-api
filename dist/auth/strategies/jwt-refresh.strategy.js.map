{"version":3,"file":"jwt-refresh.strategy.js","sourceRoot":"/","sources":["auth/strategies/jwt-refresh.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAA2C;AAC3C,2CAA8C;AAC9C,+CAAmD;AAEnD,+CAAoE;AAG7D,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,IAAA,2BAAgB,EAAC,uBAAQ,EAAE,aAAa,CAAC;IAC/E,YAAY,aAA4B;QACtC,MAAM,IAAI,GAAoB;YAC5B,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,oBAAoB,CAAC;YAC5D,iBAAiB,EAAE,IAAI;SACxB,CAAA;QACD,KAAK,CAAC,IAAI,CAAC,CAAA;IACb,CAAC;IAED,QAAQ,CAAC,GAAG,EAAE,OAA4B;QACxC,MAAM,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3E,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,YAAY,EAAE,CAAA;IAC/D,CAAC;CACF,CAAA;AAfY,gDAAkB;6BAAlB,kBAAkB;IAD9B,IAAA,mBAAU,GAAE;qCAEgB,sBAAa;GAD7B,kBAAkB,CAe9B","sourcesContent":["import { Injectable } from '@nestjs/common'\r\nimport { ConfigService } from '@nestjs/config'\r\nimport { PassportStrategy } from '@nestjs/passport'\r\nimport { UserRole } from '@src/common/contracts/constant'\r\nimport { ExtractJwt, Strategy, StrategyOptions } from 'passport-jwt'\r\n\r\n@Injectable()\r\nexport class JwtRefreshStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\r\n  constructor(configService: ConfigService) {\r\n    const opts: StrategyOptions = {\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: configService.get<string>('JWT_REFRESH_SECRET'),\r\n      passReqToCallback: true\r\n    }\r\n    super(opts)\r\n  }\r\n\r\n  validate(req, payload: RefreshTokenPayload) {\r\n    const refreshToken = req.get('Authorization').replace('Bearer', '').trim();\r\n    return { _id: payload.sub, role: payload.role, refreshToken }\r\n  }\r\n}\r\n\r\nexport type RefreshTokenPayload = {\r\n  sub: string\r\n  role: UserRole\r\n  iat?: number\r\n  exp?: number\r\n}\r\n"]}