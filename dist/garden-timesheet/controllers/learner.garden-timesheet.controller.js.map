{"version":3,"file":"learner.garden-timesheet.controller.js","sourceRoot":"/","sources":["garden-timesheet/controllers/learner.garden-timesheet.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAsF;AACtF,6CAA4G;AAC5G,4BAA2B;AAC3B,oDAAqD;AACrD,2EAAwD;AACxD,8DAAqD;AACrD,qEAA0D;AAC1D,+DAAqD;AACrD,mFAA6F;AAa7F,wEAAkH;AAQ3G,IAAM,gCAAgC,GAAtC,MAAM,gCAAgC;IAC3C,YAEmB,sBAA+C;QAA/C,2BAAsB,GAAtB,sBAAsB,CAAyB;IAC/D,CAAC;IAOE,AAAN,KAAK,CAAC,eAAe,CAAQ,GAAG,EAAW,mBAAwC;QACjF,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAC7C,mBAAmB,CAAC,SAAS,GAAG,SAAS,CAAA;QACzC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAA;QACnF,OAAO,EAAE,IAAI,EAAE,CAAA;IACjB,CAAC;CAeF,CAAA;AA/BY,4EAAgC;AAWrC;IALL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,mBAAmB;KAC7B,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,uDAA+B,EAAE,CAAC;IACxD,IAAA,YAAG,EAAC,cAAc,CAAC;IACG,WAAA,IAAA,YAAG,GAAE,CAAA;IAAO,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAsB,2CAAmB;;uEAKlF;2CAhBU,gCAAgC;IAN5C,IAAA,iBAAO,EAAC,2BAA2B,CAAC;IACpC,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,OAAO,CAAC;IACvB,IAAA,mBAAU,EAAC,SAAS,CAAC;IAGjB,WAAA,IAAA,eAAM,EAAC,kDAAuB,CAAC,CAAA;;GAFvB,gCAAgC,CA+B5C","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Req, Param } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\nimport { ErrorResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { IGardenTimesheetService } from '@garden-timesheet/services/garden-timesheet.service'\r\nimport {\r\n  QueryTeachingTimesheetDto,\r\n  ViewTeachingTimesheetListDataResponse\r\n} from '@garden-timesheet/dto/view-teaching-timesheet.dto'\r\nimport {\r\n  QueryAvailableTimeDto,\r\n  ViewAvailableTimeDataResponse\r\n} from '@garden-timesheet/dto/view-available-timesheet.dto'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { ViewSlotDto } from '@garden-timesheet/dto/slot.dto'\r\nimport { QueryMyTimesheetDto, ViewMyTimesheetListDataResponse } from '@garden-timesheet/dto/view-my-timesheet.dto'\r\n\r\n@ApiTags('GardenTimesheet - Learner')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.LEARNER)\r\n@Controller('learner')\r\nexport class LearnerGardenTimesheetController {\r\n  constructor(\r\n    @Inject(IGardenTimesheetService)\r\n    private readonly gardenTimesheetService: IGardenTimesheetService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View My Timesheet`\r\n  })\r\n  @ApiOkResponse({ type: ViewMyTimesheetListDataResponse })\r\n  @Get('my-timesheet')\r\n  async viewMyTimesheet(@Req() req, @Query() queryMyTimesheetDto: QueryMyTimesheetDto) {\r\n    const { _id: learnerId } = _.get(req, 'user')\r\n    queryMyTimesheetDto.learnerId = learnerId\r\n    const docs = await this.gardenTimesheetService.viewMyTimesheet(queryMyTimesheetDto)\r\n    return { docs }\r\n  }\r\n\r\n  // @ApiOperation({\r\n  //   summary: `View Slot Detail`\r\n  // })\r\n  // @ApiOkResponse({ type: ViewSlotDto })\r\n  // @ApiErrorResponse([Errors.SLOT_NOT_FOUND])\r\n  // @Get('slots/:slotId([0-9a-f]{24})')\r\n  // async getSlotDetail(@Req() req, @Param('slotId') slotId: string) {\r\n  //   const { _id: instructorId } = _.get(req, 'user')\r\n  //   const slot = await this.gardenTimesheetService.findSlotBy({ slotId, instructorId })\r\n\r\n  //   if (!slot) throw new AppException(Errors.SLOT_NOT_FOUND)\r\n  //   return slot\r\n  // }\r\n}\r\n"]}