{"version":3,"file":"management.garden-timesheet.controller.js","sourceRoot":"/","sources":["garden-timesheet/controllers/management.garden-timesheet.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Req, Put, Body, Param } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\nimport { ErrorResponse, SuccessDataResponse, SuccessResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { GardenStatus, GardenTimesheetStatus, TimesheetType, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { IGardenTimesheetService } from '@garden-timesheet/services/garden-timesheet.service'\r\nimport {\r\n  QueryGardenTimesheetDto,\r\n  ViewGardenTimesheetListDataResponse\r\n} from '@garden-timesheet/dto/view-garden-timesheet.dto'\r\nimport { IGardenService } from '@garden/services/garden.service'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport {\r\n  QueryInstructorTimesheetDto,\r\n  ViewTeachingTimesheetListDataResponse\r\n} from '@garden-timesheet/dto/view-teaching-timesheet.dto'\r\nimport { UpdateGardenTimesheetDto } from '@garden-timesheet/dto/update-garden-timesheet.dto'\r\nimport { Types } from 'mongoose'\r\nimport { INotificationService } from '@notification/services/notification.service'\r\nimport { FCMNotificationDataType } from '@notification/contracts/constant'\r\nimport {\r\n  QuerySlotByGardenIdsDto,\r\n  QueryInactiveTimesheetByGardenDto,\r\n  ViewSlotListDataResponse\r\n} from '@garden-timesheet/dto/garden-manager-view-timesheet.dto'\r\nimport { ViewSlotDto } from '@garden-timesheet/dto/slot.dto'\r\n\r\n@ApiTags('GardenTimesheet - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementGardenTimesheetController {\r\n  constructor(\r\n    @Inject(IGardenTimesheetService)\r\n    private readonly gardenTimesheetService: IGardenTimesheetService,\r\n    @Inject(IGardenService)\r\n    private readonly gardenService: IGardenService,\r\n    @Inject(INotificationService)\r\n    private readonly notificationService: INotificationService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}][${UserRole.GARDEN_MANAGER}] View GardenTimesheet List`\r\n  })\r\n  @ApiOkResponse({ type: ViewGardenTimesheetListDataResponse })\r\n  @ApiErrorResponse([Errors.GARDEN_NOT_FOUND, Errors.GARDEN_INACTIVE])\r\n  @Roles(UserRole.STAFF, UserRole.GARDEN_MANAGER)\r\n  @Get()\r\n  async viewGardenTimesheet(@Req() req, @Query() queryGardenTimesheetDto: QueryGardenTimesheetDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const garden = await this.gardenService.findById(queryGardenTimesheetDto.gardenId)\r\n    if (!garden || (role === UserRole.GARDEN_MANAGER && garden?.gardenManagerId?.toString() !== _id))\r\n      throw new AppException(Errors.GARDEN_NOT_FOUND)\r\n    if (garden.status === GardenStatus.INACTIVE) throw new AppException(Errors.GARDEN_INACTIVE)\r\n\r\n    const docs = await this.gardenTimesheetService.viewGardenTimesheetList(queryGardenTimesheetDto, garden)\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Instructor Timesheet List`\r\n  })\r\n  @ApiOkResponse({ type: ViewTeachingTimesheetListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('instructor-timesheet')\r\n  async viewInstructorTimesheet(@Query() queryTeachingTimesheetDto: QueryInstructorTimesheetDto) {\r\n    const docs = await this.gardenTimesheetService.viewTeachingTimesheet(queryTeachingTimesheetDto)\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Update Garden Timesheet`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.GARDEN_TIMESHEET_NOT_FOUND, Errors.CAN_NOT_UPDATE_GARDEN_TIMESHEET])\r\n  @Roles(UserRole.STAFF)\r\n  @Put()\r\n  async updateGardenTimesheet(@Body() updateGardenTimesheetDto: UpdateGardenTimesheetDto) {\r\n    const { date, gardenId, status } = updateGardenTimesheetDto\r\n\r\n    const gardenTimesheet = await this.gardenTimesheetService.findOneBy({\r\n      date: date,\r\n      gardenId: new Types.ObjectId(gardenId)\r\n    })\r\n    if (!gardenTimesheet) throw new AppException(Errors.GARDEN_TIMESHEET_NOT_FOUND)\r\n\r\n    // BR-27: Garden timesheet is not allowed to update the time that there is a course already scheduled.\r\n    if (gardenTimesheet.slots.length > 0 && status === GardenTimesheetStatus.INACTIVE)\r\n      throw new AppException(Errors.CAN_NOT_UPDATE_GARDEN_TIMESHEET)\r\n\r\n    await this.gardenTimesheetService.update(\r\n      { _id: gardenTimesheet._id },\r\n      {\r\n        $set: { status }\r\n      }\r\n    )\r\n\r\n    // Send notification to garden manager\r\n    const garden = await this.gardenService.findById(gardenId.toString())\r\n    this.notificationService.sendFirebaseCloudMessaging({\r\n      title: `Lịch vườn ${garden.name} đã được cập nhật`,\r\n      body: `Lịch vườn ${garden.name} đã được cập nhật. Bấm để xem chi tiết.`,\r\n      receiverIds: [garden.gardenManagerId.toString()],\r\n      data: {\r\n        type: FCMNotificationDataType.GARDEN_TIMESHEET,\r\n        id: gardenTimesheet._id,\r\n        date: date?.toString(),\r\n        gardenId: gardenId.toString()\r\n      }\r\n    })\r\n\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.GARDEN_MANAGER}] View Slot List`\r\n  })\r\n  @ApiOkResponse({ type: ViewSlotListDataResponse })\r\n  @Roles(UserRole.GARDEN_MANAGER)\r\n  @Get('garden-manager/slots')\r\n  async gardenManagerViewSlotList(@Req() req, @Query() querySlotByGardenIdsDto: QuerySlotByGardenIdsDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    const gardens = await this.gardenService.findManyByGardenManagerId(_id)\r\n    const gardenIds = gardens.map((garden) => garden._id)\r\n    querySlotByGardenIdsDto.type = TimesheetType.DAY\r\n    querySlotByGardenIdsDto.gardenIds = gardenIds\r\n\r\n    const docs = await this.gardenTimesheetService.viewSlotsByGardenIds(querySlotByGardenIdsDto)\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.GARDEN_MANAGER}] View Inactive timesheet List`\r\n  })\r\n  @ApiOkResponse({ type: ViewGardenTimesheetListDataResponse })\r\n  @Roles(UserRole.GARDEN_MANAGER)\r\n  @Get('garden-manager/inactive-timesheets')\r\n  async gardenManagerViewUnavailableTimesheet(\r\n    @Req() req,\r\n    @Query() queryInactiveTimesheetByGardenDto: QueryInactiveTimesheetByGardenDto\r\n  ) {\r\n    const { _id } = _.get(req, 'user')\r\n    const garden = await this.gardenService.findById(queryInactiveTimesheetByGardenDto.gardenId)\r\n    if (!garden || garden?.gardenManagerId?.toString() !== _id) return { docs: [] }\r\n\r\n    const docs = await this.gardenTimesheetService.viewInactiveTimesheetByGarden(queryInactiveTimesheetByGardenDto)\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.GARDEN_MANAGER}] View Slot Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewSlotDto })\r\n  @ApiErrorResponse([Errors.SLOT_NOT_FOUND])\r\n  @Roles(UserRole.GARDEN_MANAGER)\r\n  @Get('garden-manager/slots/:slotId([0-9a-f]{24})')\r\n  async gardenManagerViewSlotDetail(@Req() req, @Param('slotId') slotId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const gardens = await this.gardenService.findManyByGardenManagerId(_id)\r\n    const gardenIds = gardens.map((garden) => garden._id.toString())\r\n    const slot = await this.gardenTimesheetService.findSlotBy({ slotId, gardenIds })\r\n\r\n    if (!slot) throw new AppException(Errors.SLOT_NOT_FOUND)\r\n    return slot\r\n  }\r\n}\r\n"]}