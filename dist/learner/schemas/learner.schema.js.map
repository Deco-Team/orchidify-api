{"version":3,"file":"learner.schema.js","sourceRoot":"/","sources":["learner/schemas/learner.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAE9D,iDAAgD;AAChD,yDAA6C;AAC7C,8DAA0D;AAgBnD,IAAM,OAAO,GAAb,MAAM,OAAO;IAClB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CA2BF,CAAA;AA9BY,0BAAO;AAKlB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;oCACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;qCAC3B;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;sCAC1B;AAGb;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;;yCACtC;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;uCACT;AAGd;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BACR,IAAI;4CAAA;AAGjB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sCACV;AAMb;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,wBAAa;QACnB,OAAO,EAAE,wBAAa,CAAC,UAAU;KAClC,CAAC;;uCACmB;kBA7BV,OAAO;IAZnB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,UAAU;QACtB,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;SACF;KACF,CAAC;;GACW,OAAO,CA8BnB;AAEY,QAAA,aAAa,GAAG,wBAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA;AAElE,qBAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC9B,qBAAa,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAA;AACjC,qBAAa,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { LearnerStatus } from '@common/contracts/constant'\r\n\r\nexport type LearnerDocument = HydratedDocument<Learner>\r\n\r\n@Schema({\r\n  collection: 'learners',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    }\r\n  }\r\n})\r\nexport class Learner {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  name: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  email: string\r\n\r\n  @Prop({ type: String, required: true, select: false })\r\n  password: string\r\n\r\n  @Prop({ type: String })\r\n  avatar: string\r\n\r\n  @Prop({ type: Date })\r\n  dateOfBirth: Date\r\n\r\n  @Prop({ type: String })\r\n  phone: string\r\n\r\n  @Prop({\r\n    enum: LearnerStatus,\r\n    default: LearnerStatus.UNVERIFIED\r\n  })\r\n  status: LearnerStatus\r\n}\r\n\r\nexport const LearnerSchema = SchemaFactory.createForClass(Learner)\r\n\r\nLearnerSchema.plugin(paginate)\r\nLearnerSchema.index({ email: 1 })\r\nLearnerSchema.index({ name: 'text', email: 'text' })"]}