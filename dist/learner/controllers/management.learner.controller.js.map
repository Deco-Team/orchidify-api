{"version":3,"file":"management.learner.controller.js","sourceRoot":"/","sources":["learner/controllers/management.learner.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Put, Body, Post, Query, Param, Patch } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport {\r\n  ErrorResponse,\r\n  IDDataResponse,\r\n  IDResponse,\r\n  PaginationQuery,\r\n  SuccessDataResponse,\r\n  SuccessResponse\r\n} from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { LearnerStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { IUserTokenService } from '@auth/services/user-token.service'\r\nimport { Types } from 'mongoose'\r\nimport { ILearnerService } from '@learner/services/learner.service'\r\nimport { LearnerDetailDataResponse, LearnerListDataResponse, QueryLearnerDto } from '@learner/dto/view-learner.dto'\r\nimport { LEARNER_DETAIL_PROJECTION } from '@learner/contracts/constant'\r\n\r\n@ApiTags('Learner - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementLearnerController {\r\n  constructor(\r\n    @Inject(ILearnerService)\r\n    private readonly learnerService: ILearnerService,\r\n    @Inject(IUserTokenService)\r\n    private readonly userTokenService: IUserTokenService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Learner List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: LearnerListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryLearnerDto: QueryLearnerDto) {\r\n    return await this.learnerService.list(pagination, queryLearnerDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Learner Detail`\r\n  })\r\n  @ApiOkResponse({ type: LearnerDetailDataResponse })\r\n  @ApiErrorResponse([Errors.LEARNER_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') learnerId: string) {\r\n    const learner = await this.learnerService.findById(learnerId, LEARNER_DETAIL_PROJECTION)\r\n    if (!learner) throw new AppException(Errors.LEARNER_NOT_FOUND)\r\n\r\n    return learner\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Deactivate Learner`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/deactivate')\r\n  async deactivate(@Param('id') learnerId: string) {\r\n    await Promise.all([\r\n      this.learnerService.update(\r\n        {\r\n          _id: learnerId\r\n        },\r\n        { status: LearnerStatus.INACTIVE }\r\n      ),\r\n      this.userTokenService.clearAllRefreshTokensOfUser(new Types.ObjectId(learnerId), UserRole.LEARNER)\r\n    ])\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Activate Learner`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/active')\r\n  async activate(@Param('id') learnerId: string) {\r\n    await this.learnerService.update(\r\n      {\r\n        _id: learnerId\r\n      },\r\n      { status: LearnerStatus.ACTIVE }\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n}\r\n"]}