{"version":3,"file":"instructor.class-request.controller.js","sourceRoot":"/","sources":["class-request/controllers/instructor.class-request.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Body, Post, Query, Param, Req, Patch } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, IDDataResponse, IDResponse, PaginationQuery, SuccessDataResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { ClassRequestStatus, ClassRequestType, ClassStatus, CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IClassRequestService } from '@class-request/services/class-request.service'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { CreatePublishClassRequestDto } from '@class-request/dto/create-publish-class-request.dto'\r\nimport {\r\n  InstructorViewClassRequestDetailDataResponse,\r\n  InstructorViewClassRequestListDataResponse,\r\n  QueryClassRequestDto\r\n} from '@class-request/dto/view-class-request.dto'\r\nimport { CLASS_REQUEST_DETAIL_PROJECTION } from '@class-request/contracts/constant'\r\nimport { Types } from 'mongoose'\r\nimport { ICourseService } from '@course/services/course.service'\r\nimport { IGardenTimesheetService } from '@garden-timesheet/services/garden-timesheet.service'\r\nimport { HelperService } from '@common/services/helper.service'\r\nimport { ISettingService } from '@setting/services/setting.service'\r\nimport { SettingKey } from '@setting/contracts/constant'\r\nimport { CreateCancelClassRequestDto } from '@class-request/dto/create-cancel-class-request.dto'\r\nimport { IClassService } from '@class/services/class.service'\r\nimport { ILearnerClassService } from '@class/services/learner-class.service'\r\n\r\n@ApiTags('ClassRequest - Instructor')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.INSTRUCTOR)\r\n@Controller('instructor')\r\nexport class InstructorClassRequestController {\r\n  constructor(\r\n    @Inject(IClassRequestService)\r\n    private readonly classRequestService: IClassRequestService,\r\n    @Inject(ICourseService)\r\n    private readonly courseService: ICourseService,\r\n    @Inject(IClassService)\r\n    private readonly classService: IClassService,\r\n    @Inject(IGardenTimesheetService)\r\n    private readonly gardenTimesheetService: IGardenTimesheetService,\r\n    @Inject(ILearnerClassService)\r\n    private readonly learnerClassService: ILearnerClassService,\r\n    @Inject(ISettingService)\r\n    private readonly settingService: ISettingService,\r\n    private readonly helperService: HelperService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Class Request List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: InstructorViewClassRequestListDataResponse })\r\n  @Get()\r\n  async list(\r\n    @Req() req,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryClassRequestDto: QueryClassRequestDto\r\n  ) {\r\n    const { _id } = _.get(req, 'user')\r\n    queryClassRequestDto.createdBy = _id\r\n    return await this.classRequestService.list(pagination, queryClassRequestDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Class Request Detail`\r\n  })\r\n  @ApiOkResponse({ type: InstructorViewClassRequestDetailDataResponse })\r\n  @ApiErrorResponse([Errors.CLASS_REQUEST_NOT_FOUND])\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') classRequestId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const classRequest = await this.classRequestService.findById(classRequestId, CLASS_REQUEST_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'class',\r\n        select: ['+sessions'],\r\n        populate: [\r\n          {\r\n            path: 'course',\r\n            select: ['code']\r\n          }\r\n        ]\r\n      }\r\n    ])\r\n\r\n    if (!classRequest || classRequest.createdBy?.toString() !== _id)\r\n      throw new AppException(Errors.CLASS_REQUEST_NOT_FOUND)\r\n    return classRequest\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create Publish Class Request`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.COURSE_NOT_FOUND,\r\n    Errors.COURSE_CAN_NOT_CREATE_REQUEST_TO_PUBLISH_CLASS,\r\n    Errors.CREATE_CLASS_REQUEST_LIMIT,\r\n    Errors.CREATE_CLASS_REQUEST_SLOT_NUMBERS_INVALID,\r\n    Errors.WEEKDAYS_OF_CLASS_INVALID\r\n  ])\r\n  @Post('publish-class')\r\n  async createPublishClassRequest(@Req() req, @Body() createPublishClassRequestDto: CreatePublishClassRequestDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const { startDate, weekdays, slotNumbers } = createPublishClassRequestDto\r\n\r\n    const isValidWeekdays = this.helperService.validateWeekdays(weekdays)\r\n    if (!isValidWeekdays) throw new AppException(Errors.WEEKDAYS_OF_CLASS_INVALID)\r\n\r\n    // BR-39: Instructors can only create 10 class requests per day.\r\n    const createClassRequestLimit =\r\n      Number((await this.settingService.findByKey(SettingKey.CreateClassRequestLimitPerDay)).value) || 10\r\n    const classRequestsCount = await this.classRequestService.countByCreatedByAndDate(_id, new Date())\r\n    if (classRequestsCount > createClassRequestLimit) throw new AppException(Errors.CREATE_CLASS_REQUEST_LIMIT)\r\n\r\n    const course = await this.courseService.findById(createPublishClassRequestDto.courseId.toString(), ['+sessions'])\r\n    if (!course || course.status === CourseStatus.DELETED || course.instructorId.toString() !== _id)\r\n      throw new AppException(Errors.COURSE_NOT_FOUND)\r\n\r\n    // BR-40: When a request for a class has been made, if that request has not been approved by staff, a new request for that class cannot be created.\r\n    const pendingClassRequests = await this.classRequestService.findMany({\r\n      courseId: course._id,\r\n      status: ClassRequestStatus.PENDING,\r\n      type: ClassRequestType.PUBLISH_CLASS\r\n    })\r\n    if (pendingClassRequests.length > 0) throw new AppException(Errors.COURSE_CAN_NOT_CREATE_REQUEST_TO_PUBLISH_CLASS)\r\n\r\n    // validate slots with startDate, weekdays\r\n    const { duration } = course\r\n    const availableSlots = await this.gardenTimesheetService.viewAvailableTime({\r\n      startDate,\r\n      duration,\r\n      weekdays,\r\n      instructorId: _id\r\n    })\r\n    if (_.difference(slotNumbers, availableSlots.slotNumbers).length !== 0)\r\n      throw new AppException(Errors.CREATE_CLASS_REQUEST_SLOT_NUMBERS_INVALID)\r\n\r\n    createPublishClassRequestDto['status'] = ClassRequestStatus.PENDING\r\n    createPublishClassRequestDto['histories'] = [\r\n      {\r\n        status: ClassRequestStatus.PENDING,\r\n        timestamp: new Date(),\r\n        userId: new Types.ObjectId(_id),\r\n        userRole: role\r\n      }\r\n    ]\r\n    createPublishClassRequestDto['createdBy'] = new Types.ObjectId(_id)\r\n    createPublishClassRequestDto['courseId'] = new Types.ObjectId(createPublishClassRequestDto.courseId)\r\n    createPublishClassRequestDto['type'] = ClassRequestType.PUBLISH_CLASS\r\n    createPublishClassRequestDto['metadata'] = {\r\n      weekdays,\r\n      slotNumbers,\r\n      startDate,\r\n      ...course.toObject()\r\n    }\r\n\r\n    // Create class request with status PENDING\r\n    const classRequest = await this.classRequestService.createPublishClassRequest(createPublishClassRequestDto)\r\n\r\n    return new IDResponse(classRequest._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create Cancel Class Request`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.CLASS_NOT_FOUND,\r\n    Errors.CLASS_CAN_NOT_CREATE_REQUEST_TO_CANCEL_CLASS,\r\n    Errors.CREATE_CLASS_REQUEST_LIMIT,\r\n    Errors.CLASS_STATUS_INVALID\r\n  ])\r\n  @Post('cancel-class')\r\n  async createCancelClassRequest(@Req() req, @Body() createCancelClassRequestDto: CreateCancelClassRequestDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const { classId } = createCancelClassRequestDto\r\n\r\n    // BR-39: Instructors can only create 10 class requests per day.\r\n    const createClassRequestLimit =\r\n      Number((await this.settingService.findByKey(SettingKey.CreateClassRequestLimitPerDay)).value) || 10\r\n    const classRequestsCount = await this.classRequestService.countByCreatedByAndDate(_id, new Date())\r\n    if (classRequestsCount > createClassRequestLimit) throw new AppException(Errors.CREATE_CLASS_REQUEST_LIMIT)\r\n\r\n    const courseClass = await this.classService.findById(\r\n      classId.toString(),\r\n      ['-sessions', '-histories'],\r\n      [\r\n        {\r\n          path: 'course',\r\n          select: ['_id', 'code', 'title']\r\n        }\r\n      ]\r\n    )\r\n    if (!courseClass || courseClass.instructorId.toString() !== _id) throw new AppException(Errors.CLASS_NOT_FOUND)\r\n    if (courseClass.status !== ClassStatus.PUBLISHED) throw new AppException(Errors.CLASS_STATUS_INVALID)\r\n\r\n    // BR-40: When a request for a class has been made, if that request has not been approved by staff, a new request for that class cannot be created.\r\n    const pendingClassRequests = await this.classRequestService.findMany({\r\n      classId: new Types.ObjectId(classId),\r\n      status: ClassRequestStatus.PENDING,\r\n      type: ClassRequestType.CANCEL_CLASS\r\n    })\r\n    if (pendingClassRequests.length > 0) throw new AppException(Errors.CLASS_CAN_NOT_CREATE_REQUEST_TO_CANCEL_CLASS)\r\n\r\n    // BR-41: A cancel-class request can only be created if the class has no learners enrolled.\r\n    const learnerClasses = await this.learnerClassService.findMany({\r\n      classId: new Types.ObjectId(classId)\r\n    })\r\n    if (learnerClasses.length > 0) throw new AppException(Errors.CLASS_CAN_NOT_CREATE_REQUEST_TO_CANCEL_CLASS)\r\n\r\n    createCancelClassRequestDto['status'] = ClassRequestStatus.PENDING\r\n    createCancelClassRequestDto['histories'] = [\r\n      {\r\n        status: ClassRequestStatus.PENDING,\r\n        timestamp: new Date(),\r\n        userId: new Types.ObjectId(_id),\r\n        userRole: role\r\n      }\r\n    ]\r\n    createCancelClassRequestDto['createdBy'] = new Types.ObjectId(_id)\r\n    createCancelClassRequestDto['classId'] = new Types.ObjectId(classId)\r\n    createCancelClassRequestDto['courseId'] = new Types.ObjectId(_.get(courseClass, 'course._id'))\r\n    createCancelClassRequestDto['type'] = ClassRequestType.CANCEL_CLASS\r\n    createCancelClassRequestDto['metadata'] = {\r\n      code: _.get(courseClass, 'code'),\r\n      title: _.get(courseClass, 'title'),\r\n      course: {\r\n        code: _.get(courseClass, 'course.code'),\r\n        title: _.get(courseClass, 'course.title'),\r\n      }\r\n    }\r\n\r\n    // Create class request with status PENDING\r\n    const classRequest = await this.classRequestService.createCancelClassRequest(createCancelClassRequestDto)\r\n\r\n    return new IDResponse(classRequest._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Cancel Publish/Cancel Class Request`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.CLASS_REQUEST_NOT_FOUND,\r\n    Errors.CLASS_REQUEST_STATUS_INVALID,\r\n    Errors.COURSE_NOT_FOUND,\r\n    Errors.CLASS_NOT_FOUND,\r\n    Errors.COURSE_STATUS_INVALID\r\n  ])\r\n  @Patch(':id([0-9a-f]{24})/cancel')\r\n  async cancel(@Req() req, @Param('id') classRequestId: string) {\r\n    const user = _.get(req, 'user')\r\n    return this.classRequestService.cancelClassRequest(classRequestId, user)\r\n  }\r\n}\r\n"]}