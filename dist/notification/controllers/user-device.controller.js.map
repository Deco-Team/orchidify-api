{"version":3,"file":"user-device.controller.js","sourceRoot":"/","sources":["notification/controllers/user-device.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA2F;AAC3F,6CAA4G;AAC5G,4BAA2B;AAE3B,oDAA2F;AAC3F,qEAA0D;AAC1D,+DAAqD;AACrD,wDAAgD;AAChD,2FAA4E;AAC5E,yEAA+E;AAC/E,4DAAqG;AACrG,yEAA+D;AAC/D,uCAAgC;AAChC,8DAAuE;AACvE,mGAAyF;AAOlF,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,YAEmB,iBAAqC,EAErC,wBAAmD;QAFnD,sBAAiB,GAAjB,iBAAiB,CAAoB;QAErC,6BAAwB,GAAxB,wBAAwB,CAA2B;IACnE,CAAC;IAQE,AAAN,KAAK,CAAC,GAAG,CAAQ,GAAG,EAAqB,QAAgB;QACvD,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QACxC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;QACxE,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI,UAAU,CAAC,QAAQ,KAAK,IAAI;YACrF,MAAM,IAAI,4BAAY,CAAC,cAAM,CAAC,qBAAqB,CAAC,CAAA;QAEtD,OAAO,UAAU,CAAA;IACnB,CAAC;IAQK,AAAN,KAAK,CAAC,MAAM,CAAQ,GAAG,EAAU,mBAAwC;QACvE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAExC,mBAAmB,CAAC,MAAM,GAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;QACpD,mBAAmB,CAAC,QAAQ,GAAG,IAAI,CAAA;QACnC,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,mBAAmB,CAAC,QAAQ,EAAE,EAAE,mBAAmB,EAAE;YACnG,MAAM,EAAE,IAAI;SACb,CAAC,CAAA;QAGF,IAAI,CAAC,+BAA+B,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;QAErE,OAAO,IAAI,qBAAe,CAAC,IAAI,CAAC,CAAA;IAClC,CAAC;IAEO,KAAK,CAAC,+BAA+B,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE;QAChE,IAAI,QAAQ,KAAK,mBAAQ,CAAC,KAAK;YAAE,OAAM;QAEvC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;YACxD,MAAM,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;YAClC,MAAM,EAAE,2BAAgB,CAAC,MAAM;SAChC,CAAC,CAAA;QACF,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC;YAAE,OAAM;QAEpC,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;QACnE,MAAM,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;YACnD,KAAK,EAAE,0BAA0B;YACjC,MAAM;SACP,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AA3DY,oDAAoB;AAczB;IANL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,yBAAyB;KACnC,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,8CAA4B,EAAE,CAAC;IACrD,IAAA,yCAAgB,EAAC,CAAC,cAAM,CAAC,qBAAqB,CAAC,CAAC;IAChD,IAAA,YAAG,EAAC,WAAW,CAAC;IACN,WAAA,IAAA,YAAG,GAAE,CAAA;IAAO,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;;;;+CAOvC;AAQK;IANL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,oBAAoB;KAC9B,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,yBAAmB,EAAE,CAAC;IAC5C,IAAA,yCAAgB,EAAC,EAAE,CAAC;IACpB,IAAA,aAAI,GAAE;IACO,WAAA,IAAA,YAAG,GAAE,CAAA;IAAO,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAsB,qCAAmB;;kDAaxE;+BA1CU,oBAAoB;IALhC,IAAA,iBAAO,EAAC,YAAY,CAAC;IACrB,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,mBAAU,EAAC,cAAc,CAAC;IAGtB,WAAA,IAAA,eAAM,EAAC,wCAAkB,CAAC,CAAA;IAE1B,WAAA,IAAA,eAAM,EAAC,sDAAyB,CAAC,CAAA;;GAJzB,oBAAoB,CA2DhC","sourcesContent":["import { Controller, Get, UseGuards, Inject, Param, Req, Post, Body } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, SuccessDataResponse, SuccessResponse } from '@common/contracts/dto'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IUserDeviceService } from '@notification/services/user-device.service'\r\nimport { CreateUserDeviceDto, UserDeviceDetailDataResponse } from '@notification/dto/user-device.dto'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Types } from 'mongoose'\r\nimport { UserDeviceStatus, UserRole } from '@common/contracts/constant'\r\nimport { IFirebaseMessagingService } from '@firebase/services/firebase.messaging.service'\r\n\r\n@ApiTags('UserDevice')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('user-devices')\r\nexport class UserDeviceController {\r\n  constructor(\r\n    @Inject(IUserDeviceService)\r\n    private readonly userDeviceService: IUserDeviceService,\r\n    @Inject(IFirebaseMessagingService)\r\n    private readonly firebaseMessagingService: IFirebaseMessagingService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View User Device Detail`\r\n  })\r\n  @ApiOkResponse({ type: UserDeviceDetailDataResponse })\r\n  @ApiErrorResponse([Errors.USER_DEVICE_NOT_FOUND])\r\n  @Get(':fcmToken')\r\n  async get(@Req() req, @Param('fcmToken') fcmToken: string) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const userDevice = await this.userDeviceService.findByFcmToken(fcmToken)\r\n    if (!userDevice || userDevice.userId.toString() !== _id || userDevice.userRole !== role)\r\n      throw new AppException(Errors.USER_DEVICE_NOT_FOUND)\r\n\r\n    return userDevice\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create User Device`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([])\r\n  @Post()\r\n  async create(@Req() req, @Body() createUserDeviceDto: CreateUserDeviceDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n\r\n    createUserDeviceDto.userId = new Types.ObjectId(_id)\r\n    createUserDeviceDto.userRole = role\r\n    await this.userDeviceService.update({ fcmToken: createUserDeviceDto.fcmToken }, createUserDeviceDto, {\r\n      upsert: true\r\n    })\r\n\r\n    // subscribe to topic\r\n    this.subscribeFirebaseMessagingTopic({ userId: _id, userRole: role })\r\n\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  private async subscribeFirebaseMessagingTopic({ userId, userRole }) {\r\n    if (userRole !== UserRole.STAFF) return\r\n\r\n    const userDevices = await this.userDeviceService.findMany({\r\n      userId: new Types.ObjectId(userId),\r\n      status: UserDeviceStatus.ACTIVE\r\n    })\r\n    if (userDevices.length === 0) return\r\n\r\n    const tokens = userDevices.map((userDevice) => userDevice.fcmToken)\r\n    await this.firebaseMessagingService.subscribeToTopic({\r\n      topic: 'STAFF_NOTIFICATION_TOPIC',\r\n      tokens\r\n    })\r\n  }\r\n}\r\n"]}