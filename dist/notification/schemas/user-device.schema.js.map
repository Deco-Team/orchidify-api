{"version":3,"file":"user-device.schema.js","sourceRoot":"/","sources":["notification/schemas/user-device.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,iDAAgD;AAChD,yDAA6C;AAC7C,8DAAuE;AAiBhE,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CAwBF,CAAA;AA3BY,gCAAU;AAKrB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;uCACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvC,gBAAK,CAAC,QAAQ;0CAAA;AAGtB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;4CACrC;AAGlB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;4CACvB;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;2CACR;AAGf;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sCACb;AAMV;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,2BAAgB;QACtB,OAAO,EAAE,2BAAgB,CAAC,MAAM;KACjC,CAAC;;0CACsB;qBA1Bb,UAAU;IAbtB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,cAAc;QAC1B,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;YACD,QAAQ,EAAE,IAAI;SACf;KACF,CAAC;;GACW,UAAU,CA2BtB;AAEY,QAAA,gBAAgB,GAAG,wBAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;AACxE,wBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { UserDeviceStatus, UserRole } from '@common/contracts/constant'\r\n\r\nexport type UserDeviceDocument = HydratedDocument<UserDevice>\r\n\r\n@Schema({\r\n  collection: 'user-devices',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    },\r\n    virtuals: true\r\n  }\r\n})\r\nexport class UserDevice {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: Types.ObjectId, required: true })\r\n  userId: Types.ObjectId\r\n\r\n  @Prop({ type: String, enum: UserRole, required: true })\r\n  userRole: UserRole\r\n\r\n  @Prop({ type: String, required: true })\r\n  fcmToken: string\r\n\r\n  @Prop({ type: String })\r\n  browser: string\r\n\r\n  @Prop({ type: String })\r\n  os: string\r\n\r\n  @Prop({\r\n    enum: UserDeviceStatus,\r\n    default: UserDeviceStatus.ACTIVE\r\n  })\r\n  status: UserDeviceStatus\r\n}\r\n\r\nexport const UserDeviceSchema = SchemaFactory.createForClass(UserDevice)\r\nUserDeviceSchema.plugin(paginate)\r\n// UserDeviceSchema.index({ userId: 1, userRole: 1 })\r\n"]}