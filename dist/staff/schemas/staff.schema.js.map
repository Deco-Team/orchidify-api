{"version":3,"file":"staff.schema.js","sourceRoot":"/","sources":["staff/schemas/staff.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAE9D,iDAAgD;AAChD,yDAA6C;AAC7C,8DAAkE;AAgB3D,IAAM,KAAK,GAAX,MAAM,KAAK;IAChB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CA8BF,CAAA;AAjCY,sBAAK;AAKhB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;kCACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;mCAC3B;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;oCAC1B;AAGb;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wCACtB;AAGjB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;;uCACtC;AAMhB;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,sBAAW;QACjB,OAAO,EAAE,sBAAW,CAAC,MAAM;KAC5B,CAAC;;qCACiB;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0CACpB;AAMnB;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,CAAC,mBAAQ,CAAC,KAAK,EAAE,mBAAQ,CAAC,KAAK,CAAC;QACtC,OAAO,EAAE,mBAAQ,CAAC,KAAK;KACxB,CAAC;;mCACmC;gBAhC1B,KAAK;IAZjB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;SACF;KACF,CAAC;;GACW,KAAK,CAiCjB;AAEY,QAAA,WAAW,GAAG,wBAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;AAE9D,mBAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC5B,mBAAW,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAA;AAC/B,mBAAW,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { StaffStatus, UserRole } from '@common/contracts/constant'\r\n\r\nexport type StaffDocument = HydratedDocument<Staff>\r\n\r\n@Schema({\r\n  collection: 'staffs',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    }\r\n  }\r\n})\r\nexport class Staff {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  name: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  email: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  staffCode: string\r\n\r\n  @Prop({ type: String, required: true, select: false })\r\n  password: string\r\n\r\n  @Prop({\r\n    enum: StaffStatus,\r\n    default: StaffStatus.ACTIVE\r\n  })\r\n  status: StaffStatus\r\n\r\n  @Prop({ type: String, required: true })\r\n  idCardPhoto: string\r\n\r\n  @Prop({\r\n    enum: [UserRole.ADMIN, UserRole.STAFF],\r\n    default: UserRole.STAFF\r\n  })\r\n  role: UserRole.ADMIN | UserRole.STAFF\r\n}\r\n\r\nexport const StaffSchema = SchemaFactory.createForClass(Staff)\r\n\r\nStaffSchema.plugin(paginate)\r\nStaffSchema.index({ email: 1 })\r\nStaffSchema.index({ name: 'text', email: 'text' })\r\n"]}