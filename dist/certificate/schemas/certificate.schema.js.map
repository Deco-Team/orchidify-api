{"version":3,"file":"certificate.schema.js","sourceRoot":"/","sources":["certificate/schemas/certificate.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,iDAAgD;AAChD,yDAA6C;AAE7C,mFAAkE;AAgB3D,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CAkBF,CAAA;AArBY,kCAAW;AAKtB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;wCACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;yCACX;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;yCACX;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wCAC5B;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACtC,gBAAK,CAAC,QAAQ;4CAAA;AAGvB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,mCAAY,CAAC,IAAI,EAAG,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACxD,gBAAK,CAAC,QAAQ;mDAAA;sBApBnB,WAAW;IAZvB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,cAAc;QAC1B,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;SACF;KACF,CAAC;;GACW,WAAW,CAqBvB;AAEY,QAAA,iBAAiB,GAAG,wBAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;AAE1E,yBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { LearnerClass } from '@class/schemas/learner-class.schema'\r\n\r\nexport type CertificateDocument = HydratedDocument<Certificate>\r\n\r\n@Schema({\r\n  collection: 'certificates',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    }\r\n  }\r\n})\r\nexport class Certificate {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: String })\r\n  name: string\r\n\r\n  @Prop({ type: String })\r\n  code: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  url: string\r\n\r\n  @Prop({ type: Types.ObjectId, required: true })\r\n  ownerId: Types.ObjectId\r\n\r\n  @Prop({ type: Types.ObjectId, ref: LearnerClass.name,  required: true })\r\n  learnerClassId: Types.ObjectId\r\n}\r\n\r\nexport const CertificateSchema = SchemaFactory.createForClass(Certificate)\r\n\r\nCertificateSchema.plugin(paginate)\r\n// CertificateSchema.index({ code: 1 })\r\n"]}