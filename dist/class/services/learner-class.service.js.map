{"version":3,"file":"learner-class.service.js","sourceRoot":"/","sources":["class/services/learner-class.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@nestjs/common'\r\nimport * as _ from 'lodash'\r\nimport { ILearnerClassRepository } from '@src/class/repositories/learner-class.repository'\r\nimport { LearnerClass, LearnerClassDocument } from '@src/class/schemas/learner-class.schema'\r\nimport { Connection, FilterQuery, PopulateOptions, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose'\r\nimport { InjectConnection } from '@nestjs/mongoose'\r\nimport { PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { QueryClassDto } from '@class/dto/view-class.dto'\r\nimport { ClassStatus, CourseLevel } from '@common/contracts/constant'\r\nimport { LEARNER_VIEW_MY_CLASS_LIST_PROJECTION } from '@class/contracts/constant'\r\nimport { HelperService } from '@common/services/helper.service'\r\nimport { IClassRepository } from '@class/repositories/class.repository'\r\n\r\nexport const ILearnerClassService = Symbol('ILearnerClassService')\r\n\r\nexport interface ILearnerClassService {\r\n  create(createLearnerClassDto: any, options?: SaveOptions | undefined): Promise<LearnerClassDocument>\r\n  findById(\r\n    learnerClassId: string,\r\n    projection?: string | Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ): Promise<LearnerClassDocument>\r\n  update(\r\n    conditions: FilterQuery<LearnerClass>,\r\n    payload: UpdateQuery<LearnerClass>,\r\n    options?: QueryOptions | undefined\r\n  ): Promise<LearnerClassDocument>\r\n  findOneBy(\r\n    conditions: FilterQuery<LearnerClass>,\r\n    projection?: string | Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ): Promise<LearnerClassDocument>\r\n  findMany(\r\n    conditions: FilterQuery<LearnerClassDocument>,\r\n    projection?: Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ): Promise<LearnerClassDocument[]>\r\n  listMyClassesByLearner(learnerId: string, pagination: PaginationParams, queryClassDto: QueryClassDto)\r\n}\r\n\r\n@Injectable()\r\nexport class LearnerClassService implements ILearnerClassService {\r\n  constructor(\r\n    @Inject(ILearnerClassRepository)\r\n    private readonly learnerClassRepository: ILearnerClassRepository,\r\n    @Inject(IClassRepository)\r\n    private readonly classRepository: IClassRepository,\r\n    @InjectConnection() readonly connection: Connection,\r\n    private readonly helperService: HelperService\r\n  ) {}\r\n\r\n  public async create(createLearnerClassDto: any, options?: SaveOptions | undefined) {\r\n    const learnerClass = await this.learnerClassRepository.create(createLearnerClassDto, options)\r\n    return learnerClass\r\n  }\r\n\r\n  public async findById(\r\n    learnerClassId: string,\r\n    projection?: string | Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ) {\r\n    const learnerClass = await this.learnerClassRepository.findOne({\r\n      conditions: {\r\n        _id: learnerClassId\r\n      },\r\n      projection,\r\n      populates\r\n    })\r\n    return learnerClass\r\n  }\r\n\r\n  public async findOneBy(\r\n    conditions: FilterQuery<LearnerClassDocument>,\r\n    projection?: string | Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ) {\r\n    const learnerClass = await this.learnerClassRepository.findOne({\r\n      conditions,\r\n      projection,\r\n      populates\r\n    })\r\n    return learnerClass\r\n  }\r\n\r\n  public async findMany(\r\n    conditions: FilterQuery<LearnerClassDocument>,\r\n    projection?: Record<string, any>,\r\n    populates?: Array<PopulateOptions>\r\n  ) {\r\n    const learnerClasses = await this.learnerClassRepository.findMany({\r\n      conditions,\r\n      projection,\r\n      populates\r\n    })\r\n    return learnerClasses\r\n  }\r\n\r\n  public update(\r\n    conditions: FilterQuery<LearnerClass>,\r\n    payload: UpdateQuery<LearnerClass>,\r\n    options?: QueryOptions | undefined\r\n  ) {\r\n    return this.learnerClassRepository.findOneAndUpdate(conditions, payload, options)\r\n  }\r\n\r\n  async listMyClassesByLearner(\r\n    learnerId: string,\r\n    pagination: PaginationParams,\r\n    queryClassDto: QueryClassDto,\r\n    projection = LEARNER_VIEW_MY_CLASS_LIST_PROJECTION\r\n  ) {\r\n    const { title, type, level, status, fromPrice, toPrice } = queryClassDto\r\n    const { sort, limit, page } = pagination\r\n    const learnerClassFilter: Record<string, any> = {\r\n      learnerId: new Types.ObjectId(learnerId)\r\n    }\r\n    const classFilter: Record<string, any> = {}\r\n\r\n    if (title) {\r\n      classFilter['$text'] = {\r\n        $search: title\r\n      }\r\n    }\r\n\r\n    if (type) {\r\n      classFilter['type'] = type\r\n    }\r\n\r\n    const validLevel = level?.filter((level) =>\r\n      [CourseLevel.BASIC, CourseLevel.INTERMEDIATE, CourseLevel.ADVANCED].includes(level)\r\n    )\r\n    if (validLevel?.length > 0) {\r\n      classFilter['level'] = {\r\n        $in: validLevel\r\n      }\r\n    }\r\n\r\n    const validStatus = status?.filter((status) =>\r\n      [ClassStatus.PUBLISHED, ClassStatus.IN_PROGRESS, ClassStatus.COMPLETED, ClassStatus.CANCELED].includes(status)\r\n    )\r\n    if (validStatus?.length > 0) {\r\n      classFilter['status'] = {\r\n        $in: validStatus\r\n      }\r\n    }\r\n\r\n    if (fromPrice !== undefined && toPrice !== undefined) {\r\n      classFilter['price'] = {\r\n        $gte: fromPrice,\r\n        $lte: toPrice\r\n      }\r\n    }\r\n\r\n    const classes = await this.classRepository.model.aggregate([\r\n      {\r\n        $match: classFilter\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'learner-classes',\r\n          localField: '_id',\r\n          foreignField: 'classId',\r\n          as: 'learnerClasses',\r\n          pipeline: [\r\n            {\r\n              $match: learnerClassFilter\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        $match: {\r\n          learnerClasses: { $ne: [] }\r\n        }\r\n      },\r\n      {\r\n        $addFields: {\r\n          learnerClass: {\r\n            $arrayElemAt: ['$learnerClasses', 0]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        $project: {\r\n          learnerClasses: 0\r\n        }\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'instructors',\r\n          localField: 'instructorId',\r\n          foreignField: '_id',\r\n          as: 'instructors'\r\n        }\r\n      },\r\n      {\r\n        $addFields: {\r\n          instructor: {\r\n            $arrayElemAt: ['$instructors', 0]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 1,\r\n          code: 1,\r\n          title: 1,\r\n          level: 1,\r\n          type: 1,\r\n          thumbnail: 1,\r\n          status: 1,\r\n          progress: 1,\r\n          instructor: {\r\n            name: 1\r\n          },\r\n          price: 1\r\n        }\r\n      },\r\n      {\r\n        $facet: {\r\n          count: [\r\n            {\r\n              $count: 'totalDocs'\r\n            }\r\n          ],\r\n          list: [\r\n            {\r\n              $sort: sort\r\n            },\r\n            {\r\n              $skip: (page - 1) * limit\r\n            },\r\n            {\r\n              $limit: limit\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ])\r\n    const totalDocs = _.get(classes, '[0].count[0].totalDocs', 0)\r\n    return this.helperService.convertDataToPaging({\r\n      docs: classes[0].list,\r\n      totalDocs,\r\n      limit,\r\n      page\r\n    })\r\n  }\r\n}\r\n"]}