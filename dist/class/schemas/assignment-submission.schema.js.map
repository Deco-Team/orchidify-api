{"version":3,"file":"assignment-submission.schema.js","sourceRoot":"/","sources":["class/schemas/assignment-submission.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,yDAA6C;AAC7C,mEAAwD;AACxD,2DAAgD;AAChD,yEAAyD;AACzD,8DAA6D;AAC7D,iDAAsC;AAiB/B,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CAwBF,CAAA;AA3BY,oDAAoB;AAK/B;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;iDACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,CAAC,6BAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;yDACpB;AAG3B;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;mDACV;AAGb;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sDACP;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,2BAAgB,EAAE,OAAO,EAAE,2BAAgB,CAAC,SAAS,EAAE,CAAC;;oDAC5D;AAGxB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,8BAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvD,gBAAK,CAAC,QAAQ;0DAAA;AAG5B;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,oBAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvD,gBAAK,CAAC,QAAQ;qDAAA;AAGvB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,wBAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvD,gBAAK,CAAC,QAAQ;uDAAA;+BA1Bd,oBAAoB;IAbhC,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,wBAAwB;QACpC,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;YACD,QAAQ,EAAE,IAAI;SACf;KACF,CAAC;;GACW,oBAAoB,CA2BhC;AAEY,QAAA,0BAA0B,GAAG,wBAAa,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAA;AAC5F,kCAA0B,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAA;AAEnE,kCAA0B,CAAC,OAAO,CAAC,SAAS,EAAE;IAC5C,GAAG,EAAE,SAAS;IACd,UAAU,EAAE,WAAW;IACvB,YAAY,EAAE,KAAK;IACnB,OAAO,EAAE,IAAI;CACd,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport { Transform } from 'class-transformer'\r\nimport { BaseMediaDto } from '@media/dto/base-media.dto'\r\nimport { Assignment } from './assignment.schema'\r\nimport { Learner } from '@learner/schemas/learner.schema'\r\nimport { SubmissionStatus } from '@common/contracts/constant'\r\nimport { Class } from './class.schema'\r\n\r\nexport type AssignmentSubmissionDocument = HydratedDocument<AssignmentSubmission>\r\n\r\n@Schema({\r\n  collection: 'assignment-submissions',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    },\r\n    virtuals: true\r\n  }\r\n})\r\nexport class AssignmentSubmission {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: [BaseMediaDto], required: true })\r\n  attachments: BaseMediaDto[]\r\n\r\n  @Prop({ type: Number })\r\n  point: number\r\n\r\n  @Prop({ type: String })\r\n  feedback: string\r\n\r\n  @Prop({ type: String, enum: SubmissionStatus, default: SubmissionStatus.SUBMITTED })\r\n  status: SubmissionStatus\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Assignment.name, required: true })\r\n  assignmentId: Types.ObjectId\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Class.name, required: true })\r\n  classId: Types.ObjectId\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Learner.name, required: true })\r\n  learnerId: Types.ObjectId\r\n}\r\n\r\nexport const AssignmentSubmissionSchema = SchemaFactory.createForClass(AssignmentSubmission)\r\nAssignmentSubmissionSchema.index({ assignmentId: 1, learnerId: 1 })\r\n\r\nAssignmentSubmissionSchema.virtual('learner', {\r\n  ref: 'Learner',\r\n  localField: 'learnerId',\r\n  foreignField: '_id',\r\n  justOne: true\r\n})\r\n"]}