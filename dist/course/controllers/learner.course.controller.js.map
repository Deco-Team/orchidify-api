{"version":3,"file":"learner.course.controller.js","sourceRoot":"/","sources":["course/controllers/learner.course.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, Inject, Query, Param, UseGuards, Req } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery } from '@common/contracts/dto'\r\nimport { ClassStatus, CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { ICourseService } from '@course/services/course.service'\r\nimport {\r\n  LearnerViewCourseDetailDataResponse,\r\n  LearnerViewCourseListDataResponse,\r\n  PublicCourseDetailDataResponse,\r\n  PublicQueryCourseDto,\r\n  PublishCourseListDataResponse\r\n} from '@course/dto/view-course.dto'\r\nimport { PUBLIC_COURSE_DETAIL_PROJECTION } from '@course/contracts/constant'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { PUBLIC_COURSE_CLASS_DETAIL_PROJECTION } from '@class/contracts/constant'\r\nimport { COURSE_INSTRUCTOR_DETAIL_PROJECTION } from '@instructor/contracts/constant'\r\nimport { Types } from 'mongoose'\r\nimport { Course } from '@course/schemas/course.schema'\r\nimport { ILearnerClassService } from '@class/services/learner-class.service'\r\nimport { MIN_PRICE } from '@src/config'\r\n\r\n@ApiTags('Course - Viewer/Learner')\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@Controller()\r\nexport class CourseController {\r\n  constructor(\r\n    @Inject(ICourseService)\r\n    private readonly courseService: ICourseService,\r\n    @Inject(ILearnerClassService)\r\n    private readonly learnerClassService: ILearnerClassService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[Viewer] View Public Course List`\r\n  })\r\n  @ApiBearerAuth()\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: PublishCourseListDataResponse })\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryCourseDto: PublicQueryCourseDto) {\r\n    return await this.courseService.listPublicCourses(pagination, queryCourseDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.LEARNER}] View Course List`\r\n  })\r\n  @ApiBearerAuth()\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: LearnerViewCourseListDataResponse })\r\n  @UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n  @Roles(UserRole.LEARNER)\r\n  @Get('learner')\r\n  async listForLearner(\r\n    @Req() req,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryCourseDto: PublicQueryCourseDto\r\n  ) {\r\n    const userAuth = _.get(req, 'user')\r\n    return await this.courseService.listByLearner(pagination, queryCourseDto, userAuth)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.LEARNER}] View Best Seller Course List`\r\n  })\r\n  @ApiBearerAuth()\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: LearnerViewCourseListDataResponse })\r\n  @UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n  @Roles(UserRole.LEARNER)\r\n  @Get('learner/best-seller')\r\n  async listBestSellerCourseForLearner(\r\n    @Req() req,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryCourseDto: PublicQueryCourseDto\r\n  ) {\r\n    const userAuth = _.get(req, 'user')\r\n    return await this.courseService.listBestSellerCoursesByLearner(pagination, queryCourseDto, userAuth)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.LEARNER}] View Recommended Course List`\r\n  })\r\n  @ApiBearerAuth()\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: LearnerViewCourseListDataResponse })\r\n  @UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n  @Roles(UserRole.LEARNER)\r\n  @Get('learner/recommended')\r\n  async listRecommendedCourseForLearner(\r\n    @Req() req,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryCourseDto: PublicQueryCourseDto\r\n  ) {\r\n    const userAuth = _.get(req, 'user')\r\n    return await this.courseService.listRecommendedCoursesByLearner(pagination, queryCourseDto, userAuth)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.LEARNER}] View Course Detail`\r\n  })\r\n  @ApiBearerAuth()\r\n  @ApiOkResponse({ type: LearnerViewCourseDetailDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_NOT_FOUND])\r\n  @UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n  @Roles(UserRole.LEARNER)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') courseId: string) {\r\n    const { _id: learnerId } = _.get(req, 'user')\r\n    const [course, learnerClasses] = await Promise.all([\r\n      this.courseService.findById(courseId, PUBLIC_COURSE_DETAIL_PROJECTION, [\r\n        {\r\n          path: 'classes',\r\n          select: PUBLIC_COURSE_CLASS_DETAIL_PROJECTION,\r\n          match: { status: ClassStatus.PUBLISHED },\r\n          populate: [\r\n            {\r\n              path: 'learnerClass',\r\n              select: ['_id'],\r\n              match: { learnerId: new Types.ObjectId(learnerId) }\r\n            },\r\n            {\r\n              path: 'garden',\r\n              select: ['_id', 'name']\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          path: 'instructor',\r\n          select: COURSE_INSTRUCTOR_DETAIL_PROJECTION\r\n        },\r\n        {\r\n          path: 'combos',\r\n          select: ['childCourseIds', 'discount'],\r\n          match: { status: CourseStatus.ACTIVE }\r\n        }\r\n      ]),\r\n      this.learnerClassService.findMany({\r\n        learnerId: new Types.ObjectId(learnerId)\r\n      })\r\n    ])\r\n    if (!course || [CourseStatus.ACTIVE].includes(course.status) === false)\r\n      throw new AppException(Errors.COURSE_NOT_FOUND)\r\n\r\n    const learnedCourseIdSet = new Set(learnerClasses.map((learnerClass) => learnerClass.courseId.toString()))\r\n\r\n    const courseData = course.toObject()\r\n    const combos = _.get(courseData, 'combos') as Course[]\r\n    let discount = 0\r\n    if (combos.length !== 0) {\r\n      const clonedCourseIdSet = new Set([...learnedCourseIdSet])\r\n      clonedCourseIdSet.delete(course._id.toString())\r\n      for (const combo of combos) {\r\n        const matchedCourseIds = combo.childCourseIds.filter((childCourseId) => {\r\n          return childCourseId.toString() !== course._id.toString() && clonedCourseIdSet.has(childCourseId.toString())\r\n        })\r\n        if (matchedCourseIds.length > 0) {\r\n          const newDiscount = combo.discount\r\n          discount = newDiscount > discount ? newDiscount : discount\r\n        }\r\n      }\r\n    }\r\n    _.set(courseData, 'discount', discount)\r\n    let finalPrice = Math.round((_.get(courseData, 'price') * (100 - discount)) / 100)\r\n    finalPrice = finalPrice < MIN_PRICE ? MIN_PRICE : finalPrice\r\n    _.set(courseData, 'finalPrice', finalPrice)\r\n    _.unset(courseData, 'combos')\r\n\r\n    return courseData\r\n  }\r\n}\r\n"]}