{"version":3,"file":"management.course.controller.js","sourceRoot":"/","sources":["course/controllers/management.course.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Param } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { ICourseService } from '@course/services/course.service'\r\nimport { ICourseSessionService } from '@course/services/course-session.service'\r\nimport { ICourseAssignmentService } from '@course/services/course-assignment.service'\r\nimport { CourseDetailDataResponse, CourseListDataResponse, StaffQueryCourseDto } from '@course/dto/view-course.dto'\r\nimport { COURSE_DETAIL_PROJECTION } from '@course/contracts/constant'\r\nimport { ViewCourseSessionDetailDataResponse } from '@course/dto/view-course-session.dto'\r\nimport { ViewCourseAssignmentDetailDataResponse } from '@course/dto/view-course-assignment.dto'\r\nimport { PUBLIC_COURSE_INSTRUCTOR_DETAIL_PROJECTION } from '@instructor/contracts/constant'\r\n\r\n@ApiTags('Course - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementCourseController {\r\n  constructor(\r\n    @Inject(ICourseService)\r\n    private readonly courseService: ICourseService,\r\n    @Inject(ICourseSessionService)\r\n    private readonly courseSessionService: ICourseSessionService,\r\n    @Inject(ICourseAssignmentService)\r\n    private readonly courseAssignmentService: ICourseAssignmentService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: CourseListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryCourseDto: StaffQueryCourseDto) {\r\n    return await this.courseService.listByStaff(pagination, queryCourseDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course Detail`\r\n  })\r\n  @ApiOkResponse({ type: CourseDetailDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') courseId: string) {\r\n    const course = await this.courseService.findById(courseId, COURSE_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'instructor',\r\n        select: PUBLIC_COURSE_INSTRUCTOR_DETAIL_PROJECTION\r\n      }\r\n    ])\r\n    if (!course || [CourseStatus.ACTIVE].includes(course.status) === false)\r\n      throw new AppException(Errors.COURSE_NOT_FOUND)\r\n    return course\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course Session Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewCourseSessionDetailDataResponse })\r\n  @ApiErrorResponse([Errors.SESSION_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':courseId([0-9a-f]{24})/sessions/:sessionId([0-9a-f]{24})')\r\n  async getSessionDetail(@Param('courseId') courseId: string, @Param('sessionId') sessionId: string) {\r\n    const session = await this.courseSessionService.findOneBy({ sessionId, courseId })\r\n\r\n    if (!session) throw new AppException(Errors.SESSION_NOT_FOUND)\r\n    return session\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course Assignment Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewCourseAssignmentDetailDataResponse })\r\n  @ApiErrorResponse([Errors.ASSIGNMENT_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':courseId([0-9a-f]{24})/assignments/:assignmentId([0-9a-f]{24})')\r\n  async getAssignmentDetail(@Param('courseId') courseId: string, @Param('assignmentId') assignmentId: string) {\r\n    const assignment = await this.courseAssignmentService.findOneBy({ assignmentId, courseId })\r\n\r\n    if (!assignment) throw new AppException(Errors.ASSIGNMENT_NOT_FOUND)\r\n    return assignment\r\n  }\r\n}\r\n"]}