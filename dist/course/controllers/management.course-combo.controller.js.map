{"version":3,"file":"management.course-combo.controller.js","sourceRoot":"/","sources":["course/controllers/management.course-combo.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAiF;AACjF,6CAAsH;AAGtH,oDAAsE;AACtE,2EAAwD;AACxD,8DAAmE;AACnE,qEAA0D;AAC1D,+DAAqD;AACrD,yEAA+D;AAC/D,wDAAgD;AAChD,2FAA4E;AAC5E,uFAAsF;AACtF,oDAAiH;AACjH,kEAAoF;AACpF,2EAA2E;AAC3E,wEAI0C;AAOnC,IAAM,+BAA+B,GAArC,MAAM,+BAA+B;IAC1C,YAEmB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;IACvD,CAAC;IASE,AAAN,KAAK,CAAC,IAAI,CAAe,UAA4B,EAAW,cAAwC;QACtG,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,CAAA;IAC9E,CAAC;IASK,AAAN,KAAK,CAAC,SAAS,CAAc,QAAgB;QAC3C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,EAAE,yCAA8B,EAAE;YACnG;gBACE,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,8CAAmC;aAC5C;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,MAAM,EAAE,+CAAoC;aAC7C;SACF,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,IAAI,CAAC,uBAAY,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,KAAK;YAC9E,MAAM,IAAI,4BAAY,CAAC,cAAM,CAAC,sBAAsB,CAAC,CAAA;QACvD,OAAO,WAAW,CAAA;IACpB,CAAC;CACF,CAAA;AAvCY,0EAA+B;AAapC;IAPL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,IAAI,mBAAQ,CAAC,KAAK,0BAA0B;KACtD,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,qBAAe,EAAE,CAAC;IACnC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,4DAAoC,EAAE,CAAC;IAC7D,IAAA,uBAAK,EAAC,mBAAQ,CAAC,KAAK,CAAC;IACrB,IAAA,YAAG,EAAC,OAAO,CAAC;IACD,WAAA,IAAA,iCAAU,GAAE,CAAA;IAAgC,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAiB,gDAAwB;;2DAEvG;AASK;IAPL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,IAAI,mBAAQ,CAAC,KAAK,4BAA4B;KACxD,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,8DAAsC,EAAE,CAAC;IAC/D,IAAA,yCAAgB,EAAC,CAAC,cAAM,CAAC,sBAAsB,CAAC,CAAC;IACjD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,KAAK,CAAC;IACrB,IAAA,YAAG,EAAC,yBAAyB,CAAC;IACd,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;gEAc3B;0CAtCU,+BAA+B;IAL3C,IAAA,iBAAO,EAAC,0BAA0B,CAAC;IACnC,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,mBAAU,EAAC,YAAY,CAAC;IAGpB,WAAA,IAAA,eAAM,EAAC,0CAAmB,CAAC,CAAA;;GAFnB,+BAA+B,CAuC3C","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Param } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { CHILD_COURSE_COMBO_DETAIL_PROJECTION, COURSE_COMBO_DETAIL_PROJECTION } from '@course/contracts/constant'\r\nimport { COURSE_INSTRUCTOR_DETAIL_PROJECTION } from '@instructor/contracts/constant'\r\nimport { ICourseComboService } from '@course/services/course-combo.service'\r\nimport {\r\n  StaffQueryCourseComboDto,\r\n  StaffViewCourseComboDetailDataResponse,\r\n  StaffViewCourseComboListDataResponse\r\n} from '@course/dto/view-course-combo.dto'\r\n\r\n@ApiTags('CourseCombo - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementCourseComboController {\r\n  constructor(\r\n    @Inject(ICourseComboService)\r\n    private readonly courseComboService: ICourseComboService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course Combo List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: StaffViewCourseComboListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('combo')\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryCourseDto: StaffQueryCourseComboDto) {\r\n    return await this.courseComboService.listByStaff(pagination, queryCourseDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course Combo Detail`\r\n  })\r\n  @ApiOkResponse({ type: StaffViewCourseComboDetailDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_COMBO_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get('combo/:id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') courseId: string) {\r\n    const courseCombo = await this.courseComboService.findById(courseId, COURSE_COMBO_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'instructor',\r\n        select: COURSE_INSTRUCTOR_DETAIL_PROJECTION\r\n      },\r\n      {\r\n        path: 'childCourses',\r\n        select: CHILD_COURSE_COMBO_DETAIL_PROJECTION\r\n      }\r\n    ])\r\n    if (!courseCombo || [CourseStatus.ACTIVE].includes(courseCombo.status) === false)\r\n      throw new AppException(Errors.COURSE_COMBO_NOT_FOUND)\r\n    return courseCombo\r\n  }\r\n}\r\n"]}