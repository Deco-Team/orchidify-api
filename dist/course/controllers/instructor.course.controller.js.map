{"version":3,"file":"instructor.course.controller.js","sourceRoot":"/","sources":["course/controllers/instructor.course.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Put, Body, Post, Query, Param, Req, Delete } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport {\r\n  ErrorResponse,\r\n  IDDataResponse,\r\n  IDResponse,\r\n  PaginationQuery,\r\n  SuccessDataResponse,\r\n  SuccessResponse\r\n} from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { Types } from 'mongoose'\r\nimport { ICourseService } from '@course/services/course.service'\r\nimport { ICourseSessionService } from '@course/services/course-session.service'\r\nimport { ICourseAssignmentService } from '@course/services/course-assignment.service'\r\nimport { CourseDetailDataResponse, CourseListDataResponse, QueryCourseDto } from '@course/dto/view-course.dto'\r\nimport { COURSE_DETAIL_PROJECTION } from '@course/contracts/constant'\r\nimport { ViewCourseSessionDetailDataResponse } from '@course/dto/view-course-session.dto'\r\nimport { CreateCourseDto } from '@course/dto/create-course.dto'\r\nimport { UpdateCourseDto } from '@course/dto/update-course.dto'\r\nimport { ViewCourseAssignmentDetailDataResponse } from '@course/dto/view-course-assignment.dto'\r\nimport { session } from 'passport'\r\nimport { ISettingService } from '@setting/services/setting.service'\r\nimport { SettingKey } from '@setting/contracts/constant'\r\n\r\n@ApiTags('Course - Instructor')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.INSTRUCTOR)\r\n@Controller('instructor')\r\nexport class InstructorCourseController {\r\n  constructor(\r\n    @Inject(ICourseService)\r\n    private readonly courseService: ICourseService,\r\n    @Inject(ICourseSessionService)\r\n    private readonly courseSessionService: ICourseSessionService,\r\n    @Inject(ICourseAssignmentService)\r\n    private readonly courseAssignmentService: ICourseAssignmentService,\r\n    @Inject(ISettingService)\r\n    private readonly settingService: ISettingService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Course List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: CourseListDataResponse })\r\n  @Get()\r\n  async list(@Req() req, @Pagination() pagination: PaginationParams, @Query() queryCourseDto: QueryCourseDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    return await this.courseService.listByInstructor(_id, pagination, queryCourseDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Course Detail`\r\n  })\r\n  @ApiOkResponse({ type: CourseDetailDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_NOT_FOUND])\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') courseId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const course = await this.courseService.findById(courseId, COURSE_DETAIL_PROJECTION)\r\n\r\n    if (!course || course.instructorId?.toString() !== _id) throw new AppException(Errors.COURSE_NOT_FOUND)\r\n    return course\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Course Session Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewCourseSessionDetailDataResponse })\r\n  @ApiErrorResponse([Errors.SESSION_NOT_FOUND])\r\n  @Get(':courseId([0-9a-f]{24})/sessions/:sessionId([0-9a-f]{24})')\r\n  async getSessionDetail(@Req() req, @Param('courseId') courseId: string, @Param('sessionId') sessionId: string) {\r\n    const { _id: instructorId } = _.get(req, 'user')\r\n    const session = await this.courseSessionService.findOneBy({ sessionId, courseId, instructorId })\r\n\r\n    if (!session) throw new AppException(Errors.SESSION_NOT_FOUND)\r\n    return session\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Course Assignment Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewCourseAssignmentDetailDataResponse })\r\n  @ApiErrorResponse([Errors.ASSIGNMENT_NOT_FOUND])\r\n  @Get(':courseId([0-9a-f]{24})/assignments/:assignmentId([0-9a-f]{24})')\r\n  async getAssignmentDetail(\r\n    @Req() req,\r\n    @Param('courseId') courseId: string,\r\n    @Param('assignmentId') assignmentId: string\r\n  ) {\r\n    const { _id: instructorId } = _.get(req, 'user')\r\n    const assignment = await this.courseAssignmentService.findOneBy({ assignmentId, courseId, instructorId })\r\n\r\n    if (!assignment) throw new AppException(Errors.ASSIGNMENT_NOT_FOUND)\r\n    return assignment\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create Course`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @Post()\r\n  async create(@Req() req, @Body() createCourseDto: CreateCourseDto) {\r\n    // validate sessionsCount = 2 * duration\r\n    if (createCourseDto.sessions.length !== 2 * createCourseDto.duration) {\r\n      throw new AppException(Errors.TOTAL_SESSIONS_OF_COURSE_INVALID)\r\n    }\r\n    // validate assignments from 1 to 3\r\n    const assignmentsCountRange = (await this.settingService.findByKey(SettingKey.AssignmentsCountRange)).value || [\r\n      1, 3\r\n    ]\r\n    const assignmentsCount =\r\n      createCourseDto.sessions.filter((session) => session?.assignments?.length === 1)?.length || 0\r\n    if (assignmentsCount < Number(assignmentsCountRange[0]) || assignmentsCount > Number(assignmentsCountRange[1])) {\r\n      throw new AppException(Errors.TOTAL_ASSIGNMENTS_OF_COURSE_INVALID)\r\n    }\r\n\r\n    const { _id } = _.get(req, 'user')\r\n    createCourseDto['status'] = CourseStatus.DRAFT\r\n    createCourseDto['instructorId'] = new Types.ObjectId(_id)\r\n    createCourseDto.sessions = createCourseDto.sessions.map((session, index) => {\r\n      return { ...session, sessionNumber: index + 1 }\r\n    })\r\n    const course = await this.courseService.create(createCourseDto)\r\n    return new IDResponse(course._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Update Course at status: [${CourseStatus.DRAFT}]`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_NOT_FOUND, Errors.CAN_NOT_UPDATE_COURSE])\r\n  @Put(':id([0-9a-f]{24})')\r\n  async update(@Req() req, @Param('id') courseId: string, @Body() updateCourseDto: UpdateCourseDto) {\r\n    // validate sessionsCount = 2 * duration\r\n    if (updateCourseDto.sessions.length !== 2 * updateCourseDto.duration) {\r\n      throw new AppException(Errors.TOTAL_SESSIONS_OF_COURSE_INVALID)\r\n    }\r\n    // validate assignments from 1 to 3\r\n    const assignmentsCountRange = (await this.settingService.findByKey(SettingKey.AssignmentsCountRange)).value || [\r\n      1, 3\r\n    ]\r\n    const assignmentsCount =\r\n      updateCourseDto.sessions.filter((session) => session?.assignments?.length === 1)?.length || 0\r\n    if (assignmentsCount < Number(assignmentsCountRange[0]) || assignmentsCount > Number(assignmentsCountRange[1])) {\r\n      throw new AppException(Errors.TOTAL_ASSIGNMENTS_OF_COURSE_INVALID)\r\n    }\r\n\r\n    const { _id } = _.get(req, 'user')\r\n    const course = await this.courseService.findById(courseId)\r\n\r\n    if (!course || course.instructorId?.toString() !== _id || course.status === CourseStatus.DELETED)\r\n      throw new AppException(Errors.COURSE_NOT_FOUND)\r\n    if (course.status !== CourseStatus.DRAFT || course.isRequesting === true)\r\n      throw new AppException(Errors.CAN_NOT_UPDATE_COURSE)\r\n\r\n    updateCourseDto.sessions = updateCourseDto.sessions.map((session, index) => {\r\n      return { ...session, sessionNumber: index + 1 }\r\n    })\r\n    await this.courseService.update(\r\n      {\r\n        _id: courseId\r\n      },\r\n      updateCourseDto\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Delete Course at status [${CourseStatus.DRAFT}]`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_NOT_FOUND, Errors.CAN_NOT_DELETE_COURSE])\r\n  @Delete(':id([0-9a-f]{24})')\r\n  async delete(@Req() req, @Param('id') courseId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const course = await this.courseService.findById(courseId)\r\n\r\n    if (!course || course.instructorId?.toString() !== _id || course.status === CourseStatus.DELETED)\r\n      throw new AppException(Errors.COURSE_NOT_FOUND)\r\n    if (course.status !== CourseStatus.DRAFT || course.isRequesting === true)\r\n      throw new AppException(Errors.CAN_NOT_DELETE_COURSE)\r\n\r\n    await this.courseService.update({ _id: courseId }, { status: CourseStatus.DELETED })\r\n\r\n    return new SuccessResponse(true)\r\n  }\r\n}\r\n"]}