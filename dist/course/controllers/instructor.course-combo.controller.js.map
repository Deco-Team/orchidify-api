{"version":3,"file":"instructor.course-combo.controller.js","sourceRoot":"/","sources":["course/controllers/instructor.course-combo.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, UseGuards, Inject, Put, Body, Post, Param, Req, Delete, Get, Query } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport {\r\n  ErrorResponse,\r\n  IDDataResponse,\r\n  IDResponse,\r\n  PaginationQuery,\r\n  SuccessDataResponse,\r\n  SuccessResponse\r\n} from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { CourseStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Types } from 'mongoose'\r\nimport { ICourseService } from '@course/services/course.service'\r\nimport { CreateCourseComboDto } from '@course/dto/create-course-combo.dto'\r\nimport { UpdateCourseComboDto } from '@course/dto/update-course-combo.dto'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { ICourseComboService } from '@course/services/course-combo.service'\r\nimport {\r\n  CourseComboDetailDataResponse,\r\n  CourseComboListDataResponse,\r\n  QueryCourseComboDto\r\n} from '@course/dto/view-course-combo.dto'\r\nimport { CHILD_COURSE_COMBO_DETAIL_PROJECTION, COURSE_COMBO_DETAIL_PROJECTION } from '@course/contracts/constant'\r\n\r\n@ApiTags('CourseCombo - Instructor')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.INSTRUCTOR)\r\n@Controller('instructor')\r\nexport class InstructorCourseComboController {\r\n  constructor(\r\n    @Inject(ICourseComboService)\r\n    private readonly courseComboService: ICourseComboService,\r\n    @Inject(ICourseService)\r\n    private readonly courseService: ICourseService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Course Combo List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: CourseComboListDataResponse })\r\n  @Get('combo')\r\n  async list(@Req() req, @Pagination() pagination: PaginationParams, @Query() queryCourseDto: QueryCourseComboDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    return await this.courseComboService.listByInstructor(_id, pagination, queryCourseDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Course Combo Detail`\r\n  })\r\n  @ApiOkResponse({ type: CourseComboDetailDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_COMBO_NOT_FOUND])\r\n  @Get('combo/:id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') courseId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const courseCombo = await this.courseComboService.findById(courseId, COURSE_COMBO_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'childCourses',\r\n        select: CHILD_COURSE_COMBO_DETAIL_PROJECTION\r\n      }\r\n    ])\r\n\r\n    if (!courseCombo || courseCombo.instructorId?.toString() !== _id)\r\n      throw new AppException(Errors.COURSE_COMBO_NOT_FOUND)\r\n    return courseCombo\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Create Course Combo`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([Errors.CHILD_COURSE_COMBO_INVALID, Errors.COURSE_COMBO_EXISTED])\r\n  @Post('combo')\r\n  async create(@Req() req, @Body() createCourseComboDto: CreateCourseComboDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    const { childCourseIds } = createCourseComboDto\r\n\r\n    // Validate child courses\r\n    const childCourses = await this.courseService.findMany({\r\n      _id: {\r\n        $in: childCourseIds.map((courseId) => new Types.ObjectId(courseId))\r\n      },\r\n      instructorId: new Types.ObjectId(_id),\r\n      status: CourseStatus.ACTIVE,\r\n      childCourseIds: { $exists: false }\r\n    })\r\n    if (childCourses.length !== childCourseIds.length) throw new AppException(Errors.CHILD_COURSE_COMBO_INVALID)\r\n\r\n    // check if course combo with childCourseIds has been created\r\n    const existedCourseCombos = await this.courseComboService.findMany({\r\n      instructorId: new Types.ObjectId(_id),\r\n      status: CourseStatus.ACTIVE,\r\n      childCourseIds: {\r\n        $all: childCourseIds.map((courseId) => new Types.ObjectId(courseId)),\r\n        $size: childCourseIds.length\r\n      }\r\n    })\r\n    if (existedCourseCombos.length > 0) throw new AppException(Errors.COURSE_COMBO_EXISTED)\r\n\r\n    createCourseComboDto['status'] = CourseStatus.ACTIVE\r\n    createCourseComboDto['instructorId'] = new Types.ObjectId(_id)\r\n    createCourseComboDto['childCourseIds'] = childCourseIds.map((courseId) => new Types.ObjectId(courseId))\r\n    const course = await this.courseComboService.create(createCourseComboDto)\r\n    return new IDResponse(course._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Update Course Combo`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_COMBO_NOT_FOUND, Errors.CHILD_COURSE_COMBO_INVALID, Errors.COURSE_COMBO_EXISTED])\r\n  @Put('combo/:id([0-9a-f]{24})')\r\n  async update(@Req() req, @Param('id') courseId: string, @Body() updateCourseComboDto: UpdateCourseComboDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    const { childCourseIds } = updateCourseComboDto\r\n\r\n    const courseCombo = await this.courseComboService.findById(courseId)\r\n    if (!courseCombo || courseCombo.instructorId?.toString() !== _id || courseCombo.status === CourseStatus.DELETED)\r\n      throw new AppException(Errors.COURSE_COMBO_NOT_FOUND)\r\n    // if (course.status !== CourseStatus.DRAFT || course.isRequesting === true)\r\n    //   throw new AppException(Errors.CAN_NOT_UPDATE_COURSE)\r\n\r\n    // Validate child courses\r\n    const childCourses = await this.courseService.findMany({\r\n      _id: {\r\n        $in: childCourseIds.map((courseId) => new Types.ObjectId(courseId))\r\n      },\r\n      instructorId: new Types.ObjectId(_id),\r\n      status: CourseStatus.ACTIVE,\r\n      childCourseIds: { $exists: false }\r\n    })\r\n    if (childCourses.length !== childCourseIds.length) throw new AppException(Errors.CHILD_COURSE_COMBO_INVALID)\r\n\r\n    // check if course combo with childCourseIds has been created\r\n    const existedCourseCombos = await this.courseComboService.findMany({\r\n      _id: { $ne: courseCombo._id },\r\n      instructorId: new Types.ObjectId(_id),\r\n      status: CourseStatus.ACTIVE,\r\n      childCourseIds: {\r\n        $all: childCourseIds.map((courseId) => new Types.ObjectId(courseId)),\r\n        $size: childCourseIds.length\r\n      }\r\n    })\r\n    if (existedCourseCombos.length > 0) throw new AppException(Errors.COURSE_COMBO_EXISTED)\r\n\r\n    await this.courseComboService.update(\r\n      {\r\n        _id: courseId\r\n      },\r\n      updateCourseComboDto\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Delete Course Combo`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.COURSE_COMBO_NOT_FOUND])\r\n  @Delete('combo/:id([0-9a-f]{24})')\r\n  async delete(@Req() req, @Param('id') courseId: string) {\r\n    const { _id } = _.get(req, 'user')\r\n    const courseCombo = await this.courseComboService.findById(courseId)\r\n\r\n    if (!courseCombo || courseCombo.instructorId?.toString() !== _id || courseCombo.status === CourseStatus.DELETED)\r\n      throw new AppException(Errors.COURSE_COMBO_NOT_FOUND)\r\n    // if (course.status !== CourseStatus.DRAFT || course.isRequesting === true)\r\n    //   throw new AppException(Errors.CAN_NOT_DELETE_COURSE)\r\n\r\n    await this.courseComboService.update({ _id: courseId }, { status: CourseStatus.DELETED })\r\n\r\n    return new SuccessResponse(true)\r\n  }\r\n}\r\n"]}