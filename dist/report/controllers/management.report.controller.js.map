{"version":3,"file":"management.report.controller.js","sourceRoot":"/","sources":["report/controllers/management.report.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, Inject, Query, UseGuards } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse } from '@common/contracts/dto'\r\nimport { IReportService } from '@report/services/report.service'\r\nimport {\r\n  QueryReportByMonthDto,\r\n  QueryReportByWeekDto,\r\n  ReportClassByStatusListDataResponse,\r\n  ReportRevenueByMonthListDataResponse,\r\n  ReportStaffByStatusListDataResponse,\r\n  ReportTotalSummaryListDataResponse,\r\n  ReportTransactionByDateListDataResponse,\r\n  ReportUserByMonthListDataResponse\r\n} from '@report/dto/view-report.dto'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { ClassStatus, StaffStatus, UserRole } from '@common/contracts/constant'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { ReportTag, ReportType } from '@report/contracts/constant'\r\nimport { VN_TIMEZONE } from '@src/config'\r\nimport * as moment from 'moment-timezone'\r\nimport { ITransactionService } from '@transaction/services/transaction.service'\r\n\r\n@ApiTags('Report - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementReportController {\r\n  constructor(\r\n    @Inject(IReportService)\r\n    private readonly reportService: IReportService,\r\n    @Inject(ITransactionService)\r\n    private readonly transactionService: ITransactionService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Report Data Total Summary`\r\n  })\r\n  @ApiOkResponse({ type: ReportTotalSummaryListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('total-summary')\r\n  async viewReportTotalSummary() {\r\n    const reports = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.CourseSum, ReportType.LearnerSum, ReportType.InstructorSum, ReportType.CourseComboSum]\r\n        },\r\n        tag: ReportTag.System\r\n      },\r\n      ['type', 'data']\r\n    )\r\n    return { docs: reports }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Report User Data By Month`\r\n  })\r\n  @ApiOkResponse({ type: ReportUserByMonthListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('user-by-month')\r\n  async viewReportUserDataByMonth(@Query() queryReportByMonthDto: QueryReportByMonthDto) {\r\n    const { year = 2024 } = queryReportByMonthDto\r\n    const reports = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.LearnerSumByMonth, ReportType.InstructorSumByMonth]\r\n        },\r\n        tag: ReportTag.System,\r\n        'data.year': year\r\n      },\r\n      ['type', 'data']\r\n    )\r\n    const learnerReport = _.find(reports, { type: ReportType.LearnerSumByMonth })\r\n    const instructorReport = _.find(reports, { type: ReportType.InstructorSumByMonth })\r\n\r\n    const docs = []\r\n    if (learnerReport && instructorReport) {\r\n      for (let month = 1; month <= 12; month++) {\r\n        const learner = _.get(learnerReport.data, `${month}`) || { quantity: 0 }\r\n        const instructor = _.get(instructorReport.data, `${month}`) || { quantity: 0 }\r\n        docs.push({\r\n          learner,\r\n          instructor\r\n        })\r\n      }\r\n    }\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Report Class Data By Status`\r\n  })\r\n  @ApiOkResponse({ type: ReportClassByStatusListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('class-by-status')\r\n  async viewReportClassDataByStatus() {\r\n    const report = await this.reportService.findOne({ type: ReportType.ClassSum, tag: ReportTag.System }, [\r\n      'type',\r\n      'data'\r\n    ])\r\n    return {\r\n      quantity: report.data.quantity,\r\n      docs: Object.keys(_.omit(report.data, ['quantity'])).map((statusKey) => ({\r\n        status: ClassStatus[statusKey],\r\n        quantity: report.data[statusKey].quantity\r\n      }))\r\n    }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Report Data Total Summary`\r\n  })\r\n  @ApiOkResponse({ type: ReportTotalSummaryListDataResponse })\r\n  @Roles(UserRole.ADMIN)\r\n  @Get('admin/total-summary')\r\n  async adminViewReportTotalSummary() {\r\n    const reports = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.CourseSum, ReportType.LearnerSum, ReportType.InstructorSum, ReportType.RevenueSum]\r\n        },\r\n        tag: ReportTag.System\r\n      },\r\n      ['type', 'data']\r\n    )\r\n    return { docs: reports }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Report Staff Data By Status`\r\n  })\r\n  @ApiOkResponse({ type: ReportStaffByStatusListDataResponse })\r\n  @Roles(UserRole.ADMIN)\r\n  @Get('admin/staff-by-status')\r\n  async adminViewReportStaffDataByStatus() {\r\n    const report = await this.reportService.findOne({ type: ReportType.StaffSum, tag: ReportTag.System }, [\r\n      'type',\r\n      'data'\r\n    ])\r\n    return {\r\n      quantity: report.data.quantity,\r\n      docs: Object.keys(_.omit(report.data, ['quantity'])).map((statusKey) => ({\r\n        status: StaffStatus[statusKey],\r\n        quantity: report.data[statusKey].quantity\r\n      }))\r\n    }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Report Revenue Data By Month`\r\n  })\r\n  @ApiOkResponse({ type: ReportRevenueByMonthListDataResponse })\r\n  @Roles(UserRole.ADMIN)\r\n  @Get('admin/revenue-by-month')\r\n  async adminViewReportRevenueDataByMonth(@Query() queryReportByMonthDto: QueryReportByMonthDto) {\r\n    const { year = 2024 } = queryReportByMonthDto\r\n    let [revenueSumByMonth] = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.RevenueSumByMonth]\r\n        },\r\n        tag: ReportTag.System,\r\n        'data.year': year\r\n      },\r\n      ['type', 'data']\r\n    )\r\n\r\n    const docs = []\r\n    if (revenueSumByMonth) {\r\n      for (let month = 1; month <= 12; month++) {\r\n        const revenue = _.get(revenueSumByMonth.data, `${month}`) || { total: 0 }\r\n        docs.push({\r\n          revenue\r\n        })\r\n      }\r\n    }\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Report Transaction Data By Date`\r\n  })\r\n  @ApiOkResponse({ type: ReportTransactionByDateListDataResponse })\r\n  @Roles(UserRole.ADMIN)\r\n  @Get('admin/transaction-by-date')\r\n  async adminViewReportTransactionByDate(@Query() queryReportByWeekDto: QueryReportByWeekDto) {\r\n    const { date } = queryReportByWeekDto\r\n    const dateMoment = moment(date).tz(VN_TIMEZONE)\r\n\r\n    let fromDate: Date, toDate: Date\r\n    fromDate = dateMoment.clone().startOf('isoWeek').toDate()\r\n    toDate = dateMoment.clone().endOf('isoWeek').toDate()\r\n\r\n    const reports = await this.transactionService.viewReportTransactionByDate({ fromDate, toDate })\r\n\r\n    return { docs: reports }\r\n  }\r\n}\r\n"]}