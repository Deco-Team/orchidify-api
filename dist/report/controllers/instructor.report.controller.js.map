{"version":3,"file":"instructor.report.controller.js","sourceRoot":"/","sources":["report/controllers/instructor.report.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA+E;AAC/E,6CAA4G;AAC5G,4BAA2B;AAE3B,oDAAqD;AACrD,+DAAgE;AAChE,4DAMoC;AACpC,qEAA0D;AAC1D,+DAAqD;AACrD,8DAMmC;AACnC,2EAAwD;AACxD,oDAAkE;AAClE,uCAAgC;AAQzB,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IACrC,YAEmB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;IAC7C,CAAC;IAOE,AAAN,KAAK,CAAC,sBAAsB,CAAQ,GAAG;QACrC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAElC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CACzB;gBACE,IAAI,EAAE;oBACJ,GAAG,EAAE,CAAC,qBAAU,CAAC,SAAS,EAAE,qBAAU,CAAC,QAAQ,EAAE,qBAAU,CAAC,UAAU,CAAC;iBACxE;gBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;aACjC,EACD,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,CACzB;gBACE,IAAI,EAAE;oBACJ,GAAG,EAAE,CAAC,qBAAU,CAAC,eAAe,EAAE,qBAAU,CAAC,gBAAgB,CAAC;iBAC/D;gBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;aACjC,EACD,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB;SACF,CAAC,CAAA;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,MAAM,WAAW,GAAG;gBAClB;oBACE,IAAI,EAAE,qBAAU,CAAC,SAAS;oBAC1B,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;wBACX,CAAC,GAAG,uBAAY,CAAC,MAAM,EAAE,CAAC,EAAE;4BAC1B,QAAQ,EAAE,CAAC;yBACZ;qBACF;oBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;oBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACjC;gBACD;oBACE,IAAI,EAAE,qBAAU,CAAC,QAAQ;oBACzB,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;wBACX,CAAC,GAAG,sBAAW,CAAC,SAAS,EAAE,CAAC,EAAE;4BAC5B,QAAQ,EAAE,CAAC;yBACZ;wBACD,CAAC,GAAG,sBAAW,CAAC,WAAW,EAAE,CAAC,EAAE;4BAC9B,QAAQ,EAAE,CAAC;yBACZ;wBACD,CAAC,GAAG,sBAAW,CAAC,SAAS,EAAE,CAAC,EAAE;4BAC5B,QAAQ,EAAE,CAAC;yBACZ;wBACD,CAAC,GAAG,sBAAW,CAAC,QAAQ,EAAE,CAAC,EAAE;4BAC3B,QAAQ,EAAE,CAAC;yBACZ;qBACF;oBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;oBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACjC;gBACD;oBACE,IAAI,EAAE,qBAAU,CAAC,UAAU;oBAC3B,IAAI,EAAE;wBACJ,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;oBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACjC;aACF,CAAA;YACD,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;QAC5D,CAAC;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;YACpB,MAAM,kBAAkB,GAAG;gBACzB;oBACE,IAAI,EAAE,qBAAU,CAAC,eAAe;oBAChC,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;wBACX,CAAC,GAAG,6BAAkB,CAAC,OAAO,EAAE,CAAC,EAAE;4BACjC,QAAQ,EAAE,CAAC;yBACZ;qBACF;oBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;oBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACjC;gBACD;oBACE,IAAI,EAAE,qBAAU,CAAC,gBAAgB;oBACjC,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;wBACX,CAAC,GAAG,8BAAmB,CAAC,OAAO,EAAE,CAAC,EAAE;4BAClC,QAAQ,EAAE,CAAC;yBACZ;qBACF;oBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;oBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACjC;aACF,CAAA;YACD,cAAc,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAA;QAC1E,CAAC;QAED,MAAM,UAAU,GAAG,EAAE,CAAA;QACrB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAA;QACvC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;QAEtC,MAAM,eAAe,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QACpD,MAAM,gBAAgB,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QACrD,UAAU,CAAC,IAAI,CAAC;YACd,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE;gBACJ,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,eAAe,EAAE,CAAC,CAAC;gBAClG,OAAO,EAAE;oBACP,QAAQ,EACN,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,uBAAuB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,uBAAuB,EAAE,CAAC,CAAC;iBAC3G;aACF;SACF,CAAC,CAAA;QAEF,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;QAEtC,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;IAC7B,CAAC;IAOK,AAAN,KAAK,CAAC,2BAA2B,CAAQ,GAAG;QAC1C,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAClC,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAC3C,EAAE,IAAI,EAAE,qBAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,oBAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EACpF,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB,CAAA;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,qBAAU,CAAC,QAAQ;gBACzB,IAAI,EAAE;oBACJ,QAAQ,EAAE,CAAC;oBACX,CAAC,GAAG,sBAAW,CAAC,SAAS,EAAE,CAAC,EAAE;wBAC5B,QAAQ,EAAE,CAAC;qBACZ;oBACD,CAAC,GAAG,sBAAW,CAAC,WAAW,EAAE,CAAC,EAAE;wBAC9B,QAAQ,EAAE,CAAC;qBACZ;oBACD,CAAC,GAAG,sBAAW,CAAC,SAAS,EAAE,CAAC,EAAE;wBAC5B,QAAQ,EAAE,CAAC;qBACZ;oBACD,CAAC,GAAG,sBAAW,CAAC,QAAQ,EAAE,CAAC,EAAE;wBAC3B,QAAQ,EAAE,CAAC;qBACZ;iBACF;gBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;aACjC,CAAA;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;YACjE,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;QACrB,CAAC;QAED,OAAO;YACL,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ;YAC9B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBACvE,MAAM,EAAE,sBAAW,CAAC,SAAS,CAAC;gBAC9B,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ;aAC1C,CAAC,CAAC;SACJ,CAAA;IACH,CAAC;IAOK,AAAN,KAAK,CAAC,oCAAoC,CAAQ,GAAG,EAAW,qBAA4C;QAC1G,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAClC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,qBAAqB,CAAA;QAC7C,IAAI,CAAC,qBAAqB,CAAC,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAC7D;YACE,IAAI,EAAE;gBACJ,GAAG,EAAE,CAAC,qBAAU,CAAC,yBAAyB,CAAC;aAC5C;YACD,GAAG,EAAE,oBAAS,CAAC,IAAI;YACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YAChC,WAAW,EAAE,IAAI;SAClB,EACD,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB,CAAA;QAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC3B,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,qBAAU,CAAC,yBAAyB;gBAC1C,IAAI,EAAE;oBACJ,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,GAAG,EAAE;wBACH,QAAQ,EAAE,CAAC;qBACZ;oBACD,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;qBACZ;oBACD,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;qBACZ;oBACD,IAAI,EAAE;wBACJ,QAAQ,EAAE,CAAC;qBACZ;oBACD,IAAI,EAAE,IAAI;iBACX;gBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;aACjC,CAAA;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;YACjE,qBAAqB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC;QAED,MAAM,IAAI,GAAG,EAAE,CAAA;QACf,IAAI,qBAAqB,EAAE,CAAC;YAC1B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;gBACzC,MAAM,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAA;gBAChF,IAAI,CAAC,IAAI,CAAC;oBACR,OAAO;iBACR,CAAC,CAAA;YACJ,CAAC;QACH,CAAC;QACD,OAAO,EAAE,IAAI,EAAE,CAAA;IACjB,CAAC;IAOK,AAAN,KAAK,CAAC,4BAA4B,CAAQ,GAAG,EAAW,qBAA4C;QAClG,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QAClC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,qBAAqB,CAAA;QAC7C,IAAI,CAAC,iBAAiB,CAAC,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CACzD;YACE,IAAI,EAAE;gBACJ,GAAG,EAAE,CAAC,qBAAU,CAAC,iBAAiB,CAAC;aACpC;YACD,GAAG,EAAE,oBAAS,CAAC,IAAI;YACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YAChC,WAAW,EAAE,IAAI;SAClB,EACD,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB,CAAA;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACvB,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,qBAAU,CAAC,iBAAiB;gBAClC,IAAI,EAAE;oBACJ,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,GAAG,EAAE;wBACH,KAAK,EAAE,CAAC;qBACT;oBACD,IAAI,EAAE;wBACJ,KAAK,EAAE,CAAC;qBACT;oBACD,IAAI,EAAE;wBACJ,KAAK,EAAE,CAAC;qBACT;oBACD,IAAI,EAAE;wBACJ,KAAK,EAAE,CAAC;qBACT;oBACD,IAAI,EAAE,IAAI;iBACX;gBACD,GAAG,EAAE,oBAAS,CAAC,IAAI;gBACnB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;aACjC,CAAA;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;YACjE,iBAAiB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;QAChC,CAAC;QAED,MAAM,IAAI,GAAG,EAAE,CAAA;QACf,IAAI,iBAAiB,EAAE,CAAC;YACtB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;gBACzC,MAAM,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAA;gBACzE,IAAI,CAAC,IAAI,CAAC;oBACR,OAAO;iBACR,CAAC,CAAA;YACJ,CAAC;QACH,CAAC;QACD,OAAO,EAAE,IAAI,EAAE,CAAA;IACjB,CAAC;CACF,CAAA;AAlVY,gEAA0B;AAW/B;IALL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,gCAAgC;KAC1C,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,oDAAkC,EAAE,CAAC;IAC3D,IAAA,YAAG,EAAC,eAAe,CAAC;IACS,WAAA,IAAA,YAAG,GAAE,CAAA;;;;wEAsHlC;AAOK;IALL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,kCAAkC;KAC5C,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,qDAAmC,EAAE,CAAC;IAC5D,IAAA,YAAG,EAAC,iBAAiB,CAAC;IACY,WAAA,IAAA,YAAG,GAAE,CAAA;;;;6EAuCvC;AAOK;IALL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,4CAA4C;KACtD,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,mDAAiC,EAAE,CAAC;IAC1D,IAAA,YAAG,EAAC,2BAA2B,CAAC;IACW,WAAA,IAAA,YAAG,GAAE,CAAA;IAAO,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAwB,uCAAqB;;sFA0E3G;AAOK;IALL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,mCAAmC;KAC7C,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,sDAAoC,EAAE,CAAC;IAC7D,IAAA,YAAG,EAAC,kBAAkB,CAAC;IACY,WAAA,IAAA,YAAG,GAAE,CAAA;IAAO,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAwB,uCAAqB;;8EA0EnG;qCAjVU,0BAA0B;IANtC,IAAA,iBAAO,EAAC,qBAAqB,CAAC;IAC9B,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,UAAU,CAAC;IAC1B,IAAA,mBAAU,EAAC,YAAY,CAAC;IAGpB,WAAA,IAAA,eAAM,EAAC,+BAAc,CAAC,CAAA;;GAFd,0BAA0B,CAkVtC","sourcesContent":["import { Controller, Get, Inject, Query, Req, UseGuards } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse } from '@common/contracts/dto'\r\nimport { IReportService } from '@report/services/report.service'\r\nimport {\r\n  QueryReportByMonthDto,\r\n  ReportClassByStatusListDataResponse,\r\n  ReportRevenueByMonthListDataResponse,\r\n  ReportTotalSummaryListDataResponse,\r\n  ReportUserByMonthListDataResponse\r\n} from '@report/dto/view-report.dto'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport {\r\n  ClassRequestStatus,\r\n  ClassStatus,\r\n  CourseStatus,\r\n  PayoutRequestStatus,\r\n  UserRole\r\n} from '@common/contracts/constant'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { ReportTag, ReportType } from '@report/contracts/constant'\r\nimport { Types } from 'mongoose'\r\n\r\n@ApiTags('Report - Instructor')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.INSTRUCTOR)\r\n@Controller('instructor')\r\nexport class InstructorReportController {\r\n  constructor(\r\n    @Inject(IReportService)\r\n    private readonly reportService: IReportService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Report Data Total Summary`\r\n  })\r\n  @ApiOkResponse({ type: ReportTotalSummaryListDataResponse })\r\n  @Get('total-summary')\r\n  async viewReportTotalSummary(@Req() req) {\r\n    const { _id } = _.get(req, 'user')\r\n\r\n    let [reports, requestReports] = await Promise.all([\r\n      this.reportService.findMany(\r\n        {\r\n          type: {\r\n            $in: [ReportType.CourseSum, ReportType.ClassSum, ReportType.RevenueSum]\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        },\r\n        ['type', 'data']\r\n      ),\r\n      this.reportService.findMany(\r\n        {\r\n          type: {\r\n            $in: [ReportType.ClassRequestSum, ReportType.PayoutRequestSum]\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        },\r\n        ['type', 'data']\r\n      )\r\n    ])\r\n    if (!reports) {\r\n      const initReports = [\r\n        {\r\n          type: ReportType.CourseSum,\r\n          data: {\r\n            quantity: 0,\r\n            [`${CourseStatus.ACTIVE}`]: {\r\n              quantity: 0\r\n            }\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        },\r\n        {\r\n          type: ReportType.ClassSum,\r\n          data: {\r\n            quantity: 0,\r\n            [`${ClassStatus.PUBLISHED}`]: {\r\n              quantity: 0\r\n            },\r\n            [`${ClassStatus.IN_PROGRESS}`]: {\r\n              quantity: 0\r\n            },\r\n            [`${ClassStatus.COMPLETED}`]: {\r\n              quantity: 0\r\n            },\r\n            [`${ClassStatus.CANCELED}`]: {\r\n              quantity: 0\r\n            }\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        },\r\n        {\r\n          type: ReportType.RevenueSum,\r\n          data: {\r\n            total: 0\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        }\r\n      ]\r\n      reports = await this.reportService.createMany(initReports)\r\n    }\r\n\r\n    if (!requestReports) {\r\n      const initRequestReports = [\r\n        {\r\n          type: ReportType.ClassRequestSum,\r\n          data: {\r\n            quantity: 0,\r\n            [`${ClassRequestStatus.PENDING}`]: {\r\n              quantity: 0\r\n            }\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        },\r\n        {\r\n          type: ReportType.PayoutRequestSum,\r\n          data: {\r\n            quantity: 0,\r\n            [`${PayoutRequestStatus.PENDING}`]: {\r\n              quantity: 0\r\n            }\r\n          },\r\n          tag: ReportTag.User,\r\n          ownerId: new Types.ObjectId(_id)\r\n        }\r\n      ]\r\n      requestReports = await this.reportService.createMany(initRequestReports)\r\n    }\r\n\r\n    const formatData = []\r\n    formatData.push(reports[0]?.toObject())\r\n    formatData.push(reports[1].toObject())\r\n\r\n    const classRequestSum = requestReports[0].toObject()\r\n    const payoutRequestSum = requestReports[1].toObject()\r\n    formatData.push({\r\n      type: 'RequestSum',\r\n      data: {\r\n        quantity: _.get(classRequestSum, 'data.quantity', 0) + _.get(payoutRequestSum, 'data.quantity', 0),\r\n        PENDING: {\r\n          quantity:\r\n            _.get(classRequestSum, 'data.PENDING.quantity', 0) + _.get(payoutRequestSum, 'data.PENDING.quantity', 0)\r\n        }\r\n      }\r\n    })\r\n\r\n    formatData.push(reports[2].toObject())\r\n\r\n    return { docs: formatData }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Report Class Data By Status`\r\n  })\r\n  @ApiOkResponse({ type: ReportClassByStatusListDataResponse })\r\n  @Get('class-by-status')\r\n  async viewReportClassDataByStatus(@Req() req) {\r\n    const { _id } = _.get(req, 'user')\r\n    let report = await this.reportService.findOne(\r\n      { type: ReportType.ClassSum, tag: ReportTag.User, ownerId: new Types.ObjectId(_id) },\r\n      ['type', 'data']\r\n    )\r\n\r\n    if (!report) {\r\n      const initReport = {\r\n        type: ReportType.ClassSum,\r\n        data: {\r\n          quantity: 0,\r\n          [`${ClassStatus.PUBLISHED}`]: {\r\n            quantity: 0\r\n          },\r\n          [`${ClassStatus.IN_PROGRESS}`]: {\r\n            quantity: 0\r\n          },\r\n          [`${ClassStatus.COMPLETED}`]: {\r\n            quantity: 0\r\n          },\r\n          [`${ClassStatus.CANCELED}`]: {\r\n            quantity: 0\r\n          }\r\n        },\r\n        tag: ReportTag.User,\r\n        ownerId: new Types.ObjectId(_id)\r\n      }\r\n      const reports = await this.reportService.createMany([initReport])\r\n      report = reports[0]\r\n    }\r\n\r\n    return {\r\n      quantity: report.data.quantity,\r\n      docs: Object.keys(_.omit(report.data, ['quantity'])).map((statusKey) => ({\r\n        status: ClassStatus[statusKey],\r\n        quantity: report.data[statusKey].quantity\r\n      }))\r\n    }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Report Learner Enrolled Data By Month`\r\n  })\r\n  @ApiOkResponse({ type: ReportUserByMonthListDataResponse })\r\n  @Get('learner-enrolled-by-month')\r\n  async viewReportLearnerEnrolledDataByMonth(@Req() req, @Query() queryReportByMonthDto: QueryReportByMonthDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    const { year = 2024 } = queryReportByMonthDto\r\n    let [learnerEnrolledReport] = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.LearnerEnrolledSumByMonth]\r\n        },\r\n        tag: ReportTag.User,\r\n        ownerId: new Types.ObjectId(_id),\r\n        'data.year': year\r\n      },\r\n      ['type', 'data']\r\n    )\r\n\r\n    if (!learnerEnrolledReport) {\r\n      const initReport = {\r\n        type: ReportType.LearnerEnrolledSumByMonth,\r\n        data: {\r\n          '1': {\r\n            quantity: 0\r\n          },\r\n          '2': {\r\n            quantity: 0\r\n          },\r\n          '3': {\r\n            quantity: 0\r\n          },\r\n          '4': {\r\n            quantity: 0\r\n          },\r\n          '5': {\r\n            quantity: 0\r\n          },\r\n          '6': {\r\n            quantity: 0\r\n          },\r\n          '7': {\r\n            quantity: 0\r\n          },\r\n          '8': {\r\n            quantity: 0\r\n          },\r\n          '9': {\r\n            quantity: 0\r\n          },\r\n          '10': {\r\n            quantity: 0\r\n          },\r\n          '11': {\r\n            quantity: 0\r\n          },\r\n          '12': {\r\n            quantity: 0\r\n          },\r\n          year: 2024\r\n        },\r\n        tag: ReportTag.User,\r\n        ownerId: new Types.ObjectId(_id)\r\n      }\r\n      const reports = await this.reportService.createMany([initReport])\r\n      learnerEnrolledReport = reports[0]\r\n    }\r\n\r\n    const docs = []\r\n    if (learnerEnrolledReport) {\r\n      for (let month = 1; month <= 12; month++) {\r\n        const learner = _.get(learnerEnrolledReport.data, `${month}`) || { quantity: 0 }\r\n        docs.push({\r\n          learner\r\n        })\r\n      }\r\n    }\r\n    return { docs }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Report Revenue Data By Month`\r\n  })\r\n  @ApiOkResponse({ type: ReportRevenueByMonthListDataResponse })\r\n  @Get('revenue-by-month')\r\n  async viewReportRevenueDataByMonth(@Req() req, @Query() queryReportByMonthDto: QueryReportByMonthDto) {\r\n    const { _id } = _.get(req, 'user')\r\n    const { year = 2024 } = queryReportByMonthDto\r\n    let [revenueSumByMonth] = await this.reportService.findMany(\r\n      {\r\n        type: {\r\n          $in: [ReportType.RevenueSumByMonth]\r\n        },\r\n        tag: ReportTag.User,\r\n        ownerId: new Types.ObjectId(_id),\r\n        'data.year': year\r\n      },\r\n      ['type', 'data']\r\n    )\r\n\r\n    if (!revenueSumByMonth) {\r\n      const initReport = {\r\n        type: ReportType.RevenueSumByMonth,\r\n        data: {\r\n          '1': {\r\n            total: 0\r\n          },\r\n          '2': {\r\n            total: 0\r\n          },\r\n          '3': {\r\n            total: 0\r\n          },\r\n          '4': {\r\n            total: 0\r\n          },\r\n          '5': {\r\n            total: 0\r\n          },\r\n          '6': {\r\n            total: 0\r\n          },\r\n          '7': {\r\n            total: 0\r\n          },\r\n          '8': {\r\n            total: 0\r\n          },\r\n          '9': {\r\n            total: 0\r\n          },\r\n          '10': {\r\n            total: 0\r\n          },\r\n          '11': {\r\n            total: 0\r\n          },\r\n          '12': {\r\n            total: 0\r\n          },\r\n          year: 2024\r\n        },\r\n        tag: ReportTag.User,\r\n        ownerId: new Types.ObjectId(_id)\r\n      }\r\n      const reports = await this.reportService.createMany([initReport])\r\n      revenueSumByMonth = reports[0]\r\n    }\r\n\r\n    const docs = []\r\n    if (revenueSumByMonth) {\r\n      for (let month = 1; month <= 12; month++) {\r\n        const revenue = _.get(revenueSumByMonth.data, `${month}`) || { total: 0 }\r\n        docs.push({\r\n          revenue\r\n        })\r\n      }\r\n    }\r\n    return { docs }\r\n  }\r\n}\r\n"]}