{"version":3,"file":"report.schema.js","sourceRoot":"/","sources":["report/schemas/report.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,iDAAgD;AAChD,yDAA6C;AAC7C,oDAAkE;AAgB3D,IAAM,MAAM,GAAZ,MAAM,MAAM;IACjB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CAeF,CAAA;AAlBY,wBAAM;AAKjB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;mCAChC;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;oCACzC;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,oBAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;mCAC1C;AAGd;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,CAAC;8BACtB,gBAAK,CAAC,QAAQ;uCAAA;AAGvB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;oCACjB;iBAjBd,MAAM;IAZlB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,SAAS;QACrB,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;SACF;KACF,CAAC;;GACW,MAAM,CAkBlB;AAEY,QAAA,YAAY,GAAG,wBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;AAChE,oBAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC7B,oBAAY,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { ReportTag, ReportType } from '@report/contracts/constant'\r\n\r\nexport type ReportDocument = HydratedDocument<Report>\r\n\r\n@Schema({\r\n  collection: 'reports',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    }\r\n  }\r\n})\r\nexport class Report {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id?: string\r\n\r\n  @Prop({ type: String, enum: ReportType, required: true })\r\n  type: ReportType\r\n\r\n  @Prop({ type: String, enum: ReportTag, required: true })\r\n  tag: ReportTag\r\n\r\n  @Prop({ type: Types.ObjectId })\r\n  ownerId: Types.ObjectId\r\n\r\n  @Prop({ type: Types.Map, required: true })\r\n  data: Record<string, any>\r\n}\r\n\r\nexport const ReportSchema = SchemaFactory.createForClass(Report)\r\nReportSchema.plugin(paginate)\r\nReportSchema.index({ type: 1, tag: 1 })\r\n"]}