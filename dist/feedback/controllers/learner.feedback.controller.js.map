{"version":3,"file":"learner.feedback.controller.js","sourceRoot":"/","sources":["feedback/controllers/learner.feedback.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Param, Req, Post, Body, Query } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery, SuccessDataResponse, SuccessResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IFeedbackService } from '@feedback/services/feedback.service'\r\nimport {\r\n  ClassFeedbackListDataResponse,\r\n  CourseFeedbackListDataResponse,\r\n  FeedbackDetailDataResponse,\r\n  QueryFeedbackDto\r\n} from '@feedback/dto/view-feedback.dto'\r\nimport { Types } from 'mongoose'\r\nimport { ILearnerClassService } from '@class/services/learner-class.service'\r\nimport {\r\n  FEEDBACK_DETAIL_PROJECTION,\r\n  FEEDBACK_LEANER_DETAIL,\r\n  FEEDBACK_LIST_PROJECTION\r\n} from '@feedback/contracts/constant'\r\nimport { IClassService } from '@class/services/class.service'\r\nimport { SendFeedbackDto } from '@feedback/dto/send-feedback.dto'\r\nimport { VN_TIMEZONE } from '@src/config'\r\nimport * as moment from 'moment-timezone'\r\nimport { SettingKey } from '@setting/contracts/constant'\r\nimport { ISettingService } from '@setting/services/setting.service'\r\nimport { Class } from '@class/schemas/class.schema'\r\nimport { Course } from '@course/schemas/course.schema'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\n\r\n@ApiTags('Feedback - Learner')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.LEARNER)\r\n@Controller('learner')\r\nexport class LearnerFeedbackController {\r\n  constructor(\r\n    @Inject(IFeedbackService)\r\n    private readonly feedbackService: IFeedbackService,\r\n    @Inject(IClassService)\r\n    private readonly classService: IClassService,\r\n    @Inject(ILearnerClassService)\r\n    private readonly learnerClassService: ILearnerClassService,\r\n    @Inject(ISettingService)\r\n    private readonly settingService: ISettingService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Course's Feedback List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: CourseFeedbackListDataResponse })\r\n  @Get('courses/:courseId([0-9a-f]{24})')\r\n  async list(\r\n    @Param('courseId') courseId: string,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryFeedbackDto: QueryFeedbackDto\r\n  ) {\r\n    queryFeedbackDto.courseId = new Types.ObjectId(courseId)\r\n    return await this.feedbackService.list(pagination, queryFeedbackDto, FEEDBACK_LIST_PROJECTION, [\r\n      {\r\n        path: 'learner',\r\n        select: FEEDBACK_LEANER_DETAIL\r\n      }\r\n    ])\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `View Class's Feedback List`\r\n  })\r\n  @ApiOkResponse({ type: ClassFeedbackListDataResponse })\r\n  @Get('classes/:classId([0-9a-f]{24})')\r\n  async listClassFeedback(@Param('classId') classId: string, @Query() queryFeedbackDto: QueryFeedbackDto) {\r\n    const { rate } = queryFeedbackDto\r\n    const conditions = {\r\n      classId: new Types.ObjectId(classId)\r\n    }\r\n    if (rate) {\r\n      conditions['rate'] = rate\r\n    }\r\n\r\n    const feedbacks = await this.feedbackService.findMany(conditions, FEEDBACK_LIST_PROJECTION, [\r\n      {\r\n        path: 'learner',\r\n        select: FEEDBACK_LEANER_DETAIL\r\n      }\r\n    ])\r\n    return { docs: feedbacks }\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Send Feedback`\r\n  })\r\n  @ApiCreatedResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([\r\n    Errors.FEEDBACK_SUBMITTED,\r\n    Errors.CLASS_NOT_FOUND,\r\n    Errors.NOT_ENROLL_CLASS_YET,\r\n    Errors.FEEDBACK_NOT_OPEN_YET,\r\n    Errors.FEEDBACK_IS_OVER\r\n  ])\r\n  @Post(':classId([0-9a-f]{24})')\r\n  async sendFeedback(@Req() req, @Param('classId') classId: string, @Body() sendFeedbackDto: SendFeedbackDto) {\r\n    const { _id: learnerId } = _.get(req, 'user')\r\n\r\n    // check learner has sent feedback\r\n    const feedback = await this.feedbackService.findOneBy({\r\n      learnerId: new Types.ObjectId(learnerId),\r\n      classId: new Types.ObjectId(classId)\r\n    })\r\n    if (feedback) throw new AppException(Errors.FEEDBACK_SUBMITTED)\r\n\r\n    // check learner in class\r\n    const learnerClass = await this.learnerClassService.findOneBy(\r\n      {\r\n        classId: new Types.ObjectId(classId),\r\n        learnerId: new Types.ObjectId(learnerId)\r\n      },\r\n      ['_id', 'learnerId', 'classId'],\r\n      [\r\n        {\r\n          path: 'class',\r\n          select: ['startDate', 'duration', 'weekdays', 'slotNumbers', 'courseId', 'ratingSummary'],\r\n          populate: [{ path: 'course', select: ['ratingSummary'] }]\r\n        }\r\n      ]\r\n    )\r\n    if (!learnerClass) throw new AppException(Errors.NOT_ENROLL_CLASS_YET)\r\n\r\n    const courseClass = _.get(learnerClass, 'class') as Class\r\n    if (!courseClass) throw new AppException(Errors.CLASS_NOT_FOUND)\r\n\r\n    // BR-07: Feedback form opens on the last slot and no closes.\r\n    const { startDate, duration, weekdays, slotNumbers } = courseClass\r\n    const classEndTime = this.classService.getClassEndTime({ startDate, duration, weekdays, slotNumbers })\r\n    const now = moment().tz(VN_TIMEZONE)\r\n\r\n    const sendFeedbackOpenTime = classEndTime.clone()\r\n    if (now.isBefore(sendFeedbackOpenTime)) throw new AppException(Errors.FEEDBACK_NOT_OPEN_YET)\r\n\r\n    // const sendFeedbackCloseTime = classEndTime.clone()\r\n    // if (now.isAfter(sendFeedbackCloseTime)) throw new AppException(Errors.FEEDBACK_IS_OVER)\r\n\r\n    sendFeedbackDto.learnerId = new Types.ObjectId(learnerId)\r\n    sendFeedbackDto.classId = new Types.ObjectId(classId)\r\n    sendFeedbackDto.courseId = new Types.ObjectId(courseClass.courseId)\r\n    const course = _.get(courseClass, 'course') as Course\r\n\r\n    await this.feedbackService.sendFeedback(\r\n      sendFeedbackDto,\r\n      _.get(courseClass, 'ratingSummary', null),\r\n      _.get(course, 'ratingSummary', null)\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `Get Feedback Detail`\r\n  })\r\n  @ApiCreatedResponse({ type: FeedbackDetailDataResponse })\r\n  @ApiErrorResponse([Errors.FEEDBACK_NOT_FOUND])\r\n  @Get(':classId([0-9a-f]{24})')\r\n  async getFeedbackDetail(@Req() req, @Param('classId') classId: string) {\r\n    const { _id: learnerId } = _.get(req, 'user')\r\n\r\n    const feedback = await this.feedbackService.findOneBy(\r\n      {\r\n        learnerId: new Types.ObjectId(learnerId),\r\n        classId: new Types.ObjectId(classId)\r\n      },\r\n      FEEDBACK_DETAIL_PROJECTION\r\n    )\r\n    if (!feedback) throw new AppException(Errors.FEEDBACK_NOT_FOUND)\r\n\r\n    return feedback\r\n  }\r\n}\r\n"]}