{"version":3,"file":"management.feedback.controller.js","sourceRoot":"/","sources":["feedback/controllers/management.feedback.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAiF;AACjF,6CAAsH;AAGtH,oDAAsE;AACtE,2EAAwD;AACxD,8DAAqD;AACrD,qEAA0D;AAC1D,+DAAqD;AACrD,mEAAsE;AACtE,gEAAiI;AACjI,uCAAgC;AAChC,oDAA+F;AAC/F,uFAAsF;AAO/E,IAAM,4BAA4B,GAAlC,MAAM,4BAA4B;IACvC,YAEmB,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;IACjD,CAAC;IASE,AAAN,KAAK,CAAC,kBAAkB,CACH,QAAgB,EACrB,UAA4B,EACjC,gBAAkC;QAE3C,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QACxD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,gBAAgB,EAAE,mCAAwB,EAAE;YAC7F;gBACE,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,iCAAsB;aAC/B;SACF,CAAC,CAAA;IACJ,CAAC;IAQK,AAAN,KAAK,CAAC,iBAAiB,CAAmB,OAAe,EAAW,gBAAkC;QACpG,MAAM,EAAE,IAAI,EAAE,GAAG,gBAAgB,CAAA;QACjC,MAAM,UAAU,GAAG;YACjB,OAAO,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;SACrC,CAAA;QACD,IAAI,IAAI,EAAE,CAAC;YACT,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;QAC3B,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,EAAE,mCAAwB,EAAE;YAC1F;gBACE,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,iCAAsB;aAC/B;SACF,CAAC,CAAA;QACF,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAA;IAC5B,CAAC;CACF,CAAA;AAlDY,oEAA4B;AAajC;IAPL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,IAAI,mBAAQ,CAAC,KAAK,+BAA+B;KAC3D,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,qBAAe,EAAE,CAAC;IACnC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,kDAA8B,EAAE,CAAC;IACvD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,KAAK,CAAC;IACrB,IAAA,YAAG,EAAC,iCAAiC,CAAC;IAEpC,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;IACjB,WAAA,IAAA,iCAAU,GAAE,CAAA;IACZ,WAAA,IAAA,cAAK,GAAE,CAAA;;qDAAmB,oCAAgB;;sEAS5C;AAQK;IANL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,IAAI,mBAAQ,CAAC,KAAK,8BAA8B;KAC1D,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,iDAA6B,EAAE,CAAC;IACtD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,KAAK,CAAC;IACrB,IAAA,YAAG,EAAC,gCAAgC,CAAC;IACb,WAAA,IAAA,cAAK,EAAC,SAAS,CAAC,CAAA;IAAmB,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAmB,oCAAgB;;qEAgBrG;uCAjDU,4BAA4B;IALxC,IAAA,iBAAO,EAAC,uBAAuB,CAAC;IAChC,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,mBAAU,EAAC,YAAY,CAAC;IAGpB,WAAA,IAAA,eAAM,EAAC,mCAAgB,CAAC,CAAA;;GAFhB,4BAA4B,CAkDxC","sourcesContent":["import { Controller, Get, UseGuards, Inject, Param, Query } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse, PaginationQuery } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { IFeedbackService } from '@feedback/services/feedback.service'\r\nimport { ClassFeedbackListDataResponse, CourseFeedbackListDataResponse, QueryFeedbackDto } from '@feedback/dto/view-feedback.dto'\r\nimport { Types } from 'mongoose'\r\nimport { FEEDBACK_LEANER_DETAIL, FEEDBACK_LIST_PROJECTION } from '@feedback/contracts/constant'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\n\r\n@ApiTags('Feedback - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementFeedbackController {\r\n  constructor(\r\n    @Inject(IFeedbackService)\r\n    private readonly feedbackService: IFeedbackService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Course's Feedback List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: CourseFeedbackListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('courses/:courseId([0-9a-f]{24})')\r\n  async listCourseFeedback(\r\n    @Param('courseId') courseId: string,\r\n    @Pagination() pagination: PaginationParams,\r\n    @Query() queryFeedbackDto: QueryFeedbackDto\r\n  ) {\r\n    queryFeedbackDto.courseId = new Types.ObjectId(courseId)\r\n    return await this.feedbackService.list(pagination, queryFeedbackDto, FEEDBACK_LIST_PROJECTION, [\r\n      {\r\n        path: 'learner',\r\n        select: FEEDBACK_LEANER_DETAIL\r\n      }\r\n    ])\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Class's Feedback List`\r\n  })\r\n  @ApiOkResponse({ type: ClassFeedbackListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('classes/:classId([0-9a-f]{24})')\r\n  async listClassFeedback(@Param('classId') classId: string, @Query() queryFeedbackDto: QueryFeedbackDto) {\r\n    const { rate } = queryFeedbackDto\r\n    const conditions = {\r\n      classId: new Types.ObjectId(classId)\r\n    }\r\n    if (rate) {\r\n      conditions['rate'] = rate\r\n    }\r\n\r\n    const feedbacks = await this.feedbackService.findMany(conditions, FEEDBACK_LIST_PROJECTION, [\r\n      {\r\n        path: 'learner',\r\n        select: FEEDBACK_LEANER_DETAIL\r\n      }\r\n    ])\r\n    return { docs: feedbacks }\r\n  }\r\n}\r\n"]}