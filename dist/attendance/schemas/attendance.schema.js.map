{"version":3,"file":"attendance.schema.js","sourceRoot":"/","sources":["attendance/schemas/attendance.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,iDAAgD;AAChD,yDAA6C;AAC7C,8DAA6D;AAC7D,yEAAyD;AACzD,4EAA4D;AAiBrD,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CAkBF,CAAA;AArBY,gCAAU;AAKrB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;uCACjC;AAMX;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,2BAAgB;QACtB,OAAO,EAAE,2BAAgB,CAAC,OAAO;KAClC,CAAC;;0CACsB;AAGxB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCACX;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,wBAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvD,gBAAK,CAAC,QAAQ;6CAAA;AAGzB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,kBAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACvD,gBAAK,CAAC,QAAQ;0CAAA;qBApBX,UAAU;IAbtB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;YACD,QAAQ,EAAE,IAAI;SACf;KACF,CAAC;;GACW,UAAU,CAqBtB;AAEY,QAAA,gBAAgB,GAAG,wBAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;AAExE,wBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAEjC,wBAAgB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAA;AAEnD,wBAAgB,CAAC,OAAO,CAAC,SAAS,EAAE;IAClC,GAAG,EAAE,SAAS;IACd,UAAU,EAAE,WAAW;IACvB,YAAY,EAAE,KAAK;IACnB,OAAO,EAAE,IAAI;CACd,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { AttendanceStatus } from '@common/contracts/constant'\r\nimport { Learner } from '@learner/schemas/learner.schema'\r\nimport { Slot } from '@garden-timesheet/schemas/slot.schema'\r\n\r\nexport type AttendanceDocument = HydratedDocument<Attendance>\r\n\r\n@Schema({\r\n  collection: 'attendances',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    },\r\n    virtuals: true\r\n  }\r\n})\r\nexport class Attendance {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({\r\n    enum: AttendanceStatus,\r\n    default: AttendanceStatus.NOT_YET\r\n  })\r\n  status: AttendanceStatus\r\n\r\n  @Prop({ type: String })\r\n  note: string\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Learner.name, required: true })\r\n  learnerId: Types.ObjectId\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Slot.name, required: true })\r\n  slotId: Types.ObjectId\r\n}\r\n\r\nexport const AttendanceSchema = SchemaFactory.createForClass(Attendance)\r\n\r\nAttendanceSchema.plugin(paginate)\r\n\r\nAttendanceSchema.index({ slotId: 1, learnerId: 1 })\r\n\r\nAttendanceSchema.virtual('learner', {\r\n  ref: 'Learner',\r\n  localField: 'learnerId',\r\n  foreignField: '_id',\r\n  justOne: true\r\n})\r\n"]}