{"version":3,"file":"queue.module.js","sourceRoot":"/","sources":["queue/queue.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAA2C;AAC3C,2CAA+C;AAC/C,2CAA8C;AAE9C,mDAAgD;AAChD,0FAAmF;AACnF,8EAA+F;AAC/F,0EAAoE;AACpE,0EAAmE;AACnE,sFAAgF;AAChF,0EAAmE;AACnE,wDAAiD;AAqD1C,IAAM,WAAW,GAAjB,MAAM,WAAW;CAAG,CAAA;AAAd,kCAAW;sBAAX,WAAW;IAnDvB,IAAA,eAAM,GAAE;IACR,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,mBAAU,CAAC,YAAY,CAAC;gBACtB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,CAAC;oBAC7C,UAAU,EAAE,aAAa,CAAC,GAAG,CAAoB,OAAO,CAAC;oBACzD,MAAM,EAAE,WAAW;oBACnB,iBAAiB,EAAE;wBACjB,QAAQ,EAAE,CAAC;qBACZ;iBACF,CAAC;gBACF,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;YACF,mBAAU,CAAC,aAAa,CACtB;gBACE,IAAI,EAAE,oBAAS,CAAC,aAAa;aAC9B,EACD;gBACE,IAAI,EAAE,oBAAS,CAAC,cAAc;aAC/B,EACD;gBACE,IAAI,EAAE,oBAAS,CAAC,WAAW;aAC5B,EACD;gBACE,IAAI,EAAE,oBAAS,CAAC,KAAK;aACtB,EACD;gBACE,IAAI,EAAE,oBAAS,CAAC,IAAI;aACrB,CACF;YACD,sCAAiB;YACjB,sCAAiB;YACjB,0BAAW;SACZ;QACD,WAAW,EAAE,EAAE;QACf,SAAS,EAAE;YACT,wDAAyB;YACzB,yCAAkB;YAClB,qDAAwB;YACxB;gBACE,OAAO,EAAE,8CAAqB;gBAC9B,QAAQ,EAAE,6CAAoB;aAC/B;SACF;QACD,OAAO,EAAE;YACP;gBACE,OAAO,EAAE,8CAAqB;gBAC9B,QAAQ,EAAE,6CAAoB;aAC/B;SACF;KACF,CAAC;GACW,WAAW,CAAG","sourcesContent":["import { BullModule } from '@nestjs/bullmq'\r\nimport { Global, Module } from '@nestjs/common'\r\nimport { ConfigService } from '@nestjs/config'\r\nimport { ConnectionOptions } from 'bullmq'\r\nimport { QueueName } from './contracts/constant'\r\nimport { ClassRequestQueueConsumer } from './services/class-request.queue-consumer'\r\nimport { IQueueProducerService, QueueProducerService } from './services/queue-producer.service'\r\nimport { ClassQueueConsumer } from './services/class.queue-consumer'\r\nimport { RecruitmentModule } from '@recruitment/recruitment.module'\r\nimport { RecruitmentQueueConsumer } from './services/recruitment.queue-consumer'\r\nimport { CertificateModule } from '@certificate/certificate.module'\r\nimport { MediaModule } from '@media/media.module'\r\n\r\n@Global()\r\n@Module({\r\n  imports: [\r\n    BullModule.forRootAsync({\r\n      useFactory: (configService: ConfigService) => ({\r\n        connection: configService.get<ConnectionOptions>('redis'),\r\n        prefix: 'orchidify',\r\n        defaultJobOptions: {\r\n          attempts: 3\r\n        }\r\n      }),\r\n      inject: [ConfigService]\r\n    }),\r\n    BullModule.registerQueue(\r\n      {\r\n        name: QueueName.CLASS_REQUEST\r\n      },\r\n      {\r\n        name: QueueName.PAYOUT_REQUEST\r\n      },\r\n      {\r\n        name: QueueName.RECRUITMENT\r\n      },\r\n      {\r\n        name: QueueName.CLASS\r\n      },\r\n      {\r\n        name: QueueName.SLOT\r\n      }\r\n    ),\r\n    RecruitmentModule,\r\n    CertificateModule,\r\n    MediaModule\r\n  ],\r\n  controllers: [],\r\n  providers: [\r\n    ClassRequestQueueConsumer,\r\n    ClassQueueConsumer,\r\n    RecruitmentQueueConsumer,\r\n    {\r\n      provide: IQueueProducerService,\r\n      useClass: QueueProducerService\r\n    }\r\n  ],\r\n  exports: [\r\n    {\r\n      provide: IQueueProducerService,\r\n      useClass: QueueProducerService\r\n    }\r\n  ]\r\n})\r\nexport class QueueModule {}\r\n"]}