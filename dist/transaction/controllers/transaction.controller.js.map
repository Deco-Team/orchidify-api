{"version":3,"file":"transaction.controller.js","sourceRoot":"/","sources":["transaction/controllers/transaction.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, Inject, Logger, Param, Query, UseGuards } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\nimport { TRANSACTION_DETAIL_PROJECTION, TRANSACTION_LIST_PROJECTION } from '@src/transaction/contracts/constant'\r\nimport { ITransactionService } from '@transaction/services/transaction.service'\r\nimport { ErrorResponse, PaginationQuery } from '@common/contracts/dto'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport {\r\n  QueryTransactionDto,\r\n  TransactionDetailDataResponse,\r\n  TransactionListDataResponse\r\n} from '@transaction/dto/view-transaction.dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { QueryStaffDto } from '@staff/dto/view-staff.dto'\r\n\r\n@ApiTags('Transaction')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller()\r\nexport class TransactionController {\r\n  private readonly logger = new Logger(TransactionController.name)\r\n  constructor(\r\n    @Inject(ITransactionService)\r\n    private readonly transactionService: ITransactionService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Transaction List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: TransactionListDataResponse })\r\n  @Roles(UserRole.ADMIN)\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryTransactionDto: QueryTransactionDto) {\r\n    return await this.transactionService.list(pagination, queryTransactionDto, TRANSACTION_LIST_PROJECTION, [\r\n      {\r\n        path: 'debitAccount.user',\r\n        select: ['name']\r\n      },\r\n      {\r\n        path: 'creditAccount.user',\r\n        select: ['name']\r\n      }\r\n    ])\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.ADMIN}] View Transaction Detail`\r\n  })\r\n  @ApiOkResponse({ type: TransactionDetailDataResponse })\r\n  @ApiErrorResponse([Errors.TRANSACTION_NOT_FOUND])\r\n  @Roles(UserRole.ADMIN)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') staffId: string) {\r\n    const transaction = await this.transactionService.findById(staffId, TRANSACTION_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'debitAccount.user',\r\n        select: ['name']\r\n      },\r\n      {\r\n        path: 'creditAccount.user',\r\n        select: ['name']\r\n      }\r\n    ])\r\n\r\n    if (!transaction) throw new AppException(Errors.TRANSACTION_NOT_FOUND)\r\n\r\n    const payment = _.pick(transaction.payment, ['id', 'code', 'createdAt', 'status', 'description', 'orderInfo', 'histories'])\r\n    const payout = _.pick(transaction.payout, ['id', 'code', 'createdAt', 'status', 'histories'])\r\n    return { ...transaction.toObject(), payment, payout }\r\n  }\r\n}\r\n"]}