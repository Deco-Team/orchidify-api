{"version":3,"file":"management.instructor.controller.js","sourceRoot":"/","sources":["instructor/controllers/management.instructor.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Query, Param, Patch, Put, Body, Post } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport {\r\n  ErrorResponse,\r\n  IDDataResponse,\r\n  IDResponse,\r\n  PaginationQuery,\r\n  SuccessDataResponse,\r\n  SuccessResponse\r\n} from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { ClassStatus, InstructorStatus, RecruitmentStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { IUserTokenService } from '@auth/services/user-token.service'\r\nimport { IInstructorService } from '@instructor/services/instructor.service'\r\nimport { INSTRUCTOR_DETAIL_PROJECTION } from '@instructor/contracts/constant'\r\nimport {\r\n  InstructorDetailDataResponse,\r\n  InstructorListDataResponse,\r\n  QueryInstructorDto\r\n} from '@instructor/dto/view-instructor.dto'\r\nimport { UpdateInstructorDto } from '@instructor/dto/update-instructor.dto'\r\nimport { Types } from 'mongoose'\r\nimport { IClassService } from '@src/class/services/class.service'\r\nimport { CreateInstructorDto } from '@instructor/dto/create-instructor.dto'\r\nimport { IRecruitmentService } from '@recruitment/services/recruitment.service'\r\nimport { IReportService } from '@report/services/report.service'\r\nimport { ReportType } from '@report/contracts/constant'\r\n\r\n@ApiTags('Instructor - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller('management')\r\nexport class ManagementInstructorController {\r\n  constructor(\r\n    @Inject(IInstructorService)\r\n    private readonly instructorService: IInstructorService,\r\n    @Inject(IUserTokenService)\r\n    private readonly userTokenService: IUserTokenService,\r\n    @Inject(IClassService)\r\n    private readonly classService: IClassService,\r\n    @Inject(IRecruitmentService)\r\n    private readonly recruitmentService: IRecruitmentService,\r\n    @Inject(IReportService)\r\n    private readonly reportService: IReportService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Instructor List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: InstructorListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get()\r\n  async list(@Pagination() pagination: PaginationParams, @Query() queryInstructorDto: QueryInstructorDto) {\r\n    return await this.instructorService.list(pagination, queryInstructorDto)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Instructor Detail`\r\n  })\r\n  @ApiOkResponse({ type: InstructorDetailDataResponse })\r\n  @ApiErrorResponse([Errors.INSTRUCTOR_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') instructorId: string) {\r\n    const instructor = await this.instructorService.findById(instructorId, INSTRUCTOR_DETAIL_PROJECTION)\r\n    if (!instructor) throw new AppException(Errors.INSTRUCTOR_NOT_FOUND)\r\n\r\n    return instructor\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Add Instructor`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([Errors.EMAIL_ALREADY_EXIST, Errors.INSTRUCTOR_HAS_NO_SELECTED_APPLICATIONS])\r\n  @Roles(UserRole.STAFF)\r\n  @Post()\r\n  async create(@Body() createInstructorDto: CreateInstructorDto) {\r\n    const existedInstructor = await this.instructorService.findByEmail(createInstructorDto.email)\r\n    if (existedInstructor) throw new AppException(Errors.EMAIL_ALREADY_EXIST)\r\n\r\n    //BR-19: Only email that is approved in recruitment is allowed to be used to add a new instructor.\r\n    const selectedRecruitment = await this.recruitmentService.findOneByApplicationEmailAndStatus(\r\n      createInstructorDto.email,\r\n      [RecruitmentStatus.SELECTED]\r\n    )\r\n    if (!selectedRecruitment) throw new AppException(Errors.INSTRUCTOR_HAS_NO_SELECTED_APPLICATIONS)\r\n\r\n    const instructor = await this.instructorService.create(createInstructorDto)\r\n    await this.recruitmentService.update({ _id: selectedRecruitment._id }, { $set: { isInstructorAdded: true } })\r\n\r\n    // update instructor report\r\n    this.reportService.update(\r\n      { type: ReportType.InstructorSum },\r\n      {\r\n        $inc: {\r\n          'data.quantity': 1\r\n        }\r\n      }\r\n    )\r\n\r\n    // update instructor sum by month report\r\n    const month = new Date().getMonth() + 1\r\n    const year = new Date().getFullYear()\r\n    this.reportService.update(\r\n      { type: ReportType.InstructorSumByMonth, 'data.year': year },\r\n      {\r\n        $inc: {\r\n          [`data.${month}.quantity`]: 1\r\n        }\r\n      }\r\n    )\r\n\r\n    return new IDResponse(instructor._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Update Instructor`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.INSTRUCTOR_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Put(':id([0-9a-f]{24})')\r\n  async update(@Param('id') instructorId: string, @Body() updateInstructorDto: UpdateInstructorDto) {\r\n    const instructor = await this.instructorService.update({ _id: instructorId }, updateInstructorDto)\r\n\r\n    if (!instructor) throw new AppException(Errors.INSTRUCTOR_NOT_FOUND)\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Deactivate Instructor`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.INSTRUCTOR_HAS_PUBLISHED_OR_IN_PROGRESSING_CLASSES])\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/deactivate')\r\n  async deactivate(@Param('id') instructorId: string) {\r\n    // BR-21 Cannot deactivate an instructor whose class is published or in progress.\r\n    const classes = await this.classService.findManyByInstructorIdAndStatus(instructorId, [\r\n      ClassStatus.PUBLISHED,\r\n      ClassStatus.IN_PROGRESS\r\n    ])\r\n    if (classes.length > 0) throw new AppException(Errors.INSTRUCTOR_HAS_PUBLISHED_OR_IN_PROGRESSING_CLASSES)\r\n\r\n    await Promise.all([\r\n      this.instructorService.update(\r\n        {\r\n          _id: instructorId\r\n        },\r\n        { status: InstructorStatus.INACTIVE }\r\n      ),\r\n      this.userTokenService.clearAllRefreshTokensOfUser(new Types.ObjectId(instructorId), UserRole.INSTRUCTOR)\r\n    ])\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Activate Instructor`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/active')\r\n  async activate(@Param('id') instructorId: string) {\r\n    await this.instructorService.update(\r\n      {\r\n        _id: instructorId\r\n      },\r\n      { status: InstructorStatus.ACTIVE }\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n}\r\n"]}