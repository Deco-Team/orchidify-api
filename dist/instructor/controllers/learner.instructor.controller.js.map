{"version":3,"file":"learner.instructor.controller.js","sourceRoot":"/","sources":["instructor/controllers/learner.instructor.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA0E;AAC1E,6CAA4G;AAG5G,oDAAqD;AACrD,2EAAwD;AACxD,8DAAqD;AACrD,qEAA0D;AAC1D,+DAAqD;AACrD,yEAA+D;AAC/D,wDAAgD;AAChD,2FAA4E;AAC5E,uEAA4E;AAC5E,oDAAyF;AACzF,oEAA4F;AAQrF,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IACtC,YAEmB,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;IACrD,CAAC;IAQE,AAAN,KAAK,CAAC,SAAS,CAAc,YAAoB;QAC/C,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,EAAE,mDAAwC,CAAC,CAAA;QAChH,IAAI,CAAC,UAAU;YAAE,MAAM,IAAI,4BAAY,CAAC,cAAM,CAAC,oBAAoB,CAAC,CAAA;QAEpE,OAAO,UAAU,CAAA;IACnB,CAAC;CACF,CAAA;AAlBY,kEAA2B;AAYhC;IANL,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,wBAAwB;KAClC,CAAC;IACD,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,4DAAsC,EAAE,CAAC;IAC/D,IAAA,yCAAgB,EAAC,CAAC,cAAM,CAAC,oBAAoB,CAAC,CAAC;IAC/C,IAAA,YAAG,EAAC,mBAAmB,CAAC;IACR,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;4DAK3B;sCAjBU,2BAA2B;IANvC,IAAA,iBAAO,EAAC,sBAAsB,CAAC;IAC/B,IAAA,uBAAa,GAAE;IACf,IAAA,+BAAqB,EAAC,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IAC9C,IAAA,kBAAS,EAAC,6BAAY,CAAC,YAAY,EAAE,wBAAU,CAAC;IAChD,IAAA,uBAAK,EAAC,mBAAQ,CAAC,OAAO,CAAC;IACvB,IAAA,mBAAU,EAAC,SAAS,CAAC;IAGjB,WAAA,IAAA,eAAM,EAAC,uCAAkB,CAAC,CAAA;;GAFlB,2BAA2B,CAkBvC","sourcesContent":["import { Controller, Get, UseGuards, Inject, Param } from '@nestjs/common'\r\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport { ErrorResponse } from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { IInstructorService } from '@instructor/services/instructor.service'\r\nimport { VIEWER_VIEW_INSTRUCTOR_DETAIL_PROJECTION } from '@instructor/contracts/constant'\r\nimport { ViewerViewInstructorDetailDataResponse } from '@instructor/dto/view-instructor.dto'\r\n\r\n@ApiTags('Instructor - Learner')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Roles(UserRole.LEARNER)\r\n@Controller('learner')\r\nexport class LearnerInstructorController {\r\n  constructor(\r\n    @Inject(IInstructorService)\r\n    private readonly instructorService: IInstructorService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `View Instructor Detail`\r\n  })\r\n  @ApiOkResponse({ type: ViewerViewInstructorDetailDataResponse })\r\n  @ApiErrorResponse([Errors.INSTRUCTOR_NOT_FOUND])\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Param('id') instructorId: string) {\r\n    const instructor = await this.instructorService.findById(instructorId, VIEWER_VIEW_INSTRUCTOR_DETAIL_PROJECTION)\r\n    if (!instructor) throw new AppException(Errors.INSTRUCTOR_NOT_FOUND)\r\n\r\n    return instructor\r\n  }\r\n}\r\n"]}