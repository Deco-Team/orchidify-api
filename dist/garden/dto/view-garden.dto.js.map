{"version":3,"file":"view-garden.dto.js","sourceRoot":"/","sources":["garden/dto/view-garden.dto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAA4E;AAC5E,4EAAkF;AAClF,qDAAiE;AACjE,8DAAyD;AACzD,yDAA6C;AAC7C,uDAA2D;AAC3D,oDAA6F;AAC7F,8FAAkF;AAGlF,MAAa,cAAc;CA0B1B;AA1BD,wCA0BC;AAnBC;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,gBAAgB;KAC9B,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,EAAE,CAAC;;4CACF;AAQZ;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,mBAAmB;KACjC,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,GAAG,CAAC;;+CACA;AAQf;IANC,IAAA,6BAAmB,EAAC;QACnB,IAAI,EAAE,uBAAY;QAClB,OAAO,EAAE,IAAI;KACd,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;;8CAClD;AAKxB,MAAM,sBAAuB,SAAQ,IAAA,kBAAQ,EAAC,+BAAa,EAAE,iCAAsB,CAAC;CAGnF;AADC;IADC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,IAAA,kBAAQ,EAAC,8CAAoB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;8BACxD,8CAAoB;6DAAA;AAErC,MAAM,kBAAmB,SAAQ,IAAA,kCAAgB,EAAC,sBAAsB,CAAC;CAAG;AAC5E,MAAa,sBAAuB,SAAQ,IAAA,8BAAY,EAAC,kBAAkB,CAAC;CAAG;AAA/E,wDAA+E;AAE/E,MAAM,oBAAqB,SAAQ,IAAA,kBAAQ,EAAC,+BAAa,EAAE,mCAAwB,CAAC;CAGnF;AADC;IADC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,IAAA,kBAAQ,EAAC,8CAAoB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;8BACxD,8CAAoB;2DAAA;AAErC,MAAa,wBAAyB,SAAQ,IAAA,8BAAY,EAAC,oBAAoB,CAAC;CAAG;AAAnF,4DAAmF","sourcesContent":["import { ApiProperty, ApiPropertyOptional, PickType } from '@nestjs/swagger'\r\nimport { DataResponse, PaginateResponse } from '@common/contracts/openapi-builder'\r\nimport { IsOptional, IsString, MaxLength } from 'class-validator'\r\nimport { GardenStatus } from '@common/contracts/constant'\r\nimport { Transform } from 'class-transformer'\r\nimport { BaseGardenDto } from '@garden/dto/base.garden.dto'\r\nimport { GARDEN_DETAIL_PROJECTION, GARDEN_LIST_PROJECTION } from '@garden/contracts/constant'\r\nimport { BaseGardenManagerDto } from '@garden-manager/dto/base.garden-manager.dto'\r\nimport { Types } from 'mongoose'\r\n\r\nexport class QueryGardenDto {\r\n  @ApiPropertyOptional({\r\n    description: 'Name to search'\r\n  })\r\n  @IsOptional()\r\n  @IsString()\r\n  @MaxLength(50)\r\n  name: string\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Address to search'\r\n  })\r\n  @IsOptional()\r\n  @IsString()\r\n  @MaxLength(100)\r\n  address: string\r\n\r\n  @ApiPropertyOptional({\r\n    enum: GardenStatus,\r\n    isArray: true\r\n  })\r\n  @IsOptional()\r\n  @Transform(({ value }) => (Array.isArray(value) ? value : Array(value)))\r\n  status: GardenStatus[]\r\n\r\n  gardenManagerId: Types.ObjectId\r\n}\r\n\r\nclass GardenListItemResponse extends PickType(BaseGardenDto, GARDEN_LIST_PROJECTION) {\r\n  @ApiProperty({ type: PickType(BaseGardenManagerDto, ['_id', 'name']) })\r\n  gardenManager: BaseGardenManagerDto\r\n}\r\nclass GardenListResponse extends PaginateResponse(GardenListItemResponse) {}\r\nexport class GardenListDataResponse extends DataResponse(GardenListResponse) {}\r\n\r\nclass GardenDetailResponse extends PickType(BaseGardenDto, GARDEN_DETAIL_PROJECTION) {\r\n  @ApiProperty({ type: PickType(BaseGardenManagerDto, ['_id', 'name']) })\r\n  gardenManager: BaseGardenManagerDto\r\n}\r\nexport class GardenDetailDataResponse extends DataResponse(GardenDetailResponse) {}\r\n"]}