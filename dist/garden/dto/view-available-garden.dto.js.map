{"version":3,"file":"view-available-garden.dto.js","sourceRoot":"/","sources":["garden/dto/view-available-garden.dto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAAuD;AACvD,4EAAgE;AAChE,qDAAyG;AACzG,8DAAgE;AAChE,yDAAmD;AACnD,uDAA2D;AAE3D,mGAA8E;AAE9E,uCAAgC;AAEhC,MAAa,uBAAuB;CAgCnC;AAhCD,0DAgCC;AA5BC;IAHC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAE3B,IAAA,2CAAc,EAAC,CAAC,CAAC;8BACP,IAAI;0DAAA;AAOf;IALC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC7B,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAA,uBAAK,GAAE;IACP,IAAA,qBAAG,EAAC,CAAC,CAAC;IACN,IAAA,qBAAG,EAAC,EAAE,CAAC;;yDACQ;AAQhB;IANC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,kBAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC7C,IAAA,yBAAO,GAAE;IACT,IAAA,wBAAM,EAAC,kBAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAC/B,IAAA,8BAAY,EAAC,CAAC,CAAC;IACf,IAAA,8BAAY,EAAC,CAAC,CAAC;IACf,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;;yDACnE;AAQnB;IANC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,qBAAU,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAChD,IAAA,yBAAO,GAAE;IACT,IAAA,wBAAM,EAAC,qBAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAClC,IAAA,8BAAY,EAAC,CAAC,CAAC;IACf,IAAA,8BAAY,EAAC,CAAC,CAAC;IACf,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;4DACrF;AAIzB;IAFC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC7B,IAAA,2BAAS,GAAE;8BACE,gBAAK,CAAC,QAAQ;6DAAA;AAG9B,MAAa,+BAAgC,SAAQ,IAAA,kBAAQ,EAAC,+BAAa,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAAG;AAAhG,0EAAgG;AAChG,MAAM,2BAA2B;CAGhC;AADC;IADC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;yDAC/B;AAEzC,MAAa,+BAAgC,SAAQ,IAAA,8BAAY,EAAC,2BAA2B,CAAC;CAAG;AAAjG,0EAAiG","sourcesContent":["import { ApiProperty, PickType } from '@nestjs/swagger'\r\nimport { DataResponse } from '@common/contracts/openapi-builder'\r\nimport { ArrayMaxSize, ArrayMinSize, IsArray, IsEnum, IsInt, IsMongoId, Max, Min } from 'class-validator'\r\nimport { SlotNumber, Weekday } from '@common/contracts/constant'\r\nimport { Transform, Type } from 'class-transformer'\r\nimport { BaseGardenDto } from '@garden/dto/base.garden.dto'\r\nimport { FutureMinMonth } from '@common/validators/future-min-month.validator'\r\nimport { FutureMaxMonth } from '@common/validators/future-max-month.validator'\r\nimport { Observable } from 'rxjs'\r\nimport { Types } from 'mongoose'\r\n\r\nexport class QueryAvailableGardenDto {\r\n  @ApiProperty({ type: Date })\r\n  // @FutureMinMonth(1)\r\n  @FutureMaxMonth(3)\r\n  startDate: Date\r\n\r\n  @ApiProperty({ type: Number })\r\n  @Type(() => Number)\r\n  @IsInt()\r\n  @Min(1)\r\n  @Max(12)\r\n  duration: number\r\n\r\n  @ApiProperty({ enum: Weekday, isArray: true })\r\n  @IsArray()\r\n  @IsEnum(Weekday, { each: true })\r\n  @ArrayMinSize(1)\r\n  @ArrayMaxSize(7)\r\n  @Transform(({ value }) => (Array.isArray(value) ? [...new Set(value)] : Array(value)))\r\n  weekdays: Weekday[]\r\n\r\n  @ApiProperty({ enum: SlotNumber, isArray: true })\r\n  @IsArray()\r\n  @IsEnum(SlotNumber, { each: true })\r\n  @ArrayMinSize(1)\r\n  @ArrayMaxSize(4)\r\n  @Transform(({ value }) => (Array.isArray(value) ? [...new Set(value)].map(Number) : Array(value).map(Number)))\r\n  slotNumbers: SlotNumber[]\r\n\r\n  @ApiProperty({ type: String })\r\n  @IsMongoId()\r\n  instructorId: Types.ObjectId\r\n}\r\n\r\nexport class AvailableGardenListItemResponse extends PickType(BaseGardenDto, ['_id', 'name']) {}\r\nclass AvailableGardenListResponse {\r\n  @ApiProperty({ type: AvailableGardenListItemResponse, isArray: true })\r\n  docs: AvailableGardenListItemResponse[]\r\n}\r\nexport class AvailableGardenListDataResponse extends DataResponse(AvailableGardenListResponse) {}\r\n"]}