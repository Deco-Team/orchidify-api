{"version":3,"file":"garden.schema.js","sourceRoot":"/","sources":["garden/schemas/garden.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8D;AAC9D,uCAAkD;AAClD,iDAAgD;AAChD,yDAA6C;AAC7C,8DAAyD;AACzD,8FAA6E;AAiBtE,IAAM,MAAM,GAAZ,MAAM,MAAM;IACjB,YAAY,EAAW;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;CA8BF,CAAA;AAjCY,wBAAM;AAKjB;IADC,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;;mCACjC;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;oCAC3B;AAGZ;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CACpB;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;uCACxB;AAGf;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CACpB;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;sCACxB;AAMhB;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,uBAAY;QAClB,OAAO,EAAE,uBAAY,CAAC,MAAM;KAC7B,CAAC;;sCACkB;AAGpB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCACP;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,qCAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CACzB;iBAhCpC,MAAM;IAblB,IAAA,iBAAM,EAAC;QACN,UAAU,EAAE,SAAS;QACrB,UAAU,EAAE;YACV,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;SAChB;QACD,MAAM,EAAE;YACN,SAAS,CAAC,GAAG,EAAE,GAAG;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAA;YAChB,CAAC;YACD,QAAQ,EAAE,IAAI;SACf;KACF,CAAC;;GACW,MAAM,CAiClB;AAEY,QAAA,YAAY,GAAG,wBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;AAEhE,oBAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAE7B,oBAAY,CAAC,KAAK,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,CAAC,CAAA;AAC1C,oBAAY,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;AACjD,oBAAY,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;AAErD,oBAAY,CAAC,OAAO,CAAC,eAAe,EAAE;IACpC,GAAG,EAAE,eAAe;IACpB,UAAU,EAAE,iBAAiB;IAC7B,YAAY,EAAE,KAAK;CACpB,CAAC,CAAA","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\r\nimport { HydratedDocument, Types } from 'mongoose'\r\nimport * as paginate from 'mongoose-paginate-v2'\r\nimport { Transform } from 'class-transformer'\r\nimport { GardenStatus } from '@common/contracts/constant'\r\nimport { GardenManager } from '@garden-manager/schemas/garden-manager.schema'\r\n\r\nexport type GardenDocument = HydratedDocument<Garden>\r\n\r\n@Schema({\r\n  collection: 'gardens',\r\n  timestamps: {\r\n    createdAt: true,\r\n    updatedAt: true\r\n  },\r\n  toJSON: {\r\n    transform(doc, ret) {\r\n      delete ret.__v\r\n    },\r\n    virtuals: true\r\n  }\r\n})\r\nexport class Garden {\r\n  constructor(id?: string) {\r\n    this._id = id\r\n  }\r\n  @Transform(({ value }) => value?.toString())\r\n  _id: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  name: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  description: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  address: string\r\n\r\n  @Prop({ type: String, required: true })\r\n  addressLink: string\r\n\r\n  @Prop({ type: [Array], required: true })\r\n  images: string[]\r\n\r\n  @Prop({\r\n    enum: GardenStatus,\r\n    default: GardenStatus.ACTIVE\r\n  })\r\n  status: GardenStatus\r\n\r\n  @Prop({ type: Number })\r\n  maxClass: number\r\n\r\n  @Prop({ type: Types.ObjectId, ref: GardenManager.name, required: true })\r\n  gardenManagerId: Types.ObjectId | GardenManager\r\n}\r\n\r\nexport const GardenSchema = SchemaFactory.createForClass(Garden)\r\n\r\nGardenSchema.plugin(paginate)\r\n\r\nGardenSchema.index({ gardenManagerId: 1 })\r\nGardenSchema.index({ name: 1 }, { unique: true })\r\nGardenSchema.index({ name: 'text', address: 'text' })\r\n\r\nGardenSchema.virtual('gardenManager', {\r\n  ref: 'GardenManager',\r\n  localField: 'gardenManagerId',\r\n  foreignField: '_id'\r\n})\r\n"]}