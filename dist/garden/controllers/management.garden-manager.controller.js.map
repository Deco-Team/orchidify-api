{"version":3,"file":"management.garden-manager.controller.js","sourceRoot":"/","sources":["garden/controllers/management.garden-manager.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller, Get, UseGuards, Inject, Put, Body, Post, Query, Param, Patch, Req } from '@nestjs/common'\r\nimport {\r\n  ApiBadRequestResponse,\r\n  ApiBearerAuth,\r\n  ApiCreatedResponse,\r\n  ApiOkResponse,\r\n  ApiOperation,\r\n  ApiQuery,\r\n  ApiTags\r\n} from '@nestjs/swagger'\r\nimport * as _ from 'lodash'\r\n\r\nimport {\r\n  ErrorResponse,\r\n  IDDataResponse,\r\n  IDResponse,\r\n  PaginationQuery,\r\n  SuccessDataResponse,\r\n  SuccessResponse\r\n} from '@common/contracts/dto'\r\nimport { Roles } from '@auth/decorators/roles.decorator'\r\nimport { ClassStatus, GardenManagerStatus, GardenStatus, UserRole } from '@common/contracts/constant'\r\nimport { JwtAuthGuard } from '@auth/guards/jwt-auth.guard'\r\nimport { RolesGuard } from '@auth/guards/roles.guard'\r\nimport { AppException } from '@common/exceptions/app.exception'\r\nimport { Errors } from '@common/contracts/error'\r\nimport { ApiErrorResponse } from '@common/decorators/api-response.decorator'\r\nimport { Pagination, PaginationParams } from '@common/decorators/pagination.decorator'\r\nimport { IGardenService } from '@garden/services/garden.service'\r\nimport { GardenDetailDataResponse, GardenListDataResponse, QueryGardenDto } from '@garden/dto/view-garden.dto'\r\nimport { GARDEN_DETAIL_PROJECTION, GARDEN_LIST_PROJECTION } from '@garden/contracts/constant'\r\nimport { CreateGardenDto } from '@garden/dto/create-garden.dto'\r\nimport { UpdateGardenDto } from '@garden/dto/update-garden.dto'\r\nimport { IGardenManagerService } from '@garden-manager/services/garden-manager.service'\r\nimport { IClassService } from '@src/class/services/class.service'\r\nimport { Types } from 'mongoose'\r\nimport { AvailableGardenListDataResponse, QueryAvailableGardenDto } from '@garden/dto/view-available-garden.dto'\r\n\r\n@ApiTags('Garden - Management')\r\n@ApiBearerAuth()\r\n@ApiBadRequestResponse({ type: ErrorResponse })\r\n@UseGuards(JwtAuthGuard.ACCESS_TOKEN, RolesGuard)\r\n@Controller()\r\nexport class ManagementGardenController {\r\n  constructor(\r\n    @Inject(IGardenService)\r\n    private readonly gardenService: IGardenService,\r\n    @Inject(IGardenManagerService)\r\n    private readonly gardenManagerService: IGardenManagerService,\r\n    @Inject(IClassService)\r\n    private readonly classService: IClassService\r\n  ) {}\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}][${UserRole.GARDEN_MANAGER}] View Garden List`\r\n  })\r\n  @ApiQuery({ type: PaginationQuery })\r\n  @ApiOkResponse({ type: GardenListDataResponse })\r\n  @Roles(UserRole.STAFF, UserRole.GARDEN_MANAGER)\r\n  @Get()\r\n  async list(@Req() req, @Pagination() pagination: PaginationParams, @Query() queryGardenDto: QueryGardenDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    if (role === UserRole.GARDEN_MANAGER) {\r\n      queryGardenDto.gardenManagerId = new Types.ObjectId(_id)\r\n    }\r\n    return await this.gardenService.list(pagination, queryGardenDto, GARDEN_LIST_PROJECTION, [\r\n      {\r\n        path: 'gardenManager',\r\n        select: ['name']\r\n      }\r\n    ])\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}][${UserRole.GARDEN_MANAGER}] View Garden Detail`\r\n  })\r\n  @ApiOkResponse({ type: GardenDetailDataResponse })\r\n  @ApiErrorResponse([Errors.GARDEN_NOT_FOUND])\r\n  @Roles(UserRole.STAFF, UserRole.GARDEN_MANAGER)\r\n  @Get(':id([0-9a-f]{24})')\r\n  async getDetail(@Req() req, @Param('id') gardenId: string) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const garden = await this.gardenService.findById(gardenId, GARDEN_DETAIL_PROJECTION, [\r\n      {\r\n        path: 'gardenManager',\r\n        select: ['name']\r\n      }\r\n    ])\r\n\r\n    if (!garden || (role === UserRole.GARDEN_MANAGER && garden?.gardenManagerId?.toString() !== _id))\r\n      throw new AppException(Errors.GARDEN_NOT_FOUND)\r\n    return garden\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Add Garden`\r\n  })\r\n  @ApiCreatedResponse({ type: IDDataResponse })\r\n  @ApiErrorResponse([Errors.GARDEN_NAME_EXISTED, Errors.GARDEN_MANAGER_NOT_FOUND])\r\n  @Roles(UserRole.STAFF)\r\n  @Post()\r\n  async create(@Body() createGardenDto: CreateGardenDto) {\r\n    const gardenManager = await this.gardenManagerService.findById(createGardenDto.gardenManagerId)\r\n    if (!gardenManager || gardenManager.status !== GardenManagerStatus.ACTIVE)\r\n      throw new AppException(Errors.GARDEN_MANAGER_NOT_FOUND)\r\n\r\n    const garden = await this.gardenService.create(createGardenDto)\r\n    return new IDResponse(garden._id)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}][${UserRole.GARDEN_MANAGER}] Update Garden`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.GARDEN_NOT_FOUND, Errors.GARDEN_NAME_EXISTED, Errors.GARDEN_MANAGER_NOT_FOUND])\r\n  @Roles(UserRole.STAFF, UserRole.GARDEN_MANAGER)\r\n  @Put(':id([0-9a-f]{24})')\r\n  async update(@Req() req, @Param('id') gardenId: string, @Body() updateGardenDto: UpdateGardenDto) {\r\n    const { _id, role } = _.get(req, 'user')\r\n    const conditions = { _id: gardenId }\r\n    if (role === UserRole.GARDEN_MANAGER) {\r\n      delete updateGardenDto.gardenManagerId\r\n      conditions['gardenManagerId'] = new Types.ObjectId(_id)\r\n    }\r\n\r\n    if (updateGardenDto.gardenManagerId) {\r\n      const gardenManager = await this.gardenManagerService.findById(updateGardenDto.gardenManagerId)\r\n      if (!gardenManager || gardenManager.status !== GardenManagerStatus.ACTIVE)\r\n        throw new AppException(Errors.GARDEN_MANAGER_NOT_FOUND)\r\n    }\r\n\r\n    const garden = await this.gardenService.update(conditions, updateGardenDto)\r\n\r\n    if (!garden) throw new AppException(Errors.GARDEN_NOT_FOUND)\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Deactivate Garden`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @ApiErrorResponse([Errors.SCHEDULED_OR_IN_PROGRESSING_CLASS_IN_GARDEN])\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/deactivate')\r\n  async deactivate(@Param('id') gardenId: string) {\r\n    // BR-30: Garden can not be deactivated if there are any in-progressing or scheduled classes.\r\n    const courseClasses = await this.classService.findManyByGardenIdAndStatus(gardenId, [\r\n      ClassStatus.PUBLISHED,\r\n      ClassStatus.IN_PROGRESS\r\n    ])\r\n    if (courseClasses.length > 0) throw new AppException(Errors.SCHEDULED_OR_IN_PROGRESSING_CLASS_IN_GARDEN)\r\n\r\n    await this.gardenService.update(\r\n      {\r\n        _id: gardenId\r\n      },\r\n      { status: GardenStatus.INACTIVE }\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] Activate Garden`\r\n  })\r\n  @ApiOkResponse({ type: SuccessDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Patch('/:id([0-9a-f]{24})/active')\r\n  async activate(@Param('id') gardenId: string) {\r\n    await this.gardenService.update(\r\n      {\r\n        _id: gardenId\r\n      },\r\n      { status: GardenStatus.ACTIVE }\r\n    )\r\n    return new SuccessResponse(true)\r\n  }\r\n\r\n  @ApiOperation({\r\n    summary: `[${UserRole.STAFF}] View Available Garden List for Create Request to Publish Class`\r\n  })\r\n  @ApiOkResponse({ type: AvailableGardenListDataResponse })\r\n  @Roles(UserRole.STAFF)\r\n  @Get('available')\r\n  async getAvailableGardenList(@Query() queryAvailableGardenDto: QueryAvailableGardenDto) {\r\n    const docs = await this.gardenService.getAvailableGardenList(queryAvailableGardenDto)\r\n    return { docs }\r\n  }\r\n}\r\n"]}