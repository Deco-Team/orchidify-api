{"version":3,"file":"app.controller.js","sourceRoot":"/","sources":["app.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAAgD;AAChD,+CAAkH;AAClH,+CAA6C;AAC7C,qEAA+D;AAGxD,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YACmB,UAAsB,EACtB,kBAAsC,EACtC,qBAA4C,EAC5C,uBAAgD,EAChD,aAA4B;QAJ5B,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,kBAAa,GAAb,aAAa,CAAe;IAC5C,CAAC;IAGJ,UAAU;QACR,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAA;IACtC,CAAC;IAGK,AAAN,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,GAAG;YACX,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,6CAA6C;YAC1D,aAAa,EAAE,eAAe;YAC9B,eAAe,EAAE,aAAa;YAC9B,cAAc,EAAE,iBAAiB;YACjC,mBAAmB,EAAE,wFAAwF;SAC9G,CAAA;QAED,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YACnC,IAAI;YACJ,YAAY,EAAE,qCAAqC;YACnD,eAAe,EAAE,gBAAgB;SAClC,CAAC,CAAA;QAEF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAA;IACjD,CAAC;IAID,WAAW;QACT,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;YACnC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC;YACvD,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;SAC7E,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AA1CY,sCAAa;AAUxB;IADC,IAAA,YAAG,EAAC,SAAS,CAAC;;;;+CAGd;AAGK;IADL,IAAA,YAAG,EAAC,MAAM,CAAC;;;;yCAkBX;AAID;IAFC,IAAA,YAAG,EAAC,QAAQ,CAAC;IACb,IAAA,sBAAW,GAAE;;;;gDAMb;wBAzCU,aAAa;IADzB,IAAA,mBAAU,GAAE;qCAGoB,wBAAU;QACF,6BAAkB;QACf,gCAAqB;QACnB,kCAAuB;QACjC,8BAAa;GANpC,aAAa,CA0CzB","sourcesContent":["import { Controller, Get } from '@nestjs/common'\r\nimport { HealthCheck, HealthCheckService, MemoryHealthIndicator, MongooseHealthIndicator } from '@nestjs/terminus'\r\nimport { AppService } from '@src/app.service'\r\nimport { HelperService } from '@common/services/helper.service'\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(\r\n    private readonly appService: AppService,\r\n    private readonly healthCheckService: HealthCheckService,\r\n    private readonly memoryHealthIndicator: MemoryHealthIndicator,\r\n    private readonly mongooseHealthIndicator: MongooseHealthIndicator,\r\n    private readonly helperService: HelperService\r\n  ) {}\r\n\r\n  @Get('welcome')\r\n  getWelcome(): string {\r\n    return this.appService.getI18nText()\r\n  }\r\n\r\n  @Get('cert')\r\n  async cert() {\r\n    const data = {\r\n      learnerName: 'Vo Minh Tien',\r\n      courseTitle: 'Khóa học chăm học lan rừng, lan công nghiệp',\r\n      dateCompleted: 'July, 23 2021',\r\n      certificateCode: 'BS182903344',\r\n      instructorName: 'Nguyen Ngoc Anh',\r\n      instructorSignature: 'https://res.cloudinary.com/orchidify/image/upload/v1731113221/gdqqxchgrail8mrpkhwa.png'\r\n    }\r\n\r\n    await this.helperService.generatePDF({\r\n      data,\r\n      templatePath: './templates/learner/certificate.ejs',\r\n      certificatePath: 'certs/cert.pdf'\r\n    })\r\n\r\n    console.log('PDF file generated successfully.')\r\n  }\r\n\r\n  @Get('health')\r\n  @HealthCheck()\r\n  healthCheck() {\r\n    return this.healthCheckService.check([\r\n      () => this.mongooseHealthIndicator.pingCheck('mongodb'),\r\n      () => this.memoryHealthIndicator.checkHeap('memory_heap', 150 * 1024 * 1024)\r\n    ])\r\n  }\r\n}\r\n"]}