{"version":3,"file":"app.controller.js","sourceRoot":"/","sources":["app.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAAgD;AAChD,+CAAkH;AAClH,+CAA6C;AAKtC,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YACmB,UAAsB,EACtB,kBAAsC,EACtC,qBAA4C,EAC5C,uBAAgD;QAHhD,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,4BAAuB,GAAvB,uBAAuB,CAAyB;IAChE,CAAC;IAGJ,UAAU;QACR,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAA;IACtC,CAAC;IAUD,WAAW;QACT,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;YACnC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC;YACvD,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;SAC7E,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AA3BY,sCAAa;AASxB;IADC,IAAA,YAAG,EAAC,SAAS,CAAC;;;;+CAGd;AAUD;IAFC,IAAA,YAAG,EAAC,QAAQ,CAAC;IACb,IAAA,sBAAW,GAAE;;;;gDAMb;wBA1BU,aAAa;IADzB,IAAA,mBAAU,GAAE;qCAGoB,wBAAU;QACF,6BAAkB;QACf,gCAAqB;QACnB,kCAAuB;GALxD,aAAa,CA2BzB","sourcesContent":["import { Controller, Get } from '@nestjs/common'\r\nimport { HealthCheck, HealthCheckService, MemoryHealthIndicator, MongooseHealthIndicator } from '@nestjs/terminus'\r\nimport { AppService } from '@src/app.service'\r\n// import * as fs from 'fs'\r\n// import * as path from 'path'\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(\r\n    private readonly appService: AppService,\r\n    private readonly healthCheckService: HealthCheckService,\r\n    private readonly memoryHealthIndicator: MemoryHealthIndicator,\r\n    private readonly mongooseHealthIndicator: MongooseHealthIndicator\r\n  ) {}\r\n\r\n  @Get('welcome')\r\n  getWelcome(): string {\r\n    return this.appService.getI18nText()\r\n  }\r\n\r\n  // @Get('base64')\r\n  // async base64() {\r\n  //   const fileName = path.join(__dirname, '../IMG_1442.JPG')\r\n  //   return await fs.promises.readFile(fileName, { encoding: 'base64' })\r\n  // }\r\n\r\n  @Get('health')\r\n  @HealthCheck()\r\n  healthCheck() {\r\n    return this.healthCheckService.check([\r\n      () => this.mongooseHealthIndicator.pingCheck('mongodb'),\r\n      () => this.memoryHealthIndicator.checkHeap('memory_heap', 150 * 1024 * 1024)\r\n    ])\r\n  }\r\n}\r\n"]}