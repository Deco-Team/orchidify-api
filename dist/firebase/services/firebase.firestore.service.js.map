{"version":3,"file":"firebase.firestore.service.js","sourceRoot":"/","sources":["firebase/services/firebase.firestore.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAmD;AAEnD,6EAAgF;AAChF,iFAA+D;AAElD,QAAA,yBAAyB,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAA;AAOrE,IAAM,wBAAwB,gCAA9B,MAAM,wBAAwB;IAEnC,YAEE,kBAAwD;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;QAHzC,cAAS,GAAG,IAAI,8BAAS,CAAC,0BAAwB,CAAC,IAAI,CAAC,CAAA;IAItE,CAAC;IAEG,KAAK,CAAC,aAAa,CAAC,cAAsB;QAC/C,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAA;IACpE,CAAC;CACF,CAAA;AAVY,4DAAwB;mCAAxB,wBAAwB;IADpC,IAAA,mBAAU,GAAE;IAIR,WAAA,IAAA,eAAM,EAAC,yCAAmB,CAAC,CAAA;;GAHnB,wBAAwB,CAUpC","sourcesContent":["import { Injectable, Inject } from '@nestjs/common'\r\nimport * as _ from 'lodash'\r\nimport { IFirebaseRepository } from '@firebase/repositories/firebase.repository'\r\nimport { AppLogger } from '@common/services/app-logger.service'\r\n\r\nexport const IFirebaseFirestoreService = Symbol('IFirebaseFirestoreService')\r\n\r\nexport interface IFirebaseFirestoreService {\r\n  getCollection(collectionName: string): Promise<FirebaseFirestore.CollectionReference>\r\n}\r\n\r\n@Injectable()\r\nexport class FirebaseFirestoreService implements IFirebaseFirestoreService {\r\n  private readonly appLogger = new AppLogger(FirebaseFirestoreService.name)\r\n  constructor(\r\n    @Inject(IFirebaseRepository)\r\n    private readonly firebaseRepository: IFirebaseRepository,\r\n  ) {}\r\n\r\n  public async getCollection(collectionName: string): Promise<FirebaseFirestore.CollectionReference> {\r\n    return await this.firebaseRepository.getCollection(collectionName)\r\n  }\r\n}\r\n"]}