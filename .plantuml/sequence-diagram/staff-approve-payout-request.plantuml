@startuml
actor Staff
activate Staff

participant PayoutRequestScreen
Staff -> PayoutRequestScreen: access payout request
activate PayoutRequestScreen
PayoutRequestScreen -> PayoutRequestScreen: click Approve payout request

participant PayoutRequestController
PayoutRequestScreen -> PayoutRequestController: approve(id)
activate PayoutRequestController

participant IPayoutRequestService
PayoutRequestController -> IPayoutRequestService: approvePayoutRequest(id)
activate IPayoutRequestService

IPayoutRequestService -> IPayoutRequestService: validate payout request
alt invalid payout request and garden
    IPayoutRequestService --> PayoutRequestController: show error message
    PayoutRequestController --> PayoutRequestScreen: show error message
end

participant IPayoutRequestService
participant IPayoutRequestRepository
IPayoutRequestService -> IPayoutRequestRepository: findOneAndUpdate(id, APPROVED)
activate IPayoutRequestRepository

database Database
IPayoutRequestRepository -> Database: execute(payload)
activate Database
Database --> IPayoutRequestRepository: return data
deactivate Database

IPayoutRequestRepository --> IPayoutRequestService: return data
deactivate IPayoutRequestRepository

participant ITransactionService
IPayoutRequestService -> ITransactionService: create new payout transaction
activate ITransactionService

ITransactionService --> IPayoutRequestService: return result
deactivate ITransactionService

participant IQueueProducerService
IPayoutRequestService -> IQueueProducerService: removeJob(PayoutRequestAutoExpired, id)
activate IQueueProducerService

queue Queue
IQueueProducerService -> Queue: remove(payload)
activate Queue
Queue --> IQueueProducerService: return result
deactivate Queue

IQueueProducerService --> IPayoutRequestService: return result
deactivate IQueueProducerService

participant INotificationService
IPayoutRequestService -> INotificationService: send notification to instructor
activate INotificationService

INotificationService --> IPayoutRequestService: return result
deactivate INotificationService

participant IReportService
IPayoutRequestService -> IReportService: update report
activate IReportService

IReportService --> IPayoutRequestService: return result
deactivate IReportService

IPayoutRequestService --> PayoutRequestController: return data
deactivate IPayoutRequestService
database Database

PayoutRequestController --> PayoutRequestScreen: show success message
deactivate PayoutRequestController

queue Queue
@enduml